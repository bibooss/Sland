{"version":3,"sources":["../../src/pages/home/home.module.ts","../../node_modules/@angular/material/esm5/core.es5.js","../../node_modules/@angular/cdk/esm5/coercion.es5.js","../../node_modules/@angular/cdk/esm5/platform.es5.js","../../node_modules/@angular/material/esm5/card.es5.js","../../node_modules/@angular/cdk/esm5/bidi.es5.js","../../node_modules/@angular/cdk/esm5/keycodes.es5.js","../../src/pages/home/home.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACd;AACmB;AAerD;IAAA;IAKA,CAAC;IALY,cAAc;QAZ1B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,uDAAQ;aACT;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,uDAAQ,CAAC;gBAClC,6EAAa;aACd;YACD,eAAe,EAAE;gBACf,uDAAQ;aACT;SACF,CAAC;OACW,cAAc,CAK1B;IAAD,qBAAC;CAAA;AAL0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClB3B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAC6N;AACxM;AACS;AAC9B;AACgC;AACd;AACG;AACS;AACP;AAC2C;AAC3C;;AAEvB;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,yBAAyB;AACzB,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD;AAClD,SAAS,gCAAgC,wEAAiB,GAAG,uGAAgD,IAAI;AACjH,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB,uBAAuB,EAAE;AAClD;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,sHAA+C,EAAE;AAC/E;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB,oBAAoB,EAAE;AAC/C;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB,4BAA4B,EAAE;AACvD;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,2HAAoD,EAAE;AACpF;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB,4CAA4C,EAAE;AACvE;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE,0CAA0C,EAAE;AACzE,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,YAAY,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,4BAA4B,EAAE;AACnD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sBAAsB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,6BAA6B,EAAE,IAAI,EAAE;AAClG;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB,EAAE,UAAU,YAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE,kDAAkD,eAAe;AAC9F,2CAA2C,iFAAiF,EAAE;AAC9H;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE,kDAAkD,iBAAiB;AAChG;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE,kDAAkD,iBAAiB;AAChG;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,EAAE,gDAAgD,kBAAkB;AAC/F;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAA2C,kBAAkB,kBAAkB;AAC/E;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,SAAS,0EAAmB;AAC5B;AACA;AACA,oDAAoD;AACpD,SAAS,gCAAgC,wEAAiB,GAAG,gGAAyC,IAAI;AAC1G,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,oBAAoB,oDAAoD;AACxE,yBAAyB,kCAAkC;AAC3D,wBAAwB,iDAAiD;AACzE,6BAA6B,iCAAiC;AAC9D;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,yBAAyB,oDAAoD;AAC7E;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iCAAiC,6CAA6C;AAC9E,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD,WAAW;AACjE;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,0EAAmB;AAC5B;AACA;AACA,+DAA+D,WAAW;AAC1E;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,0EAAmB;AAC5B;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE,yCAAyC,+BAA+B;AACjG,uBAAuB,EAAE,+CAA+C,gCAAgC;AACxG;AACA;AACA;AACA;AACA,0BAA0B,EAAE;AAC5B;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,uBAAuB,EAAE,iCAAiC,EAAE;AAC5D;AACA,8CAA8C,uCAAuC,EAAE;AACvF;AACA;AACA;AACA,SAAS,0EAAmB;AAC5B;AACA;AACA,gDAAgD;AAChD,SAAS,gCAAgC,wEAAiB,GAAG,mGAA4C,IAAI;AAC7G,SAAS,sCAAsC,wEAAiB,IAAI;AACpE,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,0CAA0C,WAAW;AACrD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kJAA2E,EAAE,MAAM,gBAAgB;AACnG;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C,uBAAuB,EAAE;AACzB,uBAAuB,EAAE,wFAAiC;AAC1D;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE,wFAAiC;AAC1D;AACA;AACA;AACA;AACA;AACA,iDAAiD,YAAY,EAAE;AAC/D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uDAAuD,yBAAyB,EAAE;AAClF;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,+BAA+B,WAAW;AAC1C,oDAAoD,8BAA8B,EAAE;AACpF;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,wDAAwD,EAAE;AAC/E;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,yHAAkE;AAClE;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,6FAAsC;AACtC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,4CAA4C;AAC5C,SAAS,2EAAoB;AAC7B,SAAS,uEAAgB;AACzB,SAAS,iFAAkB;AAC3B,SAAS,gCAAgC,wEAAiB,GAAG,0GAAmD,IAAI;AACpH,MAAM;AACN;AACA,mBAAmB,gGAAyC;AAC5D,uBAAuB,oGAA6C;AACpE,sBAAsB,mGAA4C;AAClE,oBAAoB,iGAA0C;AAC9D,yBAAyB,sGAA+C;AACxE,uBAAuB,oGAA6C;AACpE,sBAAsB,mGAA4C;AAClE,qBAAqB,kGAA2C;AAChE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iFAA0B;AACnC;AACA;AACA;AACA,mDAAmD,WAAW,YAAY,iBAAiB,kBAAkB,eAAe,qBAAqB,sBAAsB,sBAAsB,kBAAkB,cAAc,mGAAmG,4BAA4B,kBAAkB,UAAU,WAAW,qCAAqC,gDAAgD,wGAAwG,YAAY,8BAA8B,eAAe,0CAA0C,QAAQ,SAAS,WAAW,UAAU,oCAAoC,QAAQ,SAAS,WAAW,WAAW,mCAAmC,yBAAyB,UAAU;AAC11B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,mBAAmB,qEAAc;AACjC,sBAAsB,qEAAc;AACpC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,0DAA0D,WAAW;AACrE;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iFAA0B;AACnC;AACA,uFAAuF,SAAS;AAChG;AACA;AACA;AACA;AACA,kDAAkD,mBAAmB,gBAAgB,uBAAuB,cAAc,iBAAiB,YAAY,eAAe,gBAAgB,qBAAqB,yBAAyB,sBAAsB,qBAAqB,iBAAiB,eAAe,8BAA8B,eAAe,8BAA8B,iBAAiB,8BAA8B,kBAAkB,wCAAwC,iBAAiB,eAAe;AACngB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,8CAA8C,WAAW;AACzD;AACA,mBAAmB,qEAAc;AACjC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,8CAA8C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,iBAAiB,EAAE;AACxC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,8DAA8D,EAAE;AACrF;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,sHAA+C,EAAE;AAC3E;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,mDAAmD,EAAE;AAC1E;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA,SAAS,iFAA0B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,0CAA0C,mBAAmB,gBAAgB,uBAAuB,cAAc,iBAAiB,YAAY,eAAe,gBAAgB,qBAAqB,kBAAkB,eAAe,UAAU,aAAa,mBAAmB,eAAe,sBAAsB,mBAAmB,sBAAsB,eAAe,sBAAsB,iBAAiB,sBAAsB,kBAAkB,gCAAgC,iBAAiB,eAAe,gCAAgC,yBAAyB,sBAAsB,qBAAqB,iBAAiB,eAAe,oDAAoD,kBAAkB,8DAA8D,kBAAkB,mBAAmB,iBAAiB,qBAAqB,YAAY,gBAAgB,uBAAuB,mBAAmB,MAAM,OAAO,QAAQ,SAAS,kBAAkB,oBAAoB,6CAA6C,mBAAmB,YAAY,4BAA4B,iBAAiB,sCAAsC,gBAAgB,eAAe;AACrpC;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,4CAA4C;AAC5C,SAAS,2EAAoB;AAC7B,SAAS,kFAA2B;AACpC,SAAS,gCAAgC,wEAAiB,GAAG,4GAAqD,IAAI;AACtH,SAAS,kCAAkC,wEAAiB,IAAI;AAChE,MAAM;AACN;AACA,mBAAmB,qEAAc;AACjC,sBAAsB,qEAAc;AACpC,+BAA+B,sEAAe;AAC9C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,4BAA4B,EAAE,UAAU,qBAAqB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;;AAEQ;AACR;;;;;;;;;;;;AC9rFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,wCAAwC,EAAE;AAC1C;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;;AAEQ;AACR;;;;;;;;;;;;;AC7EA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAC+B;;AAE/B;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,uEAAuE,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0EAAmB;AAC5B;AACA;AACA,2CAA2C,WAAW;AACtD;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,uDAAuD,EAAE,sCAAsC;AAC/F,kCAAkC,qCAAqC;AACvE,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;;;;;;ACxLA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4F;AAClE;;AAE1B;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,mBAAmB,qEAAc;AACjC;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iFAA0B;AACnC;AACA;AACA,wCAAwC,oDAAoD,cAAc,kBAAkB,aAAa,kBAAkB,wCAAwC,iGAAiG,uBAAuB,kBAAkB,OAAO,WAAW,iCAAiC,UAAU,QAAQ,yCAAyC,gBAAgB,SAAS,6CAA6C,UAAU,mBAAmB,eAAe,gBAAgB,uEAAuE,cAAc,mBAAmB,kBAAkB,kBAAkB,mBAAmB,cAAc,4BAA4B,aAAa,yBAAyB,gBAAgB,wBAAwB,0BAA0B,mBAAmB,YAAY,aAAa,YAAY,iBAAiB,cAAc,2BAA2B,mEAAmE,aAAa,iBAAiB,aAAa,mBAAmB,sBAAsB,aAAa,iBAAiB,YAAY,WAAW,kBAAkB,cAAc,yDAAyD,cAAc,sBAAsB,aAAa,8BAA8B,cAAc,mBAAmB,WAAW,YAAY,mBAAmB,YAAY,aAAa,mBAAmB,YAAY,aAAa,yBAAyB,UAAU,kBAAkB,kBAAkB,iBAAiB,kBAAkB,gBAAgB,wBAAwB,kBAAkB,sBAAsB,SAAS,mBAAmB,cAAc,eAAe,iBAAiB,kBAAkB,iBAAiB,kBAAkB,oBAAoB,sDAAsD,aAAa,gGAAgG,gBAAgB,4BAA4B,iBAAiB,uCAAuC,oBAAoB,iBAAiB,2FAA2F,cAAc,eAAe,uEAAuE,gBAAgB,sDAAsD,gBAAgB,yCAAyC,gBAAgB,wCAAwC,mBAAmB;AACt+E;AACA;AACA;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,0CAA0C,WAAW;AACrD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iFAA0B;AACnC;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iFAA0B;AACnC;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;;AAEQ;AACR;;;;;;;;;;;;;;ACvVA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACyG;AACtF;;AAEnB;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,oCAAoC,EAAE;AACtC;AACA;AACA;AACA,SAAS,0EAAmB;AAC5B;AACA;AACA,iDAAiD;AACjD,SAAS,gCAAgC,wEAAiB,GAAG,6FAAsC,IAAI;AACvG,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,kBAAkB,EAAE;AACzC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,iBAAiB,EAAE;AACxC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iCAAiC,4CAA4C;AAC7E,2BAA2B,iBAAiB;AAC5C;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sCAAsC,WAAW;AACjD;AACA,oBAAoB,4FAAqC;AACzD,iBAAiB,qEAAc;AAC/B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,yBAAyB,wGAA+C;AACxE;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,6CAA6C,WAAW;AACxD;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5LA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;;AC9C0C;AACe;AAYzD;IAiCE,kBAAmB,OAAsB,EAAS,SAAoB;QAAnD,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QA7BxE,aAAQ,GAAG;YACT,EAAC,IAAI,EAAC,QAAQ;gBAChB,GAAG,EAAC,CAAC,MAAM,EAAC,GAAG,EAAC,OAAO;gBACvB,IAAI,EAAC,UAAU;gBACf,MAAM,EAAC,EAAE;aACR;YACD,EAAC,IAAI,EAAC,SAAS;gBACf,GAAG,EAAC,OAAO,EAAC,GAAG,EAAC,CAAC,OAAO;gBACxB,IAAI,EAAC,UAAU;gBACf,MAAM,EAAC,EAAE;aAER;YACD,EAAC,IAAI,EAAC,QAAQ;gBACd,GAAG,EAAC,CAAC,MAAM,EAAC,GAAG,EAAC,OAAO;gBACvB,IAAI,EAAC,UAAU;gBACf,MAAM,EAAC,EAAE;gBACT,IAAI,EAAC,EAAE;aAEN;YACD,EAAC,IAAI,EAAC,OAAO;gBACb,GAAG,EAAC,MAAM,EAAC,GAAG,EAAC,CAAC,IAAI;gBACpB,IAAI,EAAC,UAAU;gBACf,MAAM,EAAC,EAAE;aAER;SACA,CAAC;IAOA,CAAC;IAIF,0BAAO,GAAP,UAAQ,EAAE;QAET,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;QAEpB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAE7B,CAAC;IA9CU,QAAQ;QAPpB,wEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;WACG;SAEzB,CAAC;iBAoCsE;OAjC3D,QAAQ,CAgDpB;IAAD,CAAC;AAAA;SAhDY,QAAQ,e","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { HomePage } from './home';\r\nimport {MatCardModule} from '@angular/material/card';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HomePage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(HomePage),\r\n    MatCardModule\r\n  ],\r\n  entryComponents: [\r\n    HomePage\r\n  ]\r\n})\r\nexport class HomePageModule {\r\n\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.module.ts","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, ElementRef, EventEmitter, Inject, Injectable, InjectionToken, Input, LOCALE_ID, NgModule, NgZone, Optional, Output, ViewEncapsulation, isDevMode } from '@angular/core';\r\nimport { BidiModule } from '@angular/cdk/bidi';\r\nimport { __assign, __extends } from 'tslib';\r\nimport * as tslib_1 from 'tslib';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { HammerGestureConfig } from '@angular/platform-browser';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Platform, PlatformModule, supportsPassiveEventListeners } from '@angular/cdk/platform';\r\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * \\@docs-private\r\n */\r\nvar AnimationCurves = /** @class */ (function () {\r\n    function AnimationCurves() {\r\n    }\r\n    AnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\r\n    AnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\r\n    AnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\r\n    AnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\r\n    return AnimationCurves;\r\n}());\r\n/**\r\n * \\@docs-private\r\n */\r\nvar AnimationDurations = /** @class */ (function () {\r\n    function AnimationDurations() {\r\n    }\r\n    AnimationDurations.COMPLEX = '375ms';\r\n    AnimationDurations.ENTERING = '225ms';\r\n    AnimationDurations.EXITING = '195ms';\r\n    return AnimationDurations;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Injection token that configures whether the Material sanity checks are enabled.\r\n */\r\nvar MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks');\r\n/**\r\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\r\n * components. This includes Bidi, etc.\r\n *\r\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\r\n */\r\nvar MatCommonModule = /** @class */ (function () {\r\n    function MatCommonModule(_sanityChecksEnabled) {\r\n        this._sanityChecksEnabled = _sanityChecksEnabled;\r\n        /**\r\n         * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\r\n         */\r\n        this._hasDoneGlobalChecks = false;\r\n        /**\r\n         * Whether we've already checked for HammerJs availability.\r\n         */\r\n        this._hasCheckedHammer = false;\r\n        /**\r\n         * Reference to the global `document` object.\r\n         */\r\n        this._document = typeof document === 'object' && document ? document : null;\r\n        /**\r\n         * Reference to the global 'window' object.\r\n         */\r\n        this._window = typeof window === 'object' && window ? window : null;\r\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\r\n            this._checkDoctypeIsDefined();\r\n            this._checkThemeIsPresent();\r\n            this._hasDoneGlobalChecks = true;\r\n        }\r\n    }\r\n    /**\r\n     * Whether any sanity checks are enabled\r\n     * @return {?}\r\n     */\r\n    MatCommonModule.prototype._areChecksEnabled = /**\r\n     * Whether any sanity checks are enabled\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\r\n    };\r\n    /**\r\n     * Whether the code is running in tests.\r\n     * @return {?}\r\n     */\r\n    MatCommonModule.prototype._isTestEnv = /**\r\n     * Whether the code is running in tests.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MatCommonModule.prototype._checkDoctypeIsDefined = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._document && !this._document.doctype) {\r\n            console.warn('Current document does not have a doctype. This may cause ' +\r\n                'some Angular Material components not to behave as expected.');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MatCommonModule.prototype._checkThemeIsPresent = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._document && typeof getComputedStyle === 'function') {\r\n            var /** @type {?} */ testElement = this._document.createElement('div');\r\n            testElement.classList.add('mat-theme-loaded-marker');\r\n            this._document.body.appendChild(testElement);\r\n            var /** @type {?} */ computedStyle = getComputedStyle(testElement);\r\n            // In some situations, the computed style of the test element can be null. For example in\r\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\r\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\r\n            if (computedStyle && computedStyle.display !== 'none') {\r\n                console.warn('Could not find Angular Material core theme. Most Material ' +\r\n                    'components may not work as expected. For more info refer ' +\r\n                    'to the theming guide: https://material.angular.io/guide/theming');\r\n            }\r\n            this._document.body.removeChild(testElement);\r\n        }\r\n    };\r\n    /** Checks whether HammerJS is available. */\r\n    /**\r\n     * Checks whether HammerJS is available.\r\n     * @return {?}\r\n     */\r\n    MatCommonModule.prototype._checkHammerIsAvailable = /**\r\n     * Checks whether HammerJS is available.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._hasCheckedHammer || !this._window) {\r\n            return;\r\n        }\r\n        if (this._areChecksEnabled() && !this._window['Hammer']) {\r\n            console.warn('Could not find HammerJS. Certain Angular Material components may not work correctly.');\r\n        }\r\n        this._hasCheckedHammer = true;\r\n    };\r\n    MatCommonModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [BidiModule],\r\n                    exports: [BidiModule],\r\n                    providers: [{\r\n                            provide: MATERIAL_SANITY_CHECKS, useValue: true,\r\n                        }],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCommonModule.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS,] },] },\r\n    ]; };\r\n    return MatCommonModule;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * \\@docs-private\r\n * @record\r\n */\r\n\r\n/**\r\n * Mixin to augment a directive with a `disabled` property.\r\n * @template T\r\n * @param {?} base\r\n * @return {?}\r\n */\r\nfunction mixinDisabled(base) {\r\n    return /** @class */ (function (_super) {\r\n        __extends(class_1, _super);\r\n        function class_1() {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var _this = _super.apply(this, args) || this;\r\n            _this._disabled = false;\r\n            return _this;\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"disabled\", {\r\n            get: /**\r\n             * @return {?}\r\n             */\r\n            function () { return this._disabled; },\r\n            set: /**\r\n             * @param {?} value\r\n             * @return {?}\r\n             */\r\n            function (value) { this._disabled = coerceBooleanProperty(value); },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return class_1;\r\n    }(base));\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * \\@docs-private\r\n * @record\r\n */\r\n\r\n/**\r\n * \\@docs-private\r\n * @record\r\n */\r\n\r\n/**\r\n * Mixin to augment a directive with a `color` property.\r\n * @template T\r\n * @param {?} base\r\n * @param {?=} defaultColor\r\n * @return {?}\r\n */\r\nfunction mixinColor(base, defaultColor) {\r\n    return /** @class */ (function (_super) {\r\n        __extends(class_1, _super);\r\n        function class_1() {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var _this = _super.apply(this, args) || this;\r\n            // Set the default color that can be specified from the mixin.\r\n            // Set the default color that can be specified from the mixin.\r\n            _this.color = defaultColor;\r\n            return _this;\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"color\", {\r\n            get: /**\r\n             * @return {?}\r\n             */\r\n            function () { return this._color; },\r\n            set: /**\r\n             * @param {?} value\r\n             * @return {?}\r\n             */\r\n            function (value) {\r\n                var /** @type {?} */ colorPalette = value || defaultColor;\r\n                if (colorPalette !== this._color) {\r\n                    if (this._color) {\r\n                        this._elementRef.nativeElement.classList.remove(\"mat-\" + this._color);\r\n                    }\r\n                    if (colorPalette) {\r\n                        this._elementRef.nativeElement.classList.add(\"mat-\" + colorPalette);\r\n                    }\r\n                    this._color = colorPalette;\r\n                }\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return class_1;\r\n    }(base));\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * \\@docs-private\r\n * @record\r\n */\r\n\r\n/**\r\n * Mixin to augment a directive with a `disableRipple` property.\r\n * @template T\r\n * @param {?} base\r\n * @return {?}\r\n */\r\nfunction mixinDisableRipple(base) {\r\n    return /** @class */ (function (_super) {\r\n        __extends(class_1, _super);\r\n        function class_1() {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var _this = _super.apply(this, args) || this;\r\n            _this._disableRipple = false;\r\n            return _this;\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"disableRipple\", {\r\n            /** Whether the ripple effect is disabled or not. */\r\n            get: /**\r\n             * Whether the ripple effect is disabled or not.\r\n             * @return {?}\r\n             */\r\n            function () { return this._disableRipple; },\r\n            set: /**\r\n             * @param {?} value\r\n             * @return {?}\r\n             */\r\n            function (value) { this._disableRipple = coerceBooleanProperty(value); },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return class_1;\r\n    }(base));\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * \\@docs-private\r\n * @record\r\n */\r\n\r\n/**\r\n * Mixin to augment a directive with a `tabIndex` property.\r\n * @template T\r\n * @param {?} base\r\n * @param {?=} defaultTabIndex\r\n * @return {?}\r\n */\r\nfunction mixinTabIndex(base, defaultTabIndex) {\r\n    if (defaultTabIndex === void 0) { defaultTabIndex = 0; }\r\n    return /** @class */ (function (_super) {\r\n        __extends(class_1, _super);\r\n        function class_1() {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var _this = _super.apply(this, args) || this;\r\n            _this._tabIndex = defaultTabIndex;\r\n            return _this;\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"tabIndex\", {\r\n            get: /**\r\n             * @return {?}\r\n             */\r\n            function () { return this.disabled ? -1 : this._tabIndex; },\r\n            set: /**\r\n             * @param {?} value\r\n             * @return {?}\r\n             */\r\n            function (value) {\r\n                // If the specified tabIndex value is null or undefined, fall back to the default value.\r\n                this._tabIndex = value != null ? value : defaultTabIndex;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return class_1;\r\n    }(base));\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * \\@docs-private\r\n * @record\r\n */\r\n\r\n/**\r\n * \\@docs-private\r\n * @record\r\n */\r\n\r\n/**\r\n * Mixin to augment a directive with updateErrorState method.\r\n * For component with `errorState` and need to update `errorState`.\r\n * @template T\r\n * @param {?} base\r\n * @return {?}\r\n */\r\nfunction mixinErrorState(base) {\r\n    return /** @class */ (function (_super) {\r\n        __extends(class_1, _super);\r\n        function class_1() {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var _this = _super.apply(this, args) || this;\r\n            /**\r\n             * Whether the component is in an error state.\r\n             */\r\n            _this.errorState = false;\r\n            /**\r\n             * Stream that emits whenever the state of the input changes such that the wrapping\r\n             * `MatFormField` needs to run change detection.\r\n             */\r\n            _this.stateChanges = new Subject();\r\n            return _this;\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        class_1.prototype.updateErrorState = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            var /** @type {?} */ oldState = this.errorState;\r\n            var /** @type {?} */ parent = this._parentFormGroup || this._parentForm;\r\n            var /** @type {?} */ matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\r\n            var /** @type {?} */ control = this.ngControl ? /** @type {?} */ (this.ngControl.control) : null;\r\n            var /** @type {?} */ newState = matcher.isErrorState(control, parent);\r\n            if (newState !== oldState) {\r\n                this.errorState = newState;\r\n                this.stateChanges.next();\r\n            }\r\n        };\r\n        return class_1;\r\n    }(base));\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Mixin that adds an initialized property to a directive which, when subscribed to, will emit a\r\n * value once markInitialized has been called, which should be done during the ngOnInit function.\r\n * If the subscription is made after it has already been marked as initialized, then it will trigger\r\n * an emit immediately.\r\n * \\@docs-private\r\n * @record\r\n */\r\n\r\n/**\r\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\r\n * @template T\r\n * @param {?} base\r\n * @return {?}\r\n */\r\nfunction mixinInitialized(base) {\r\n    return /** @class */ (function (_super) {\r\n        __extends(class_1, _super);\r\n        function class_1() {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var _this = _super.apply(this, args) || this;\r\n            /**\r\n             * Whether this directive has been marked as initialized.\r\n             */\r\n            _this._isInitialized = false;\r\n            /**\r\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\r\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\r\n             * not expect to be populated after.\r\n             */\r\n            _this._pendingSubscribers = [];\r\n            /**\r\n             * Observable stream that emits when the directive initializes. If already initialized, the\r\n             * subscriber is stored to be notified once _markInitialized is called.\r\n             */\r\n            _this.initialized = new Observable(function (subscriber) {\r\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\r\n                // when _markInitialized is called.\r\n                if (_this._isInitialized) {\r\n                    _this._notifySubscriber(subscriber);\r\n                }\r\n                else {\r\n                    /** @type {?} */ ((_this._pendingSubscribers)).push(subscriber);\r\n                }\r\n            });\r\n            return _this;\r\n        }\r\n        /**\r\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\r\n         * of ngOnInit.\r\n         * @docs-private\r\n         */\r\n        /**\r\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\r\n         * of ngOnInit.\r\n         * \\@docs-private\r\n         * @return {?}\r\n         */\r\n        class_1.prototype._markInitialized = /**\r\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\r\n         * of ngOnInit.\r\n         * \\@docs-private\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            if (this._isInitialized) {\r\n                throw Error('This directive has already been marked as initialized and ' +\r\n                    'should not be called twice.');\r\n            }\r\n            this._isInitialized = true; /** @type {?} */\r\n            ((this._pendingSubscribers)).forEach(this._notifySubscriber);\r\n            this._pendingSubscribers = null;\r\n        };\r\n        /** Emits and completes the subscriber stream (should only emit once). */\r\n        /**\r\n         * Emits and completes the subscriber stream (should only emit once).\r\n         * @param {?} subscriber\r\n         * @return {?}\r\n         */\r\n        class_1.prototype._notifySubscriber = /**\r\n         * Emits and completes the subscriber stream (should only emit once).\r\n         * @param {?} subscriber\r\n         * @return {?}\r\n         */\r\n        function (subscriber) {\r\n            subscriber.next();\r\n            subscriber.complete();\r\n        };\r\n        return class_1;\r\n    }(base));\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * InjectionToken for datepicker that can be used to override default locale code.\r\n */\r\nvar MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE');\r\n/**\r\n * Provider for MAT_DATE_LOCALE injection token.\r\n */\r\nvar MAT_DATE_LOCALE_PROVIDER = { provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID };\r\n/**\r\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\r\n * @abstract\r\n */\r\nvar DateAdapter = /** @class */ (function () {\r\n    function DateAdapter() {\r\n        this._localeChanges = new Subject();\r\n    }\r\n    Object.defineProperty(DateAdapter.prototype, \"localeChanges\", {\r\n        /** A stream that emits when the locale changes. */\r\n        get: /**\r\n         * A stream that emits when the locale changes.\r\n         * @return {?}\r\n         */\r\n        function () { return this._localeChanges; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\r\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\r\n     * string). The default implementation does not allow any deserialization, it simply checks that\r\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\r\n     * method on all of it's `@Input()` properties that accept dates. It is therefore possible to\r\n     * support passing values from your backend directly to these properties by overriding this method\r\n     * to also deserialize the format used by your backend.\r\n     * @param value The value to be deserialized into a date object.\r\n     * @returns The deserialized date object, either a valid date, null if the value can be\r\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\r\n     */\r\n    /**\r\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\r\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\r\n     * string). The default implementation does not allow any deserialization, it simply checks that\r\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\r\n     * method on all of it's `\\@Input()` properties that accept dates. It is therefore possible to\r\n     * support passing values from your backend directly to these properties by overriding this method\r\n     * to also deserialize the format used by your backend.\r\n     * @param {?} value The value to be deserialized into a date object.\r\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\r\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\r\n     */\r\n    DateAdapter.prototype.deserialize = /**\r\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\r\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\r\n     * string). The default implementation does not allow any deserialization, it simply checks that\r\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\r\n     * method on all of it's `\\@Input()` properties that accept dates. It is therefore possible to\r\n     * support passing values from your backend directly to these properties by overriding this method\r\n     * to also deserialize the format used by your backend.\r\n     * @param {?} value The value to be deserialized into a date object.\r\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\r\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\r\n     */\r\n    function (value) {\r\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\r\n            return value;\r\n        }\r\n        return this.invalid();\r\n    };\r\n    /**\r\n     * Sets the locale used for all dates.\r\n     * @param locale The new locale.\r\n     */\r\n    /**\r\n     * Sets the locale used for all dates.\r\n     * @param {?} locale The new locale.\r\n     * @return {?}\r\n     */\r\n    DateAdapter.prototype.setLocale = /**\r\n     * Sets the locale used for all dates.\r\n     * @param {?} locale The new locale.\r\n     * @return {?}\r\n     */\r\n    function (locale) {\r\n        this.locale = locale;\r\n        this._localeChanges.next();\r\n    };\r\n    /**\r\n     * Compares two dates.\r\n     * @param first The first date to compare.\r\n     * @param second The second date to compare.\r\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\r\n     *     a number greater than 0 if the first date is later.\r\n     */\r\n    /**\r\n     * Compares two dates.\r\n     * @param {?} first The first date to compare.\r\n     * @param {?} second The second date to compare.\r\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\r\n     *     a number greater than 0 if the first date is later.\r\n     */\r\n    DateAdapter.prototype.compareDate = /**\r\n     * Compares two dates.\r\n     * @param {?} first The first date to compare.\r\n     * @param {?} second The second date to compare.\r\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\r\n     *     a number greater than 0 if the first date is later.\r\n     */\r\n    function (first, second) {\r\n        return this.getYear(first) - this.getYear(second) ||\r\n            this.getMonth(first) - this.getMonth(second) ||\r\n            this.getDate(first) - this.getDate(second);\r\n    };\r\n    /**\r\n     * Checks if two dates are equal.\r\n     * @param first The first date to check.\r\n     * @param second The second date to check.\r\n     * @returns Whether the two dates are equal.\r\n     *     Null dates are considered equal to other null dates.\r\n     */\r\n    /**\r\n     * Checks if two dates are equal.\r\n     * @param {?} first The first date to check.\r\n     * @param {?} second The second date to check.\r\n     * @return {?} Whether the two dates are equal.\r\n     *     Null dates are considered equal to other null dates.\r\n     */\r\n    DateAdapter.prototype.sameDate = /**\r\n     * Checks if two dates are equal.\r\n     * @param {?} first The first date to check.\r\n     * @param {?} second The second date to check.\r\n     * @return {?} Whether the two dates are equal.\r\n     *     Null dates are considered equal to other null dates.\r\n     */\r\n    function (first, second) {\r\n        if (first && second) {\r\n            var /** @type {?} */ firstValid = this.isValid(first);\r\n            var /** @type {?} */ secondValid = this.isValid(second);\r\n            if (firstValid && secondValid) {\r\n                return !this.compareDate(first, second);\r\n            }\r\n            return firstValid == secondValid;\r\n        }\r\n        return first == second;\r\n    };\r\n    /**\r\n     * Clamp the given date between min and max dates.\r\n     * @param date The date to clamp.\r\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\r\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\r\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\r\n     *     otherwise `date`.\r\n     */\r\n    /**\r\n     * Clamp the given date between min and max dates.\r\n     * @param {?} date The date to clamp.\r\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\r\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\r\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\r\n     *     otherwise `date`.\r\n     */\r\n    DateAdapter.prototype.clampDate = /**\r\n     * Clamp the given date between min and max dates.\r\n     * @param {?} date The date to clamp.\r\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\r\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\r\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\r\n     *     otherwise `date`.\r\n     */\r\n    function (date, min, max) {\r\n        if (min && this.compareDate(date, min) < 0) {\r\n            return min;\r\n        }\r\n        if (max && this.compareDate(date, max) > 0) {\r\n            return max;\r\n        }\r\n        return date;\r\n    };\r\n    return DateAdapter;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\nvar MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Whether the browser supports the Intl API.\r\n */\r\nvar SUPPORTS_INTL_API = typeof Intl != 'undefined';\r\n/**\r\n * The default month names to use if Intl API is not available.\r\n */\r\nvar DEFAULT_MONTH_NAMES = {\r\n    'long': [\r\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\r\n        'October', 'November', 'December'\r\n    ],\r\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\r\n};\r\nvar ɵ0$1 = function (i) { return String(i + 1); };\r\n/**\r\n * The default date names to use if Intl API is not available.\r\n */\r\nvar DEFAULT_DATE_NAMES = range(31, ɵ0$1);\r\n/**\r\n * The default day of the week names to use if Intl API is not available.\r\n */\r\nvar DEFAULT_DAY_OF_WEEK_NAMES = {\r\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\r\n};\r\n/**\r\n * Matches strings that have the form of a valid RFC 3339 string\r\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\r\n * because the regex will match strings an with out of bounds month, date, etc.\r\n */\r\nvar ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\r\n/**\r\n * Creates an array and fills it with values.\r\n * @template T\r\n * @param {?} length\r\n * @param {?} valueFunction\r\n * @return {?}\r\n */\r\nfunction range(length, valueFunction) {\r\n    var /** @type {?} */ valuesArray = Array(length);\r\n    for (var /** @type {?} */ i = 0; i < length; i++) {\r\n        valuesArray[i] = valueFunction(i);\r\n    }\r\n    return valuesArray;\r\n}\r\n/**\r\n * Adapts the native JS Date for use with cdk-based components that work with dates.\r\n */\r\nvar NativeDateAdapter = /** @class */ (function (_super) {\r\n    __extends(NativeDateAdapter, _super);\r\n    function NativeDateAdapter(matDateLocale) {\r\n        var _this = _super.call(this) || this;\r\n        _super.prototype.setLocale.call(_this, matDateLocale);\r\n        // IE does its own time zone correction, so we disable this on IE.\r\n        // TODO(mmalerba): replace with checks from PLATFORM, logic currently duplicated to avoid\r\n        // breaking change from injecting the Platform.\r\n        var /** @type {?} */ isBrowser = typeof document === 'object' && !!document;\r\n        var /** @type {?} */ isIE = isBrowser && /(msie|trident)/i.test(navigator.userAgent);\r\n        _this.useUtcForDisplay = !isIE;\r\n        _this._clampDate = isIE || (isBrowser && /(edge)/i.test(navigator.userAgent));\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.getYear = /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    function (date) {\r\n        return date.getFullYear();\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.getMonth = /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    function (date) {\r\n        return date.getMonth();\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.getDate = /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    function (date) {\r\n        return date.getDate();\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.getDayOfWeek = /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    function (date) {\r\n        return date.getDay();\r\n    };\r\n    /**\r\n     * @param {?} style\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.getMonthNames = /**\r\n     * @param {?} style\r\n     * @return {?}\r\n     */\r\n    function (style) {\r\n        var _this = this;\r\n        if (SUPPORTS_INTL_API) {\r\n            var /** @type {?} */ dtf_1 = new Intl.DateTimeFormat(this.locale, { month: style });\r\n            return range(12, function (i) { return _this._stripDirectionalityCharacters(dtf_1.format(new Date(2017, i, 1))); });\r\n        }\r\n        return DEFAULT_MONTH_NAMES[style];\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.getDateNames = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        if (SUPPORTS_INTL_API) {\r\n            var /** @type {?} */ dtf_2 = new Intl.DateTimeFormat(this.locale, { day: 'numeric' });\r\n            return range(31, function (i) {\r\n                return _this._stripDirectionalityCharacters(dtf_2.format(new Date(2017, 0, i + 1)));\r\n            });\r\n        }\r\n        return DEFAULT_DATE_NAMES;\r\n    };\r\n    /**\r\n     * @param {?} style\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.getDayOfWeekNames = /**\r\n     * @param {?} style\r\n     * @return {?}\r\n     */\r\n    function (style) {\r\n        var _this = this;\r\n        if (SUPPORTS_INTL_API) {\r\n            var /** @type {?} */ dtf_3 = new Intl.DateTimeFormat(this.locale, { weekday: style });\r\n            return range(7, function (i) {\r\n                return _this._stripDirectionalityCharacters(dtf_3.format(new Date(2017, 0, i + 1)));\r\n            });\r\n        }\r\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.getYearName = /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    function (date) {\r\n        if (SUPPORTS_INTL_API) {\r\n            var /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric' });\r\n            return this._stripDirectionalityCharacters(dtf.format(date));\r\n        }\r\n        return String(this.getYear(date));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.getFirstDayOfWeek = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\r\n        return 0;\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.getNumDaysInMonth = /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    function (date) {\r\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.clone = /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    function (date) {\r\n        return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date));\r\n    };\r\n    /**\r\n     * @param {?} year\r\n     * @param {?} month\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.createDate = /**\r\n     * @param {?} year\r\n     * @param {?} month\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    function (year, month, date) {\r\n        // Check for invalid month and date (except upper bound on date which we have to check after\r\n        // creating the Date).\r\n        if (month < 0 || month > 11) {\r\n            throw Error(\"Invalid month index \\\"\" + month + \"\\\". Month index has to be between 0 and 11.\");\r\n        }\r\n        if (date < 1) {\r\n            throw Error(\"Invalid date \\\"\" + date + \"\\\". Date has to be greater than 0.\");\r\n        }\r\n        var /** @type {?} */ result = this._createDateWithOverflow(year, month, date);\r\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\r\n        if (result.getMonth() != month) {\r\n            throw Error(\"Invalid date \\\"\" + date + \"\\\" for month with index \\\"\" + month + \"\\\".\");\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.today = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new Date();\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.parse = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\r\n        // parameters.\r\n        if (typeof value == 'number') {\r\n            return new Date(value);\r\n        }\r\n        return value ? new Date(Date.parse(value)) : null;\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @param {?} displayFormat\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.format = /**\r\n     * @param {?} date\r\n     * @param {?} displayFormat\r\n     * @return {?}\r\n     */\r\n    function (date, displayFormat) {\r\n        if (!this.isValid(date)) {\r\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\r\n        }\r\n        if (SUPPORTS_INTL_API) {\r\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\r\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\r\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\r\n                date = this.clone(date);\r\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\r\n            }\r\n            if (this.useUtcForDisplay) {\r\n                date = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\r\n                displayFormat = __assign({}, displayFormat, { timeZone: 'utc' });\r\n            }\r\n            var /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\r\n            return this._stripDirectionalityCharacters(dtf.format(date));\r\n        }\r\n        return this._stripDirectionalityCharacters(date.toDateString());\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @param {?} years\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.addCalendarYears = /**\r\n     * @param {?} date\r\n     * @param {?} years\r\n     * @return {?}\r\n     */\r\n    function (date, years) {\r\n        return this.addCalendarMonths(date, years * 12);\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @param {?} months\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.addCalendarMonths = /**\r\n     * @param {?} date\r\n     * @param {?} months\r\n     * @return {?}\r\n     */\r\n    function (date, months) {\r\n        var /** @type {?} */ newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\r\n        // It's possible to wind up in the wrong month if the original month has more days than the new\r\n        // month. In this case we want to go to the last day of the desired month.\r\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\r\n        // guarantee this.\r\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\r\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\r\n        }\r\n        return newDate;\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @param {?} days\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.addCalendarDays = /**\r\n     * @param {?} date\r\n     * @param {?} days\r\n     * @return {?}\r\n     */\r\n    function (date, days) {\r\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.toIso8601 = /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    function (date) {\r\n        return [\r\n            date.getUTCFullYear(),\r\n            this._2digit(date.getUTCMonth() + 1),\r\n            this._2digit(date.getUTCDate())\r\n        ].join('-');\r\n    };\r\n    /**\r\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\r\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\r\n     * invalid date for all other values.\r\n     */\r\n    /**\r\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\r\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\r\n     * invalid date for all other values.\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.deserialize = /**\r\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\r\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\r\n     * invalid date for all other values.\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        if (typeof value === 'string') {\r\n            if (!value) {\r\n                return null;\r\n            }\r\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\r\n            // string is the right format first.\r\n            if (ISO_8601_REGEX.test(value)) {\r\n                var /** @type {?} */ date = new Date(value);\r\n                if (this.isValid(date)) {\r\n                    return date;\r\n                }\r\n            }\r\n        }\r\n        return _super.prototype.deserialize.call(this, value);\r\n    };\r\n    /**\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.isDateInstance = /**\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    function (obj) {\r\n        return obj instanceof Date;\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.isValid = /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    function (date) {\r\n        return !isNaN(date.getTime());\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.invalid = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new Date(NaN);\r\n    };\r\n    /**\r\n     * Creates a date but allows the month and date to overflow.\r\n     * @param {?} year\r\n     * @param {?} month\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype._createDateWithOverflow = /**\r\n     * Creates a date but allows the month and date to overflow.\r\n     * @param {?} year\r\n     * @param {?} month\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    function (year, month, date) {\r\n        var /** @type {?} */ result = new Date(year, month, date);\r\n        // We need to correct for the fact that JS native Date treats years in range [0, 99] as\r\n        // abbreviations for 19xx.\r\n        if (year >= 0 && year < 100) {\r\n            result.setFullYear(this.getYear(result) - 1900);\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Pads a number to make it two digits.\r\n     * @param {?} n The number to pad.\r\n     * @return {?} The padded number.\r\n     */\r\n    NativeDateAdapter.prototype._2digit = /**\r\n     * Pads a number to make it two digits.\r\n     * @param {?} n The number to pad.\r\n     * @return {?} The padded number.\r\n     */\r\n    function (n) {\r\n        return ('00' + n).slice(-2);\r\n    };\r\n    /**\r\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\r\n     * other browsers do not. We remove them to make output consistent and because they interfere with\r\n     * date parsing.\r\n     * @param {?} str The string to strip direction characters from.\r\n     * @return {?} The stripped string.\r\n     */\r\n    NativeDateAdapter.prototype._stripDirectionalityCharacters = /**\r\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\r\n     * other browsers do not. We remove them to make output consistent and because they interfere with\r\n     * date parsing.\r\n     * @param {?} str The string to strip direction characters from.\r\n     * @return {?} The stripped string.\r\n     */\r\n    function (str) {\r\n        return str.replace(/[\\u200e\\u200f]/g, '');\r\n    };\r\n    NativeDateAdapter.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    NativeDateAdapter.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] },] },\r\n    ]; };\r\n    return NativeDateAdapter;\r\n}(DateAdapter));\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\nvar MAT_NATIVE_DATE_FORMATS = {\r\n    parse: {\r\n        dateInput: null,\r\n    },\r\n    display: {\r\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\r\n        monthYearLabel: { year: 'numeric', month: 'short' },\r\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\r\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\r\n    }\r\n};\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\nvar NativeDateModule = /** @class */ (function () {\r\n    function NativeDateModule() {\r\n    }\r\n    NativeDateModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    providers: [\r\n                        { provide: DateAdapter, useClass: NativeDateAdapter },\r\n                        MAT_DATE_LOCALE_PROVIDER\r\n                    ],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    NativeDateModule.ctorParameters = function () { return []; };\r\n    return NativeDateModule;\r\n}());\r\nvar ɵ0$$1 = MAT_NATIVE_DATE_FORMATS;\r\nvar MatNativeDateModule = /** @class */ (function () {\r\n    function MatNativeDateModule() {\r\n    }\r\n    MatNativeDateModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [NativeDateModule],\r\n                    providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$$1 }],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatNativeDateModule.ctorParameters = function () { return []; };\r\n    return MatNativeDateModule;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Error state matcher that matches when a control is invalid and dirty.\r\n */\r\nvar ShowOnDirtyErrorStateMatcher = /** @class */ (function () {\r\n    function ShowOnDirtyErrorStateMatcher() {\r\n    }\r\n    /**\r\n     * @param {?} control\r\n     * @param {?} form\r\n     * @return {?}\r\n     */\r\n    ShowOnDirtyErrorStateMatcher.prototype.isErrorState = /**\r\n     * @param {?} control\r\n     * @param {?} form\r\n     * @return {?}\r\n     */\r\n    function (control, form) {\r\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\r\n    };\r\n    ShowOnDirtyErrorStateMatcher.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    ShowOnDirtyErrorStateMatcher.ctorParameters = function () { return []; };\r\n    return ShowOnDirtyErrorStateMatcher;\r\n}());\r\n/**\r\n * Provider that defines how form controls behave with regards to displaying error messages.\r\n */\r\nvar ErrorStateMatcher = /** @class */ (function () {\r\n    function ErrorStateMatcher() {\r\n    }\r\n    /**\r\n     * @param {?} control\r\n     * @param {?} form\r\n     * @return {?}\r\n     */\r\n    ErrorStateMatcher.prototype.isErrorState = /**\r\n     * @param {?} control\r\n     * @param {?} form\r\n     * @return {?}\r\n     */\r\n    function (control, form) {\r\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\r\n    };\r\n    ErrorStateMatcher.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    ErrorStateMatcher.ctorParameters = function () { return []; };\r\n    return ErrorStateMatcher;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Injection token that can be used to provide options to the Hammerjs instance.\r\n * More info at http://hammerjs.github.io/api/.\r\n */\r\nvar MAT_HAMMER_OPTIONS = new InjectionToken('MAT_HAMMER_OPTIONS');\r\n/**\r\n * Adjusts configuration of our gesture library, Hammer.\r\n */\r\nvar GestureConfig = /** @class */ (function (_super) {\r\n    __extends(GestureConfig, _super);\r\n    function GestureConfig(_hammerOptions, commonModule) {\r\n        var _this = _super.call(this) || this;\r\n        _this._hammerOptions = _hammerOptions;\r\n        _this._hammer = typeof window !== 'undefined' ? (/** @type {?} */ (window)).Hammer : null;\r\n        /**\r\n         * List of new event names to add to the gesture support list\r\n         */\r\n        _this.events = _this._hammer ? [\r\n            'longpress',\r\n            'slide',\r\n            'slidestart',\r\n            'slideend',\r\n            'slideright',\r\n            'slideleft'\r\n        ] : [];\r\n        if (commonModule) {\r\n            commonModule._checkHammerIsAvailable();\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\r\n     *\r\n     * Our gesture names come from the Material Design gestures spec:\r\n     * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\r\n     *\r\n     * More information on default recognizers can be found in Hammer docs:\r\n     * http://hammerjs.github.io/recognizer-pan/\r\n     * http://hammerjs.github.io/recognizer-press/\r\n     *\r\n     * @param element Element to which to assign the new HammerJS gestures.\r\n     * @returns Newly-created HammerJS instance.\r\n     */\r\n    /**\r\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\r\n     *\r\n     * Our gesture names come from the Material Design gestures spec:\r\n     * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\r\n     *\r\n     * More information on default recognizers can be found in Hammer docs:\r\n     * http://hammerjs.github.io/recognizer-pan/\r\n     * http://hammerjs.github.io/recognizer-press/\r\n     *\r\n     * @param {?} element Element to which to assign the new HammerJS gestures.\r\n     * @return {?} Newly-created HammerJS instance.\r\n     */\r\n    GestureConfig.prototype.buildHammer = /**\r\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\r\n     *\r\n     * Our gesture names come from the Material Design gestures spec:\r\n     * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\r\n     *\r\n     * More information on default recognizers can be found in Hammer docs:\r\n     * http://hammerjs.github.io/recognizer-pan/\r\n     * http://hammerjs.github.io/recognizer-press/\r\n     *\r\n     * @param {?} element Element to which to assign the new HammerJS gestures.\r\n     * @return {?} Newly-created HammerJS instance.\r\n     */\r\n    function (element) {\r\n        var /** @type {?} */ mc = new this._hammer(element, this._hammerOptions || undefined);\r\n        // Default Hammer Recognizers.\r\n        var /** @type {?} */ pan = new this._hammer.Pan();\r\n        var /** @type {?} */ swipe = new this._hammer.Swipe();\r\n        var /** @type {?} */ press = new this._hammer.Press();\r\n        // Notice that a HammerJS recognizer can only depend on one other recognizer once.\r\n        // Otherwise the previous `recognizeWith` will be dropped.\r\n        // TODO: Confirm threshold numbers with Material Design UX Team\r\n        var /** @type {?} */ slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);\r\n        var /** @type {?} */ longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });\r\n        // Overwrite the default `pan` event to use the swipe event.\r\n        pan.recognizeWith(swipe);\r\n        // Add customized gestures to Hammer manager\r\n        mc.add([swipe, press, pan, slide, longpress]);\r\n        return /** @type {?} */ (mc);\r\n    };\r\n    /**\r\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\r\n     * @param {?} base\r\n     * @param {?} options\r\n     * @param {...?} inheritances\r\n     * @return {?}\r\n     */\r\n    GestureConfig.prototype._createRecognizer = /**\r\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\r\n     * @param {?} base\r\n     * @param {?} options\r\n     * @param {...?} inheritances\r\n     * @return {?}\r\n     */\r\n    function (base, options) {\r\n        var inheritances = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            inheritances[_i - 2] = arguments[_i];\r\n        }\r\n        var /** @type {?} */ recognizer = new (/** @type {?} */ (base.constructor))(options);\r\n        inheritances.push(base);\r\n        inheritances.forEach(function (item) { return recognizer.recognizeWith(item); });\r\n        return recognizer;\r\n    };\r\n    GestureConfig.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    GestureConfig.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_HAMMER_OPTIONS,] },] },\r\n        { type: MatCommonModule, decorators: [{ type: Optional },] },\r\n    ]; };\r\n    return GestureConfig;\r\n}(HammerGestureConfig));\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Shared directive to count lines inside a text area, such as a list item.\r\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\r\n * counted by checking the query list's length.\r\n */\r\nvar MatLine = /** @class */ (function () {\r\n    function MatLine() {\r\n    }\r\n    MatLine.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[mat-line], [matLine]',\r\n                    host: { 'class': 'mat-line' }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatLine.ctorParameters = function () { return []; };\r\n    return MatLine;\r\n}());\r\n/**\r\n * Helper that takes a query list of lines and sets the correct class on the host.\r\n * \\@docs-private\r\n */\r\nvar MatLineSetter = /** @class */ (function () {\r\n    function MatLineSetter(_lines, _element) {\r\n        var _this = this;\r\n        this._lines = _lines;\r\n        this._element = _element;\r\n        this._setLineClass(this._lines.length);\r\n        this._lines.changes.subscribe(function () {\r\n            _this._setLineClass(_this._lines.length);\r\n        });\r\n    }\r\n    /**\r\n     * @param {?} count\r\n     * @return {?}\r\n     */\r\n    MatLineSetter.prototype._setLineClass = /**\r\n     * @param {?} count\r\n     * @return {?}\r\n     */\r\n    function (count) {\r\n        this._resetClasses();\r\n        if (count === 2 || count === 3) {\r\n            this._setClass(\"mat-\" + count + \"-line\", true);\r\n        }\r\n        else if (count > 3) {\r\n            this._setClass(\"mat-multi-line\", true);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MatLineSetter.prototype._resetClasses = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._setClass('mat-2-line', false);\r\n        this._setClass('mat-3-line', false);\r\n        this._setClass('mat-multi-line', false);\r\n    };\r\n    /**\r\n     * @param {?} className\r\n     * @param {?} isAdd\r\n     * @return {?}\r\n     */\r\n    MatLineSetter.prototype._setClass = /**\r\n     * @param {?} className\r\n     * @param {?} isAdd\r\n     * @return {?}\r\n     */\r\n    function (className, isAdd) {\r\n        if (isAdd) {\r\n            this._element.nativeElement.classList.add(className);\r\n        }\r\n        else {\r\n            this._element.nativeElement.classList.remove(className);\r\n        }\r\n    };\r\n    return MatLineSetter;\r\n}());\r\nvar MatLineModule = /** @class */ (function () {\r\n    function MatLineModule() {\r\n    }\r\n    MatLineModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [MatCommonModule],\r\n                    exports: [MatLine, MatCommonModule],\r\n                    declarations: [MatLine],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatLineModule.ctorParameters = function () { return []; };\r\n    return MatLineModule;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/** @enum {number} */\r\nvar RippleState = {\r\n    FADING_IN: 0,\r\n    VISIBLE: 1,\r\n    FADING_OUT: 2,\r\n    HIDDEN: 3,\r\n};\r\nRippleState[RippleState.FADING_IN] = \"FADING_IN\";\r\nRippleState[RippleState.VISIBLE] = \"VISIBLE\";\r\nRippleState[RippleState.FADING_OUT] = \"FADING_OUT\";\r\nRippleState[RippleState.HIDDEN] = \"HIDDEN\";\r\n/**\r\n * Reference to a previously launched ripple element.\r\n */\r\nvar RippleRef = /** @class */ (function () {\r\n    function RippleRef(_renderer, element, config) {\r\n        this._renderer = _renderer;\r\n        this.element = element;\r\n        this.config = config;\r\n        /**\r\n         * Current state of the ripple reference.\r\n         */\r\n        this.state = RippleState.HIDDEN;\r\n    }\r\n    /** Fades out the ripple element. */\r\n    /**\r\n     * Fades out the ripple element.\r\n     * @return {?}\r\n     */\r\n    RippleRef.prototype.fadeOut = /**\r\n     * Fades out the ripple element.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._renderer.fadeOutRipple(this);\r\n    };\r\n    return RippleRef;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n/**\r\n * Interface that describes the configuration for the animation of a ripple.\r\n * There are two animation phases with different durations for the ripples.\r\n * @record\r\n */\r\n\r\n/**\r\n * Interface that describes the target for launching ripples.\r\n * It defines the ripple configuration and disabled state for interaction ripples.\r\n * \\@docs-private\r\n * @record\r\n */\r\n\r\n/**\r\n * Default ripple animation configuration for ripples without an explicit\r\n * animation config specified.\r\n */\r\nvar defaultRippleAnimationConfig = {\r\n    enterDuration: 450,\r\n    exitDuration: 400\r\n};\r\n/**\r\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\r\n * events to avoid synthetic mouse events.\r\n */\r\nvar ignoreMouseEventsTimeout = 800;\r\n/**\r\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\r\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\r\n * event handlers to be installed on the element that triggers ripple animations.\r\n * This will eventually become a custom renderer once Angular support exists.\r\n * \\@docs-private\r\n */\r\nvar RippleRenderer = /** @class */ (function () {\r\n    function RippleRenderer(_target, _ngZone, elementRef, platform) {\r\n        var _this = this;\r\n        this._target = _target;\r\n        this._ngZone = _ngZone;\r\n        /**\r\n         * Whether the pointer is currently down or not.\r\n         */\r\n        this._isPointerDown = false;\r\n        /**\r\n         * Events to be registered on the trigger element.\r\n         */\r\n        this._triggerEvents = new Map();\r\n        /**\r\n         * Set of currently active ripple references.\r\n         */\r\n        this._activeRipples = new Set();\r\n        /**\r\n         * Options that apply to all the event listeners that are bound by the renderer.\r\n         */\r\n        this._eventOptions = supportsPassiveEventListeners() ? (/** @type {?} */ ({ passive: true })) : false;\r\n        /**\r\n         * Function being called whenever the trigger is being pressed using mouse.\r\n         */\r\n        this.onMousedown = function (event) {\r\n            var /** @type {?} */ isSyntheticEvent = _this._lastTouchStartEvent &&\r\n                Date.now() < _this._lastTouchStartEvent + ignoreMouseEventsTimeout;\r\n            if (!_this._target.rippleDisabled && !isSyntheticEvent) {\r\n                _this._isPointerDown = true;\r\n                _this.fadeInRipple(event.clientX, event.clientY, _this._target.rippleConfig);\r\n            }\r\n        };\r\n        /**\r\n         * Function being called whenever the trigger is being pressed using touch.\r\n         */\r\n        this.onTouchStart = function (event) {\r\n            if (!_this._target.rippleDisabled) {\r\n                // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\r\n                // events will launch a second ripple if we don't ignore mouse events for a specific\r\n                // time after a touchstart event.\r\n                // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\r\n                // events will launch a second ripple if we don't ignore mouse events for a specific\r\n                // time after a touchstart event.\r\n                _this._lastTouchStartEvent = Date.now();\r\n                _this._isPointerDown = true;\r\n                _this.fadeInRipple(event.touches[0].clientX, event.touches[0].clientY, _this._target.rippleConfig);\r\n            }\r\n        };\r\n        /**\r\n         * Function being called whenever the trigger is being released.\r\n         */\r\n        this.onPointerUp = function () {\r\n            if (!_this._isPointerDown) {\r\n                return;\r\n            }\r\n            _this._isPointerDown = false;\r\n            // Fade-out all ripples that are visible and not persistent.\r\n            // Fade-out all ripples that are visible and not persistent.\r\n            _this._activeRipples.forEach(function (ripple) {\r\n                // By default, only ripples that are completely visible will fade out on pointer release.\r\n                // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\r\n                var /** @type {?} */ isVisible = ripple.state === RippleState.VISIBLE ||\r\n                    ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\r\n                if (!ripple.config.persistent && isVisible) {\r\n                    ripple.fadeOut();\r\n                }\r\n            });\r\n        };\r\n        // Only do anything if we're on the browser.\r\n        if (platform.isBrowser) {\r\n            this._containerElement = elementRef.nativeElement;\r\n            // Specify events which need to be registered on the trigger.\r\n            this._triggerEvents.set('mousedown', this.onMousedown);\r\n            this._triggerEvents.set('mouseup', this.onPointerUp);\r\n            this._triggerEvents.set('mouseleave', this.onPointerUp);\r\n            this._triggerEvents.set('touchstart', this.onTouchStart);\r\n            this._triggerEvents.set('touchend', this.onPointerUp);\r\n        }\r\n    }\r\n    /**\r\n     * Fades in a ripple at the given coordinates.\r\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\r\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\r\n     * @param config Extra ripple options.\r\n     */\r\n    /**\r\n     * Fades in a ripple at the given coordinates.\r\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\r\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\r\n     * @param {?=} config Extra ripple options.\r\n     * @return {?}\r\n     */\r\n    RippleRenderer.prototype.fadeInRipple = /**\r\n     * Fades in a ripple at the given coordinates.\r\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\r\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\r\n     * @param {?=} config Extra ripple options.\r\n     * @return {?}\r\n     */\r\n    function (x, y, config) {\r\n        var _this = this;\r\n        if (config === void 0) { config = {}; }\r\n        var /** @type {?} */ containerRect = this._containerElement.getBoundingClientRect();\r\n        var /** @type {?} */ animationConfig = __assign({}, defaultRippleAnimationConfig, config.animation);\r\n        if (config.centered) {\r\n            x = containerRect.left + containerRect.width / 2;\r\n            y = containerRect.top + containerRect.height / 2;\r\n        }\r\n        var /** @type {?} */ radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\r\n        var /** @type {?} */ offsetX = x - containerRect.left;\r\n        var /** @type {?} */ offsetY = y - containerRect.top;\r\n        var /** @type {?} */ duration = animationConfig.enterDuration / (config.speedFactor || 1);\r\n        var /** @type {?} */ ripple = document.createElement('div');\r\n        ripple.classList.add('mat-ripple-element');\r\n        ripple.style.left = offsetX - radius + \"px\";\r\n        ripple.style.top = offsetY - radius + \"px\";\r\n        ripple.style.height = radius * 2 + \"px\";\r\n        ripple.style.width = radius * 2 + \"px\";\r\n        // If the color is not set, the default CSS color will be used.\r\n        ripple.style.backgroundColor = config.color || null;\r\n        ripple.style.transitionDuration = duration + \"ms\";\r\n        this._containerElement.appendChild(ripple);\r\n        // By default the browser does not recalculate the styles of dynamically created\r\n        // ripple elements. This is critical because then the `scale` would not animate properly.\r\n        enforceStyleRecalculation(ripple);\r\n        ripple.style.transform = 'scale(1)';\r\n        // Exposed reference to the ripple that will be returned.\r\n        var /** @type {?} */ rippleRef = new RippleRef(this, ripple, config);\r\n        rippleRef.state = RippleState.FADING_IN;\r\n        // Add the ripple reference to the list of all active ripples.\r\n        this._activeRipples.add(rippleRef);\r\n        // Wait for the ripple element to be completely faded in.\r\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\r\n        this.runTimeoutOutsideZone(function () {\r\n            rippleRef.state = RippleState.VISIBLE;\r\n            if (!config.persistent && !_this._isPointerDown) {\r\n                rippleRef.fadeOut();\r\n            }\r\n        }, duration);\r\n        return rippleRef;\r\n    };\r\n    /** Fades out a ripple reference. */\r\n    /**\r\n     * Fades out a ripple reference.\r\n     * @param {?} rippleRef\r\n     * @return {?}\r\n     */\r\n    RippleRenderer.prototype.fadeOutRipple = /**\r\n     * Fades out a ripple reference.\r\n     * @param {?} rippleRef\r\n     * @return {?}\r\n     */\r\n    function (rippleRef) {\r\n        // For ripples that are not active anymore, don't re-un the fade-out animation.\r\n        if (!this._activeRipples.delete(rippleRef)) {\r\n            return;\r\n        }\r\n        var /** @type {?} */ rippleEl = rippleRef.element;\r\n        var /** @type {?} */ animationConfig = __assign({}, defaultRippleAnimationConfig, rippleRef.config.animation);\r\n        rippleEl.style.transitionDuration = animationConfig.exitDuration + \"ms\";\r\n        rippleEl.style.opacity = '0';\r\n        rippleRef.state = RippleState.FADING_OUT;\r\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\r\n        this.runTimeoutOutsideZone(function () {\r\n            rippleRef.state = RippleState.HIDDEN; /** @type {?} */\r\n            ((rippleEl.parentNode)).removeChild(rippleEl);\r\n        }, animationConfig.exitDuration);\r\n    };\r\n    /** Fades out all currently active ripples. */\r\n    /**\r\n     * Fades out all currently active ripples.\r\n     * @return {?}\r\n     */\r\n    RippleRenderer.prototype.fadeOutAll = /**\r\n     * Fades out all currently active ripples.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._activeRipples.forEach(function (ripple) { return ripple.fadeOut(); });\r\n    };\r\n    /** Sets up the trigger event listeners */\r\n    /**\r\n     * Sets up the trigger event listeners\r\n     * @param {?} element\r\n     * @return {?}\r\n     */\r\n    RippleRenderer.prototype.setupTriggerEvents = /**\r\n     * Sets up the trigger event listeners\r\n     * @param {?} element\r\n     * @return {?}\r\n     */\r\n    function (element) {\r\n        var _this = this;\r\n        if (!element || element === this._triggerElement) {\r\n            return;\r\n        }\r\n        // Remove all previously registered event listeners from the trigger element.\r\n        this._removeTriggerEvents();\r\n        this._ngZone.runOutsideAngular(function () {\r\n            _this._triggerEvents.forEach(function (fn, type) {\r\n                return element.addEventListener(type, fn, _this._eventOptions);\r\n            });\r\n        });\r\n        this._triggerElement = element;\r\n    };\r\n    /**\r\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\r\n     * @param {?} fn\r\n     * @param {?=} delay\r\n     * @return {?}\r\n     */\r\n    RippleRenderer.prototype.runTimeoutOutsideZone = /**\r\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\r\n     * @param {?} fn\r\n     * @param {?=} delay\r\n     * @return {?}\r\n     */\r\n    function (fn, delay) {\r\n        if (delay === void 0) { delay = 0; }\r\n        this._ngZone.runOutsideAngular(function () { return setTimeout(fn, delay); });\r\n    };\r\n    /** Removes previously registered event listeners from the trigger element. */\r\n    /**\r\n     * Removes previously registered event listeners from the trigger element.\r\n     * @return {?}\r\n     */\r\n    RippleRenderer.prototype._removeTriggerEvents = /**\r\n     * Removes previously registered event listeners from the trigger element.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        if (this._triggerElement) {\r\n            this._triggerEvents.forEach(function (fn, type) {\r\n                /** @type {?} */ ((_this._triggerElement)).removeEventListener(type, fn, _this._eventOptions);\r\n            });\r\n        }\r\n    };\r\n    return RippleRenderer;\r\n}());\r\n/**\r\n * Enforces a style recalculation of a DOM element by computing its styles.\r\n * @param {?} element\r\n * @return {?}\r\n */\r\nfunction enforceStyleRecalculation(element) {\r\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\r\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\r\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\r\n    window.getComputedStyle(element).getPropertyValue('opacity');\r\n}\r\n/**\r\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\r\n * @param {?} x\r\n * @param {?} y\r\n * @param {?} rect\r\n * @return {?}\r\n */\r\nfunction distanceToFurthestCorner(x, y, rect) {\r\n    var /** @type {?} */ distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\r\n    var /** @type {?} */ distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\r\n    return Math.sqrt(distX * distX + distY * distY);\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Configurable options for `matRipple`.\r\n * @record\r\n */\r\n\r\n/**\r\n * Injection token that can be used to specify the global ripple options.\r\n */\r\nvar MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\r\nvar MatRipple = /** @class */ (function () {\r\n    function MatRipple(_elementRef, ngZone, platform, globalOptions) {\r\n        this._elementRef = _elementRef;\r\n        /**\r\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\r\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\r\n         * bounding rectangle.\r\n         */\r\n        this.radius = 0;\r\n        /**\r\n         * If set, the normal duration of ripple animations is divided by this value. For example,\r\n         * setting it to 0.5 will cause the animations to take twice as long.\r\n         * A changed speedFactor will not modify the fade-out duration of the ripples.\r\n         * @deprecated Use the [matRippleAnimation] binding instead.\r\n         * \\@deletion-target 7.0.0\r\n         */\r\n        this.speedFactor = 1;\r\n        this._disabled = false;\r\n        /**\r\n         * Whether ripple directive is initialized and the input bindings are set.\r\n         */\r\n        this._isInitialized = false;\r\n        this._globalOptions = globalOptions || {};\r\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\r\n    }\r\n    Object.defineProperty(MatRipple.prototype, \"disabled\", {\r\n        get: /**\r\n         * Whether click events will not trigger the ripple. Ripples can be still launched manually\r\n         * by using the `launch()` method.\r\n         * @return {?}\r\n         */\r\n        function () { return this._disabled; },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this._disabled = value;\r\n            this._setupTriggerEventsIfEnabled();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MatRipple.prototype, \"trigger\", {\r\n        get: /**\r\n         * The element that triggers the ripple when click events are received.\r\n         * Defaults to the directive's host element.\r\n         * @return {?}\r\n         */\r\n        function () { return this._trigger || this._elementRef.nativeElement; },\r\n        set: /**\r\n         * @param {?} trigger\r\n         * @return {?}\r\n         */\r\n        function (trigger) {\r\n            this._trigger = trigger;\r\n            this._setupTriggerEventsIfEnabled();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MatRipple.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._isInitialized = true;\r\n        this._setupTriggerEventsIfEnabled();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MatRipple.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._rippleRenderer._removeTriggerEvents();\r\n    };\r\n    /** Launches a manual ripple at the specified position. */\r\n    /**\r\n     * Launches a manual ripple at the specified position.\r\n     * @param {?} x\r\n     * @param {?} y\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    MatRipple.prototype.launch = /**\r\n     * Launches a manual ripple at the specified position.\r\n     * @param {?} x\r\n     * @param {?} y\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    function (x, y, config) {\r\n        return this._rippleRenderer.fadeInRipple(x, y, __assign({}, this.rippleConfig, config));\r\n    };\r\n    /** Fades out all currently showing ripple elements. */\r\n    /**\r\n     * Fades out all currently showing ripple elements.\r\n     * @return {?}\r\n     */\r\n    MatRipple.prototype.fadeOutAll = /**\r\n     * Fades out all currently showing ripple elements.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._rippleRenderer.fadeOutAll();\r\n    };\r\n    Object.defineProperty(MatRipple.prototype, \"rippleConfig\", {\r\n        /** Ripple configuration from the directive's input values. */\r\n        get: /**\r\n         * Ripple configuration from the directive's input values.\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return {\r\n                centered: this.centered,\r\n                radius: this.radius,\r\n                color: this.color,\r\n                animation: __assign({}, this._globalOptions.animation, this.animation),\r\n                terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\r\n                speedFactor: this.speedFactor * (this._globalOptions.baseSpeedFactor || 1),\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MatRipple.prototype, \"rippleDisabled\", {\r\n        /** Whether ripples on pointer-down are disabled or not. */\r\n        get: /**\r\n         * Whether ripples on pointer-down are disabled or not.\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.disabled || !!this._globalOptions.disabled;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets up the the trigger event listeners if ripples are enabled.\r\n     * @return {?}\r\n     */\r\n    MatRipple.prototype._setupTriggerEventsIfEnabled = /**\r\n     * Sets up the the trigger event listeners if ripples are enabled.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.disabled && this._isInitialized) {\r\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\r\n        }\r\n    };\r\n    MatRipple.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[mat-ripple], [matRipple]',\r\n                    exportAs: 'matRipple',\r\n                    host: {\r\n                        'class': 'mat-ripple',\r\n                        '[class.mat-ripple-unbounded]': 'unbounded'\r\n                    }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatRipple.ctorParameters = function () { return [\r\n        { type: ElementRef, },\r\n        { type: NgZone, },\r\n        { type: Platform, },\r\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] },] },\r\n    ]; };\r\n    MatRipple.propDecorators = {\r\n        \"color\": [{ type: Input, args: ['matRippleColor',] },],\r\n        \"unbounded\": [{ type: Input, args: ['matRippleUnbounded',] },],\r\n        \"centered\": [{ type: Input, args: ['matRippleCentered',] },],\r\n        \"radius\": [{ type: Input, args: ['matRippleRadius',] },],\r\n        \"speedFactor\": [{ type: Input, args: ['matRippleSpeedFactor',] },],\r\n        \"animation\": [{ type: Input, args: ['matRippleAnimation',] },],\r\n        \"disabled\": [{ type: Input, args: ['matRippleDisabled',] },],\r\n        \"trigger\": [{ type: Input, args: ['matRippleTrigger',] },],\r\n    };\r\n    return MatRipple;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\nvar MatRippleModule = /** @class */ (function () {\r\n    function MatRippleModule() {\r\n    }\r\n    MatRippleModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [MatCommonModule, PlatformModule],\r\n                    exports: [MatRipple, MatCommonModule],\r\n                    declarations: [MatRipple],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatRippleModule.ctorParameters = function () { return []; };\r\n    return MatRippleModule;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\r\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\r\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\r\n * Note that theming is meant to be handled by the parent element, e.g.\r\n * `mat-primary .mat-pseudo-checkbox`.\r\n *\r\n * Note that this component will be completely invisible to screen-reader users. This is *not*\r\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\r\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\r\n * of more complex components that appropriately handle selected / checked state.\r\n * \\@docs-private\r\n */\r\nvar MatPseudoCheckbox = /** @class */ (function () {\r\n    function MatPseudoCheckbox() {\r\n        /**\r\n         * Display state of the checkbox.\r\n         */\r\n        this.state = 'unchecked';\r\n        /**\r\n         * Whether the checkbox is disabled.\r\n         */\r\n        this.disabled = false;\r\n    }\r\n    MatPseudoCheckbox.decorators = [\r\n        { type: Component, args: [{encapsulation: ViewEncapsulation.None,\r\n                    preserveWhitespaces: false,\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    selector: 'mat-pseudo-checkbox',\r\n                    styles: [\".mat-pseudo-checkbox{width:20px;height:20px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:9px;left:2px;width:16px;opacity:1}.mat-pseudo-checkbox-checked::after{top:5px;left:3px;width:12px;height:5px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1}\"],\r\n                    template: '',\r\n                    host: {\r\n                        'class': 'mat-pseudo-checkbox',\r\n                        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\r\n                        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\r\n                        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\r\n                    },\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatPseudoCheckbox.ctorParameters = function () { return []; };\r\n    MatPseudoCheckbox.propDecorators = {\r\n        \"state\": [{ type: Input },],\r\n        \"disabled\": [{ type: Input },],\r\n    };\r\n    return MatPseudoCheckbox;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\nvar MatPseudoCheckboxModule = /** @class */ (function () {\r\n    function MatPseudoCheckboxModule() {\r\n    }\r\n    MatPseudoCheckboxModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    exports: [MatPseudoCheckbox],\r\n                    declarations: [MatPseudoCheckbox]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatPseudoCheckboxModule.ctorParameters = function () { return []; };\r\n    return MatPseudoCheckboxModule;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * \\@docs-private\r\n */\r\nvar MatOptgroupBase = /** @class */ (function () {\r\n    function MatOptgroupBase() {\r\n    }\r\n    return MatOptgroupBase;\r\n}());\r\nvar _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\r\n// Counter for unique group ids.\r\nvar _uniqueOptgroupIdCounter = 0;\r\n/**\r\n * Component that is used to group instances of `mat-option`.\r\n */\r\nvar MatOptgroup = /** @class */ (function (_super) {\r\n    __extends(MatOptgroup, _super);\r\n    function MatOptgroup() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Unique id for the underlying label.\r\n         */\r\n        _this._labelId = \"mat-optgroup-label-\" + _uniqueOptgroupIdCounter++;\r\n        return _this;\r\n    }\r\n    MatOptgroup.decorators = [\r\n        { type: Component, args: [{selector: 'mat-optgroup',\r\n                    exportAs: 'matOptgroup',\r\n                    template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }}</label><ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\",\r\n                    encapsulation: ViewEncapsulation.None,\r\n                    preserveWhitespaces: false,\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    inputs: ['disabled'],\r\n                    styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"],\r\n                    host: {\r\n                        'class': 'mat-optgroup',\r\n                        'role': 'group',\r\n                        '[class.mat-optgroup-disabled]': 'disabled',\r\n                        '[attr.aria-disabled]': 'disabled.toString()',\r\n                        '[attr.aria-labelledby]': '_labelId',\r\n                    }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatOptgroup.ctorParameters = function () { return []; };\r\n    MatOptgroup.propDecorators = {\r\n        \"label\": [{ type: Input },],\r\n    };\r\n    return MatOptgroup;\r\n}(_MatOptgroupMixinBase));\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Option IDs need to be unique across components, so this counter exists outside of\r\n * the component definition.\r\n */\r\nvar _uniqueIdCounter = 0;\r\n/**\r\n * Event object emitted by MatOption when selected or deselected.\r\n */\r\nvar MatOptionSelectionChange = /** @class */ (function () {\r\n    function MatOptionSelectionChange(source, isUserInput) {\r\n        if (isUserInput === void 0) { isUserInput = false; }\r\n        this.source = source;\r\n        this.isUserInput = isUserInput;\r\n    }\r\n    return MatOptionSelectionChange;\r\n}());\r\n/**\r\n * Describes a parent component that manages a list of options.\r\n * Contains properties that the options can inherit.\r\n * \\@docs-private\r\n * @record\r\n */\r\n\r\n/**\r\n * Injection token used to provide the parent component to options.\r\n */\r\nvar MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\r\n/**\r\n * Single option inside of a `<mat-select>` element.\r\n */\r\nvar MatOption = /** @class */ (function () {\r\n    function MatOption(_element, _changeDetectorRef, _parent, group) {\r\n        this._element = _element;\r\n        this._changeDetectorRef = _changeDetectorRef;\r\n        this._parent = _parent;\r\n        this.group = group;\r\n        this._selected = false;\r\n        this._active = false;\r\n        this._disabled = false;\r\n        this._id = \"mat-option-\" + _uniqueIdCounter++;\r\n        this._mostRecentViewValue = '';\r\n        /**\r\n         * Event emitted when the option is selected or deselected.\r\n         */\r\n        this.onSelectionChange = new EventEmitter();\r\n        /**\r\n         * Emits when the state of the option changes and any parents have to be notified.\r\n         */\r\n        this._stateChanges = new Subject();\r\n    }\r\n    Object.defineProperty(MatOption.prototype, \"multiple\", {\r\n        /** Whether the wrapping component is in multiple selection mode. */\r\n        get: /**\r\n         * Whether the wrapping component is in multiple selection mode.\r\n         * @return {?}\r\n         */\r\n        function () { return this._parent && this._parent.multiple; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MatOption.prototype, \"id\", {\r\n        /** The unique ID of the option. */\r\n        get: /**\r\n         * The unique ID of the option.\r\n         * @return {?}\r\n         */\r\n        function () { return this._id; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MatOption.prototype, \"selected\", {\r\n        /** Whether or not the option is currently selected. */\r\n        get: /**\r\n         * Whether or not the option is currently selected.\r\n         * @return {?}\r\n         */\r\n        function () { return this._selected; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MatOption.prototype, \"disabled\", {\r\n        get: /**\r\n         * Whether the option is disabled.\r\n         * @return {?}\r\n         */\r\n        function () { return (this.group && this.group.disabled) || this._disabled; },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) { this._disabled = coerceBooleanProperty(value); },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MatOption.prototype, \"disableRipple\", {\r\n        /** Whether ripples for the option are disabled. */\r\n        get: /**\r\n         * Whether ripples for the option are disabled.\r\n         * @return {?}\r\n         */\r\n        function () { return this._parent && this._parent.disableRipple; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MatOption.prototype, \"active\", {\r\n        /**\r\n         * Whether or not the option is currently active and ready to be selected.\r\n         * An active option displays styles as if it is focused, but the\r\n         * focus is actually retained somewhere else. This comes in handy\r\n         * for components like autocomplete where focus must remain on the input.\r\n         */\r\n        get: /**\r\n         * Whether or not the option is currently active and ready to be selected.\r\n         * An active option displays styles as if it is focused, but the\r\n         * focus is actually retained somewhere else. This comes in handy\r\n         * for components like autocomplete where focus must remain on the input.\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._active;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MatOption.prototype, \"viewValue\", {\r\n        /**\r\n         * The displayed value of the option. It is necessary to show the selected option in the\r\n         * select's trigger.\r\n         */\r\n        get: /**\r\n         * The displayed value of the option. It is necessary to show the selected option in the\r\n         * select's trigger.\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            // TODO(kara): Add input property alternative for node envs.\r\n            return (this._getHostElement().textContent || '').trim();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** Selects the option. */\r\n    /**\r\n     * Selects the option.\r\n     * @return {?}\r\n     */\r\n    MatOption.prototype.select = /**\r\n     * Selects the option.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._selected = true;\r\n        this._changeDetectorRef.markForCheck();\r\n        this._emitSelectionChangeEvent();\r\n    };\r\n    /** Deselects the option. */\r\n    /**\r\n     * Deselects the option.\r\n     * @return {?}\r\n     */\r\n    MatOption.prototype.deselect = /**\r\n     * Deselects the option.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._selected = false;\r\n        this._changeDetectorRef.markForCheck();\r\n        this._emitSelectionChangeEvent();\r\n    };\r\n    /** Sets focus onto this option. */\r\n    /**\r\n     * Sets focus onto this option.\r\n     * @return {?}\r\n     */\r\n    MatOption.prototype.focus = /**\r\n     * Sets focus onto this option.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var /** @type {?} */ element = this._getHostElement();\r\n        if (typeof element.focus === 'function') {\r\n            element.focus();\r\n        }\r\n    };\r\n    /**\r\n     * This method sets display styles on the option to make it appear\r\n     * active. This is used by the ActiveDescendantKeyManager so key\r\n     * events will display the proper options as active on arrow key events.\r\n     */\r\n    /**\r\n     * This method sets display styles on the option to make it appear\r\n     * active. This is used by the ActiveDescendantKeyManager so key\r\n     * events will display the proper options as active on arrow key events.\r\n     * @return {?}\r\n     */\r\n    MatOption.prototype.setActiveStyles = /**\r\n     * This method sets display styles on the option to make it appear\r\n     * active. This is used by the ActiveDescendantKeyManager so key\r\n     * events will display the proper options as active on arrow key events.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this._active) {\r\n            this._active = true;\r\n            this._changeDetectorRef.markForCheck();\r\n        }\r\n    };\r\n    /**\r\n     * This method removes display styles on the option that made it appear\r\n     * active. This is used by the ActiveDescendantKeyManager so key\r\n     * events will display the proper options as active on arrow key events.\r\n     */\r\n    /**\r\n     * This method removes display styles on the option that made it appear\r\n     * active. This is used by the ActiveDescendantKeyManager so key\r\n     * events will display the proper options as active on arrow key events.\r\n     * @return {?}\r\n     */\r\n    MatOption.prototype.setInactiveStyles = /**\r\n     * This method removes display styles on the option that made it appear\r\n     * active. This is used by the ActiveDescendantKeyManager so key\r\n     * events will display the proper options as active on arrow key events.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._active) {\r\n            this._active = false;\r\n            this._changeDetectorRef.markForCheck();\r\n        }\r\n    };\r\n    /** Gets the label to be used when determining whether the option should be focused. */\r\n    /**\r\n     * Gets the label to be used when determining whether the option should be focused.\r\n     * @return {?}\r\n     */\r\n    MatOption.prototype.getLabel = /**\r\n     * Gets the label to be used when determining whether the option should be focused.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.viewValue;\r\n    };\r\n    /** Ensures the option is selected when activated from the keyboard. */\r\n    /**\r\n     * Ensures the option is selected when activated from the keyboard.\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    MatOption.prototype._handleKeydown = /**\r\n     * Ensures the option is selected when activated from the keyboard.\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\r\n            this._selectViaInteraction();\r\n            // Prevent the page from scrolling down and form submits.\r\n            event.preventDefault();\r\n        }\r\n    };\r\n    /**\r\n     * `Selects the option while indicating the selection came from the user. Used to\r\n     * determine if the select's view -> model callback should be invoked.`\r\n     */\r\n    /**\r\n     * `Selects the option while indicating the selection came from the user. Used to\r\n     * determine if the select's view -> model callback should be invoked.`\r\n     * @return {?}\r\n     */\r\n    MatOption.prototype._selectViaInteraction = /**\r\n     * `Selects the option while indicating the selection came from the user. Used to\r\n     * determine if the select's view -> model callback should be invoked.`\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.disabled) {\r\n            this._selected = this.multiple ? !this._selected : true;\r\n            this._changeDetectorRef.markForCheck();\r\n            this._emitSelectionChangeEvent(true);\r\n        }\r\n    };\r\n    /** Returns the correct tabindex for the option depending on disabled state. */\r\n    /**\r\n     * Returns the correct tabindex for the option depending on disabled state.\r\n     * @return {?}\r\n     */\r\n    MatOption.prototype._getTabIndex = /**\r\n     * Returns the correct tabindex for the option depending on disabled state.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.disabled ? '-1' : '0';\r\n    };\r\n    /** Gets the host DOM element. */\r\n    /**\r\n     * Gets the host DOM element.\r\n     * @return {?}\r\n     */\r\n    MatOption.prototype._getHostElement = /**\r\n     * Gets the host DOM element.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._element.nativeElement;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MatOption.prototype.ngAfterViewChecked = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // Since parent components could be using the option's label to display the selected values\r\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\r\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\r\n        // relatively cheap, however we still limit them only to selected options in order to avoid\r\n        // hitting the DOM too often.\r\n        if (this._selected) {\r\n            var /** @type {?} */ viewValue = this.viewValue;\r\n            if (viewValue !== this._mostRecentViewValue) {\r\n                this._mostRecentViewValue = viewValue;\r\n                this._stateChanges.next();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Emits the selection change event.\r\n     * @param {?=} isUserInput\r\n     * @return {?}\r\n     */\r\n    MatOption.prototype._emitSelectionChangeEvent = /**\r\n     * Emits the selection change event.\r\n     * @param {?=} isUserInput\r\n     * @return {?}\r\n     */\r\n    function (isUserInput) {\r\n        if (isUserInput === void 0) { isUserInput = false; }\r\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\r\n    };\r\n    MatOption.decorators = [\r\n        { type: Component, args: [{selector: 'mat-option',\r\n                    exportAs: 'matOption',\r\n                    host: {\r\n                        'role': 'option',\r\n                        '[attr.tabindex]': '_getTabIndex()',\r\n                        '[class.mat-selected]': 'selected',\r\n                        '[class.mat-option-multiple]': 'multiple',\r\n                        '[class.mat-active]': 'active',\r\n                        '[id]': 'id',\r\n                        '[attr.aria-selected]': 'selected.toString()',\r\n                        '[attr.aria-disabled]': 'disabled.toString()',\r\n                        '[class.mat-option-disabled]': 'disabled',\r\n                        '(click)': '_selectViaInteraction()',\r\n                        '(keydown)': '_handleKeydown($event)',\r\n                        'class': 'mat-option',\r\n                    },\r\n                    styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;position:relative;cursor:pointer;outline:0;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}@media screen and (-ms-high-contrast:active){.mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"],\r\n                    template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\" [state]=\\\"selected ? 'checked' : ''\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox><span class=\\\"mat-option-text\\\"><ng-content></ng-content></span><div class=\\\"mat-option-ripple\\\" mat-ripple [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\"></div>\",\r\n                    encapsulation: ViewEncapsulation.None,\r\n                    preserveWhitespaces: false,\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatOption.ctorParameters = function () { return [\r\n        { type: ElementRef, },\r\n        { type: ChangeDetectorRef, },\r\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] },] },\r\n        { type: MatOptgroup, decorators: [{ type: Optional },] },\r\n    ]; };\r\n    MatOption.propDecorators = {\r\n        \"value\": [{ type: Input },],\r\n        \"disabled\": [{ type: Input },],\r\n        \"onSelectionChange\": [{ type: Output },],\r\n    };\r\n    return MatOption;\r\n}());\r\n/**\r\n * Counts the amount of option group labels that precede the specified option.\r\n * \\@docs-private\r\n * @param {?} optionIndex Index of the option at which to start counting.\r\n * @param {?} options Flat list of all of the options.\r\n * @param {?} optionGroups Flat list of all of the option groups.\r\n * @return {?}\r\n */\r\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\r\n    if (optionGroups.length) {\r\n        var /** @type {?} */ optionsArray = options.toArray();\r\n        var /** @type {?} */ groups = optionGroups.toArray();\r\n        var /** @type {?} */ groupCounter = 0;\r\n        for (var /** @type {?} */ i = 0; i < optionIndex + 1; i++) {\r\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\r\n                groupCounter++;\r\n            }\r\n        }\r\n        return groupCounter;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * Determines the position to which to scroll a panel in order for an option to be into view.\r\n * \\@docs-private\r\n * @param {?} optionIndex Index of the option to be scrolled into the view.\r\n * @param {?} optionHeight Height of the options.\r\n * @param {?} currentScrollPosition Current scroll position of the panel.\r\n * @param {?} panelHeight Height of the panel.\r\n * @return {?}\r\n */\r\nfunction _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\r\n    var /** @type {?} */ optionOffset = optionIndex * optionHeight;\r\n    if (optionOffset < currentScrollPosition) {\r\n        return optionOffset;\r\n    }\r\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\r\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\r\n    }\r\n    return currentScrollPosition;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\nvar MatOptionModule = /** @class */ (function () {\r\n    function MatOptionModule() {\r\n    }\r\n    MatOptionModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\r\n                    exports: [MatOption, MatOptgroup],\r\n                    declarations: [MatOption, MatOptgroup]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatOptionModule.ctorParameters = function () { return []; };\r\n    return MatOptionModule;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * InjectionToken that can be used to specify the global label options.\r\n */\r\nvar MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\r\n/**\r\n * Configurable options for floating labels.\r\n * @record\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\r\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\r\n */\r\nvar JAN = 0;\r\nvar FEB = 1;\r\nvar MAR = 2;\r\nvar APR = 3;\r\nvar MAY = 4;\r\nvar JUN = 5;\r\nvar JUL = 6;\r\nvar AUG = 7;\r\nvar SEP = 8;\r\nvar OCT = 9;\r\nvar NOV = 10;\r\nvar DEC = 11;\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { MAT_LABEL_GLOBAL_OPTIONS as MAT_PLACEHOLDER_GLOBAL_OPTIONS, AnimationCurves, AnimationDurations, MatCommonModule, MATERIAL_SANITY_CHECKS, mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, mixinErrorState, mixinInitialized, NativeDateModule, MatNativeDateModule, MAT_DATE_LOCALE, MAT_DATE_LOCALE_PROVIDER, DateAdapter, MAT_DATE_FORMATS, NativeDateAdapter, MAT_NATIVE_DATE_FORMATS, ShowOnDirtyErrorStateMatcher, ErrorStateMatcher, MAT_HAMMER_OPTIONS, GestureConfig, MatLine, MatLineSetter, MatLineModule, MatOptionModule, MatOptionSelectionChange, MAT_OPTION_PARENT_COMPONENT, MatOption, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptgroupBase, _MatOptgroupMixinBase, MatOptgroup, MAT_LABEL_GLOBAL_OPTIONS, MatRippleModule, MAT_RIPPLE_GLOBAL_OPTIONS, MatRipple, RippleState, RippleRef, defaultRippleAnimationConfig, RippleRenderer, MatPseudoCheckboxModule, MatPseudoCheckbox, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };\r\n//# sourceMappingURL=core.es5.js.map\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/material/esm5/core.es5.js\n// module id = 284\n// module chunks = 0 1","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Coerces a data-bound value (typically a string) to a boolean.\r\n * @param {?} value\r\n * @return {?}\r\n */\r\nfunction coerceBooleanProperty(value) {\r\n    return value != null && \"\" + value !== 'false';\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * @param {?} value\r\n * @param {?=} fallbackValue\r\n * @return {?}\r\n */\r\nfunction coerceNumberProperty(value, fallbackValue) {\r\n    if (fallbackValue === void 0) { fallbackValue = 0; }\r\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\r\n}\r\n/**\r\n * Whether the provided value is considered a number.\r\n * \\@docs-private\r\n * @param {?} value\r\n * @return {?}\r\n */\r\nfunction _isNumberValue(value) {\r\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\r\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\r\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\r\n    return !isNaN(parseFloat(/** @type {?} */ (value))) && !isNaN(Number(value));\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Wraps the provided value in an array, unless the provided value is an array.\r\n * @template T\r\n * @param {?} value\r\n * @return {?}\r\n */\r\nfunction coerceArray(value) {\r\n    return Array.isArray(value) ? value : [value];\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { coerceBooleanProperty, coerceNumberProperty, _isNumberValue, coerceArray };\r\n//# sourceMappingURL=coercion.es5.js.map\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/cdk/esm5/coercion.es5.js\n// module id = 285\n// module chunks = 0 1","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { Injectable, NgModule } from '@angular/core';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n// Whether the current platform supports the V8 Break Iterator. The V8 check\r\n// is necessary to detect all Blink based browsers.\r\nvar hasV8BreakIterator = (typeof (Intl) !== 'undefined' && (/** @type {?} */ (Intl)).v8BreakIterator);\r\n/**\r\n * Service to detect the current platform by comparing the userAgent strings and\r\n * checking browser-specific global properties.\r\n */\r\nvar Platform = /** @class */ (function () {\r\n    function Platform() {\r\n        /**\r\n         * Whether the Angular application is being rendered in the browser.\r\n         */\r\n        this.isBrowser = typeof document === 'object' && !!document;\r\n        /**\r\n         * Whether the current browser is Microsoft Edge.\r\n         */\r\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\r\n        /**\r\n         * Whether the current rendering engine is Microsoft Trident.\r\n         */\r\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\r\n        /**\r\n         * Whether the current rendering engine is Blink.\r\n         */\r\n        this.BLINK = this.isBrowser &&\r\n            (!!((/** @type {?} */ (window)).chrome || hasV8BreakIterator) && !!CSS && !this.EDGE && !this.TRIDENT);\r\n        /**\r\n         * Whether the current rendering engine is WebKit.\r\n         */\r\n        this.WEBKIT = this.isBrowser &&\r\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\r\n        /**\r\n         * Whether the current platform is Apple iOS.\r\n         */\r\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\r\n            !(/** @type {?} */ (window)).MSStream;\r\n        /**\r\n         * Whether the current browser is Firefox.\r\n         */\r\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\r\n        /**\r\n         * Whether the current platform is Android.\r\n         */\r\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\r\n        /**\r\n         * Whether the current browser is Safari.\r\n         */\r\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\r\n    }\r\n    Platform.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    Platform.ctorParameters = function () { return []; };\r\n    return Platform;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Cached result of whether the user's browser supports passive event listeners.\r\n */\r\nvar supportsPassiveEvents;\r\n/**\r\n * Checks whether the user's browser supports passive event listeners.\r\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\r\n * @return {?}\r\n */\r\nfunction supportsPassiveEventListeners() {\r\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\r\n        try {\r\n            window.addEventListener('test', /** @type {?} */ ((null)), Object.defineProperty({}, 'passive', {\r\n                get: function () { return supportsPassiveEvents = true; }\r\n            }));\r\n        }\r\n        finally {\r\n            supportsPassiveEvents = supportsPassiveEvents || false;\r\n        }\r\n    }\r\n    return supportsPassiveEvents;\r\n}\r\n/**\r\n * Cached result Set of input types support by the current browser.\r\n */\r\nvar supportedInputTypes;\r\n/**\r\n * Types of `<input>` that *might* be supported.\r\n */\r\nvar candidateInputTypes = [\r\n    'color',\r\n    'button',\r\n    'checkbox',\r\n    'date',\r\n    'datetime-local',\r\n    'email',\r\n    'file',\r\n    'hidden',\r\n    'image',\r\n    'month',\r\n    'number',\r\n    'password',\r\n    'radio',\r\n    'range',\r\n    'reset',\r\n    'search',\r\n    'submit',\r\n    'tel',\r\n    'text',\r\n    'time',\r\n    'url',\r\n    'week',\r\n];\r\n/**\r\n * @return {?} The input types supported by this browser.\r\n */\r\nfunction getSupportedInputTypes() {\r\n    // Result is cached.\r\n    if (supportedInputTypes) {\r\n        return supportedInputTypes;\r\n    }\r\n    // We can't check if an input type is not supported until we're on the browser, so say that\r\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\r\n    // just a helper function and can't inject it.\r\n    if (typeof document !== 'object' || !document) {\r\n        supportedInputTypes = new Set(candidateInputTypes);\r\n        return supportedInputTypes;\r\n    }\r\n    var /** @type {?} */ featureTestInput = document.createElement('input');\r\n    supportedInputTypes = new Set(candidateInputTypes.filter(function (value) {\r\n        featureTestInput.setAttribute('type', value);\r\n        return featureTestInput.type === value;\r\n    }));\r\n    return supportedInputTypes;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\nvar PlatformModule = /** @class */ (function () {\r\n    function PlatformModule() {\r\n    }\r\n    PlatformModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    providers: [Platform]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    PlatformModule.ctorParameters = function () { return []; };\r\n    return PlatformModule;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { Platform, supportsPassiveEventListeners, getSupportedInputTypes, PlatformModule };\r\n//# sourceMappingURL=platform.es5.js.map\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/cdk/esm5/platform.es5.js\n// module id = 286\n// module chunks = 0 1","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { ChangeDetectionStrategy, Component, Directive, Input, NgModule, ViewEncapsulation } from '@angular/core';\r\nimport { MatCommonModule } from '@angular/material/core';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Content of a card, needed as it's used as a selector in the API.\r\n * \\@docs-private\r\n */\r\nvar MatCardContent = /** @class */ (function () {\r\n    function MatCardContent() {\r\n    }\r\n    MatCardContent.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: 'mat-card-content',\r\n                    host: { 'class': 'mat-card-content' }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardContent.ctorParameters = function () { return []; };\r\n    return MatCardContent;\r\n}());\r\n/**\r\n * Title of a card, needed as it's used as a selector in the API.\r\n * \\@docs-private\r\n */\r\nvar MatCardTitle = /** @class */ (function () {\r\n    function MatCardTitle() {\r\n    }\r\n    MatCardTitle.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: \"mat-card-title, [mat-card-title], [matCardTitle]\",\r\n                    host: {\r\n                        'class': 'mat-card-title'\r\n                    }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardTitle.ctorParameters = function () { return []; };\r\n    return MatCardTitle;\r\n}());\r\n/**\r\n * Sub-title of a card, needed as it's used as a selector in the API.\r\n * \\@docs-private\r\n */\r\nvar MatCardSubtitle = /** @class */ (function () {\r\n    function MatCardSubtitle() {\r\n    }\r\n    MatCardSubtitle.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: \"mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]\",\r\n                    host: {\r\n                        'class': 'mat-card-subtitle'\r\n                    }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardSubtitle.ctorParameters = function () { return []; };\r\n    return MatCardSubtitle;\r\n}());\r\n/**\r\n * Action section of a card, needed as it's used as a selector in the API.\r\n * \\@docs-private\r\n */\r\nvar MatCardActions = /** @class */ (function () {\r\n    function MatCardActions() {\r\n        /**\r\n         * Position of the actions inside the card.\r\n         */\r\n        this.align = 'start';\r\n    }\r\n    MatCardActions.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: 'mat-card-actions',\r\n                    exportAs: 'matCardActions',\r\n                    host: {\r\n                        'class': 'mat-card-actions',\r\n                        '[class.mat-card-actions-align-end]': 'align === \"end\"',\r\n                    }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardActions.ctorParameters = function () { return []; };\r\n    MatCardActions.propDecorators = {\r\n        \"align\": [{ type: Input },],\r\n    };\r\n    return MatCardActions;\r\n}());\r\n/**\r\n * Footer of a card, needed as it's used as a selector in the API.\r\n * \\@docs-private\r\n */\r\nvar MatCardFooter = /** @class */ (function () {\r\n    function MatCardFooter() {\r\n    }\r\n    MatCardFooter.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: 'mat-card-footer',\r\n                    host: { 'class': 'mat-card-footer' }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardFooter.ctorParameters = function () { return []; };\r\n    return MatCardFooter;\r\n}());\r\n/**\r\n * Image used in a card, needed to add the mat- CSS styling.\r\n * \\@docs-private\r\n */\r\nvar MatCardImage = /** @class */ (function () {\r\n    function MatCardImage() {\r\n    }\r\n    MatCardImage.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[mat-card-image], [matCardImage]',\r\n                    host: { 'class': 'mat-card-image' }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardImage.ctorParameters = function () { return []; };\r\n    return MatCardImage;\r\n}());\r\n/**\r\n * Image used in a card, needed to add the mat- CSS styling.\r\n * \\@docs-private\r\n */\r\nvar MatCardSmImage = /** @class */ (function () {\r\n    function MatCardSmImage() {\r\n    }\r\n    MatCardSmImage.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[mat-card-sm-image], [matCardImageSmall]',\r\n                    host: { 'class': 'mat-card-sm-image' }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardSmImage.ctorParameters = function () { return []; };\r\n    return MatCardSmImage;\r\n}());\r\n/**\r\n * Image used in a card, needed to add the mat- CSS styling.\r\n * \\@docs-private\r\n */\r\nvar MatCardMdImage = /** @class */ (function () {\r\n    function MatCardMdImage() {\r\n    }\r\n    MatCardMdImage.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[mat-card-md-image], [matCardImageMedium]',\r\n                    host: { 'class': 'mat-card-md-image' }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardMdImage.ctorParameters = function () { return []; };\r\n    return MatCardMdImage;\r\n}());\r\n/**\r\n * Image used in a card, needed to add the mat- CSS styling.\r\n * \\@docs-private\r\n */\r\nvar MatCardLgImage = /** @class */ (function () {\r\n    function MatCardLgImage() {\r\n    }\r\n    MatCardLgImage.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[mat-card-lg-image], [matCardImageLarge]',\r\n                    host: { 'class': 'mat-card-lg-image' }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardLgImage.ctorParameters = function () { return []; };\r\n    return MatCardLgImage;\r\n}());\r\n/**\r\n * Large image used in a card, needed to add the mat- CSS styling.\r\n * \\@docs-private\r\n */\r\nvar MatCardXlImage = /** @class */ (function () {\r\n    function MatCardXlImage() {\r\n    }\r\n    MatCardXlImage.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[mat-card-xl-image], [matCardImageXLarge]',\r\n                    host: { 'class': 'mat-card-xl-image' }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardXlImage.ctorParameters = function () { return []; };\r\n    return MatCardXlImage;\r\n}());\r\n/**\r\n * Avatar image used in a card, needed to add the mat- CSS styling.\r\n * \\@docs-private\r\n */\r\nvar MatCardAvatar = /** @class */ (function () {\r\n    function MatCardAvatar() {\r\n    }\r\n    MatCardAvatar.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[mat-card-avatar], [matCardAvatar]',\r\n                    host: { 'class': 'mat-card-avatar' }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardAvatar.ctorParameters = function () { return []; };\r\n    return MatCardAvatar;\r\n}());\r\n/**\r\n * A basic content container component that adds the styles of a Material design card.\r\n *\r\n * While this component can be used alone, it also provides a number\r\n * of preset styles for common card sections, including:\r\n * - mat-card-title\r\n * - mat-card-subtitle\r\n * - mat-card-content\r\n * - mat-card-actions\r\n * - mat-card-footer\r\n */\r\nvar MatCard = /** @class */ (function () {\r\n    function MatCard() {\r\n    }\r\n    MatCard.decorators = [\r\n        { type: Component, args: [{selector: 'mat-card',\r\n                    exportAs: 'matCard',\r\n                    template: \"<ng-content></ng-content><ng-content select=\\\"mat-card-footer\\\"></ng-content>\",\r\n                    styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(.4,0,.2,1);display:block;position:relative;padding:24px;border-radius:2px}.mat-card:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-card .mat-divider{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider{left:auto;right:0}.mat-card .mat-divider.mat-divider-inset{position:static;margin:0}@media screen and (-ms-high-contrast:active){.mat-card{outline:solid 1px}}.mat-card-flat{box-shadow:none}.mat-card-actions,.mat-card-content,.mat-card-subtitle,.mat-card-title{display:block;margin-bottom:16px}.mat-card-actions{margin-left:-16px;margin-right:-16px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 48px);margin:0 -24px 16px -24px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-footer{display:block;margin:0 -24px -24px -24px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button{margin:0 4px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header-text{margin:0 8px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0}.mat-card-lg-image,.mat-card-md-image,.mat-card-sm-image{margin:-8px 0}.mat-card-title-group{display:flex;justify-content:space-between;margin:0 -8px}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}@media (max-width:599px){.mat-card{padding:24px 16px}.mat-card-actions{margin-left:-8px;margin-right:-8px}.mat-card-image{width:calc(100% + 32px);margin:16px -16px}.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}.mat-card-header{margin:-8px 0 0 0}.mat-card-footer{margin-left:-16px;margin-right:-16px}}.mat-card-content>:first-child,.mat-card>:first-child{margin-top:0}.mat-card-content>:last-child:not(.mat-card-footer),.mat-card>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-24px}.mat-card>.mat-card-actions:last-child{margin-bottom:-16px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child{margin-left:0;margin-right:0}.mat-card-subtitle:not(:first-child),.mat-card-title:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\"],\r\n                    encapsulation: ViewEncapsulation.None,\r\n                    preserveWhitespaces: false,\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    host: { 'class': 'mat-card' }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCard.ctorParameters = function () { return []; };\r\n    return MatCard;\r\n}());\r\n/**\r\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\r\n * preset header section (i.e. a title, subtitle, and avatar layout).\r\n * \\@docs-private\r\n */\r\nvar MatCardHeader = /** @class */ (function () {\r\n    function MatCardHeader() {\r\n    }\r\n    MatCardHeader.decorators = [\r\n        { type: Component, args: [{selector: 'mat-card-header',\r\n                    template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content><div class=\\\"mat-card-header-text\\\"><ng-content select=\\\"mat-card-title, mat-card-subtitle, [mat-card-title], [mat-card-subtitle], [matCardTitle], [matCardSubtitle]\\\"></ng-content></div><ng-content></ng-content>\",\r\n                    encapsulation: ViewEncapsulation.None,\r\n                    preserveWhitespaces: false,\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    host: { 'class': 'mat-card-header' }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardHeader.ctorParameters = function () { return []; };\r\n    return MatCardHeader;\r\n}());\r\n/**\r\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\r\n * layout that groups an image with a title section.\r\n * \\@docs-private\r\n */\r\nvar MatCardTitleGroup = /** @class */ (function () {\r\n    function MatCardTitleGroup() {\r\n    }\r\n    MatCardTitleGroup.decorators = [\r\n        { type: Component, args: [{selector: 'mat-card-title-group',\r\n                    template: \"<div><ng-content select=\\\"mat-card-title, mat-card-subtitle, [mat-card-title], [mat-card-subtitle], [matCardTitle], [matCardSubtitle]\\\"></ng-content></div><ng-content select=\\\"img\\\"></ng-content><ng-content></ng-content>\",\r\n                    encapsulation: ViewEncapsulation.None,\r\n                    preserveWhitespaces: false,\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    host: { 'class': 'mat-card-title-group' }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardTitleGroup.ctorParameters = function () { return []; };\r\n    return MatCardTitleGroup;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\nvar MatCardModule = /** @class */ (function () {\r\n    function MatCardModule() {\r\n    }\r\n    MatCardModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [MatCommonModule],\r\n                    exports: [\r\n                        MatCard,\r\n                        MatCardHeader,\r\n                        MatCardTitleGroup,\r\n                        MatCardContent,\r\n                        MatCardTitle,\r\n                        MatCardSubtitle,\r\n                        MatCardActions,\r\n                        MatCardFooter,\r\n                        MatCardSmImage,\r\n                        MatCardMdImage,\r\n                        MatCardLgImage,\r\n                        MatCardImage,\r\n                        MatCardXlImage,\r\n                        MatCardAvatar,\r\n                        MatCommonModule,\r\n                    ],\r\n                    declarations: [\r\n                        MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\r\n                        MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\r\n                        MatCardXlImage, MatCardAvatar,\r\n                    ],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardModule.ctorParameters = function () { return []; };\r\n    return MatCardModule;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardImage, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardXlImage, MatCardAvatar, MatCard, MatCardHeader, MatCardTitleGroup, MatCardModule };\r\n//# sourceMappingURL=card.es5.js.map\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/material/esm5/card.es5.js\n// module id = 287\n// module chunks = 0 1","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { Directive, EventEmitter, Inject, Injectable, InjectionToken, Input, NgModule, Optional, Output } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Injection token used to inject the document into Directionality.\r\n * This is used so that the value can be faked in tests.\r\n *\r\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\r\n * tests in Safari to fail.\r\n *\r\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\r\n * themselves use things like `querySelector` in test code.\r\n */\r\nvar DIR_DOCUMENT = new InjectionToken('cdk-dir-doc');\r\n/**\r\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\r\n * Exposes the current direction and a stream of direction changes.\r\n */\r\nvar Directionality = /** @class */ (function () {\r\n    function Directionality(_document) {\r\n        /**\r\n         * The current 'ltr' or 'rtl' value.\r\n         */\r\n        this.value = 'ltr';\r\n        /**\r\n         * Stream that emits whenever the 'ltr' / 'rtl' state changes.\r\n         */\r\n        this.change = new EventEmitter();\r\n        if (_document) {\r\n            // TODO: handle 'auto' value -\r\n            // We still need to account for dir=\"auto\".\r\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\r\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\r\n            var /** @type {?} */ bodyDir = _document.body ? _document.body.dir : null;\r\n            var /** @type {?} */ htmlDir = _document.documentElement ? _document.documentElement.dir : null;\r\n            this.value = /** @type {?} */ ((bodyDir || htmlDir || 'ltr'));\r\n        }\r\n    }\r\n    Directionality.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    Directionality.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] },] },\r\n    ]; };\r\n    return Directionality;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Directive to listen for changes of direction of part of the DOM.\r\n *\r\n * Provides itself as Directionality such that descendant directives only need to ever inject\r\n * Directionality to get the closest direction.\r\n */\r\nvar Dir = /** @class */ (function () {\r\n    function Dir() {\r\n        this._dir = 'ltr';\r\n        /**\r\n         * Whether the `value` has been set to its initial value.\r\n         */\r\n        this._isInitialized = false;\r\n        /**\r\n         * Event emitted when the direction changes.\r\n         */\r\n        this.change = new EventEmitter();\r\n    }\r\n    Object.defineProperty(Dir.prototype, \"dir\", {\r\n        get: /**\r\n         * \\@docs-private\r\n         * @return {?}\r\n         */\r\n        function () { return this._dir; },\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            var /** @type {?} */ old = this._dir;\r\n            this._dir = v;\r\n            if (old !== this._dir && this._isInitialized) {\r\n                this.change.emit(this._dir);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Dir.prototype, \"value\", {\r\n        /** Current layout direction of the element. */\r\n        get: /**\r\n         * Current layout direction of the element.\r\n         * @return {?}\r\n         */\r\n        function () { return this.dir; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** Initialize once default value has been set. */\r\n    /**\r\n     * Initialize once default value has been set.\r\n     * @return {?}\r\n     */\r\n    Dir.prototype.ngAfterContentInit = /**\r\n     * Initialize once default value has been set.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._isInitialized = true;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Dir.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.change.complete();\r\n    };\r\n    Dir.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[dir]',\r\n                    providers: [{ provide: Directionality, useExisting: Dir }],\r\n                    host: { '[dir]': 'dir' },\r\n                    exportAs: 'dir',\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    Dir.ctorParameters = function () { return []; };\r\n    Dir.propDecorators = {\r\n        \"change\": [{ type: Output, args: ['dirChange',] },],\r\n        \"dir\": [{ type: Input },],\r\n    };\r\n    return Dir;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\nvar BidiModule = /** @class */ (function () {\r\n    function BidiModule() {\r\n    }\r\n    BidiModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    exports: [Dir],\r\n                    declarations: [Dir],\r\n                    providers: [\r\n                        { provide: DIR_DOCUMENT, useExisting: DOCUMENT },\r\n                        Directionality,\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    BidiModule.ctorParameters = function () { return []; };\r\n    return BidiModule;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { Directionality, DIR_DOCUMENT, Dir, BidiModule };\r\n//# sourceMappingURL=bidi.es5.js.map\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/cdk/esm5/bidi.es5.js\n// module id = 288\n// module chunks = 0 1","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\nvar UP_ARROW = 38;\r\nvar DOWN_ARROW = 40;\r\nvar RIGHT_ARROW = 39;\r\nvar LEFT_ARROW = 37;\r\nvar PAGE_UP = 33;\r\nvar PAGE_DOWN = 34;\r\nvar HOME = 36;\r\nvar END = 35;\r\nvar ENTER = 13;\r\nvar SPACE = 32;\r\nvar TAB = 9;\r\nvar ESCAPE = 27;\r\nvar BACKSPACE = 8;\r\nvar DELETE = 46;\r\nvar A = 65;\r\nvar Z = 90;\r\nvar ZERO = 48;\r\nvar NINE = 57;\r\nvar COMMA = 188;\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, PAGE_UP, PAGE_DOWN, HOME, END, ENTER, SPACE, TAB, ESCAPE, BACKSPACE, DELETE, A, Z, ZERO, NINE, COMMA };\r\n//# sourceMappingURL=keycodes.es5.js.map\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/cdk/esm5/keycodes.es5.js\n// module id = 289\n// module chunks = 0 1","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\n\r\n\r\n@IonicPage({\r\nname:'home'\r\n})\r\n\r\n@Component({\r\n  selector: 'page-home',\r\n  templateUrl: 'home.html'\r\n\r\n})\r\n\r\n\r\nexport class HomePage {\r\n\r\nlocations:any;\r\n\r\nlocation = [\r\n  {name:\"kiambu\",\r\nlat:-25.363,log:131.044,\r\nsize:\"15 acars\",\r\ncenter:40\r\n},\r\n{name:\"nairobi\",\r\nlat:42.8788,log:-1.54265,\r\nsize:\"15 acars\",\r\ncenter:35\r\n\r\n},\r\n{name:\"lodwar\",\r\nlat:-25.363,log:131.044,\r\nsize:\"15 acars\",\r\ncenter:45,\r\nzoom:10\r\n\r\n},\r\n{name:\"kamba\",\r\nlat:10.789,log:-2.87,\r\nsize:\"15 acars\",\r\ncenter:20\r\n\r\n}\r\n];\r\n\r\ncourse:any;\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n showMap(co){\r\n\r\n  console.log(co.name);\r\n\r\n   this.navCtrl.push('viewer');\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts"],"sourceRoot":""}