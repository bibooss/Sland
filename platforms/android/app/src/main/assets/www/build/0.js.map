{"version":3,"sources":["../../src/pages/login/login.module.ts","../../node_modules/@angular/material/esm5/core.es5.js","../../node_modules/@angular/cdk/esm5/coercion.es5.js","../../node_modules/@angular/cdk/esm5/platform.es5.js","../../node_modules/@angular/material/esm5/card.es5.js","../../node_modules/@angular/cdk/esm5/bidi.es5.js","../../node_modules/@angular/cdk/esm5/keycodes.es5.js","../../src/pages/login/login.ts","../../node_modules/@angular/material/esm5/form-field.es5.js","../../node_modules/rxjs/operators/startWith.js","../../node_modules/rxjs/observable/concat.js","../../node_modules/rxjs/observable/from.js","../../node_modules/rxjs/observable/FromObservable.js","../../node_modules/rxjs/observable/IteratorObservable.js","../../node_modules/rxjs/observable/ArrayLikeObservable.js","../../node_modules/rxjs/operators/observeOn.js","../../node_modules/rxjs/Notification.js","../../node_modules/rxjs/operators/concatAll.js","../../node_modules/rxjs/operators/take.js","../../node_modules/rxjs/util/ArgumentOutOfRangeError.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACO;AACZ;AACiB;AACW;AACvB;AAiBzC;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAf3B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,yDAAS;aACV;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,yDAAS,CAAC;gBACnC,6EAAa;gBACb,wFAAkB;gBAClB,mEAAW;aACZ;YAED,eAAe,EAAE;gBACf,yDAAS;aACV;SACF,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtB5B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAC6N;AACxM;AACS;AAC9B;AACgC;AACd;AACG;AACS;AACP;AAC2C;AAC3C;;AAEvB;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,yBAAyB;AACzB,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD;AAClD,SAAS,gCAAgC,wEAAiB,GAAG,uGAAgD,IAAI;AACjH,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB,uBAAuB,EAAE;AAClD;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,sHAA+C,EAAE;AAC/E;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB,oBAAoB,EAAE;AAC/C;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB,4BAA4B,EAAE;AACvD;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,8BAA8B,2HAAoD,EAAE;AACpF;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,yBAAyB,4CAA4C,EAAE;AACvE;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE,0CAA0C,EAAE;AACzE,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,YAAY,EAAE;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,4BAA4B,EAAE;AACnD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sBAAsB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,6BAA6B,EAAE,IAAI,EAAE;AAClG;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB,EAAE,UAAU,YAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE,kDAAkD,eAAe;AAC9F,2CAA2C,iFAAiF,EAAE;AAC9H;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE,kDAAkD,iBAAiB;AAChG;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE,kDAAkD,iBAAiB;AAChG;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,EAAE,gDAAgD,kBAAkB;AAC/F;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAA2C,kBAAkB,kBAAkB;AAC/E;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA,SAAS,0EAAmB;AAC5B;AACA;AACA,oDAAoD;AACpD,SAAS,gCAAgC,wEAAiB,GAAG,gGAAyC,IAAI;AAC1G,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,oBAAoB,oDAAoD;AACxE,yBAAyB,kCAAkC;AAC3D,wBAAwB,iDAAiD;AACzE,6BAA6B,iCAAiC;AAC9D;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,yBAAyB,oDAAoD;AAC7E;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,mDAAmD,WAAW;AAC9D;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iCAAiC,6CAA6C;AAC9E,iBAAiB,IAAI;AACrB;AACA;AACA,sDAAsD,WAAW;AACjE;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,0EAAmB;AAC5B;AACA;AACA,+DAA+D,WAAW;AAC1E;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS,0EAAmB;AAC5B;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE,yCAAyC,+BAA+B;AACjG,uBAAuB,EAAE,+CAA+C,gCAAgC;AACxG;AACA;AACA;AACA;AACA,0BAA0B,EAAE;AAC5B;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,KAAK;AACpB,gBAAgB;AAChB;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,uBAAuB,EAAE,iCAAiC,EAAE;AAC5D;AACA,8CAA8C,uCAAuC,EAAE;AACvF;AACA;AACA;AACA,SAAS,0EAAmB;AAC5B;AACA;AACA,gDAAgD;AAChD,SAAS,gCAAgC,wEAAiB,GAAG,mGAA4C,IAAI;AAC7G,SAAS,sCAAsC,wEAAiB,IAAI;AACpE,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,0CAA0C,WAAW;AACrD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kJAA2E,EAAE,MAAM,gBAAgB;AACnG;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C,uBAAuB,EAAE;AACzB,uBAAuB,EAAE,wFAAiC;AAC1D;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE,wFAAiC;AAC1D;AACA;AACA;AACA;AACA;AACA,iDAAiD,YAAY,EAAE;AAC/D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uDAAuD,yBAAyB,EAAE;AAClF;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,+BAA+B,WAAW;AAC1C,oDAAoD,8BAA8B,EAAE;AACpF;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,wDAAwD,EAAE;AAC/E;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,yHAAkE;AAClE;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,6FAAsC;AACtC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,4CAA4C;AAC5C,SAAS,2EAAoB;AAC7B,SAAS,uEAAgB;AACzB,SAAS,iFAAkB;AAC3B,SAAS,gCAAgC,wEAAiB,GAAG,0GAAmD,IAAI;AACpH,MAAM;AACN;AACA,mBAAmB,gGAAyC;AAC5D,uBAAuB,oGAA6C;AACpE,sBAAsB,mGAA4C;AAClE,oBAAoB,iGAA0C;AAC9D,yBAAyB,sGAA+C;AACxE,uBAAuB,oGAA6C;AACpE,sBAAsB,mGAA4C;AAClE,qBAAqB,kGAA2C;AAChE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iFAA0B;AACnC;AACA;AACA;AACA,mDAAmD,WAAW,YAAY,iBAAiB,kBAAkB,eAAe,qBAAqB,sBAAsB,sBAAsB,kBAAkB,cAAc,mGAAmG,4BAA4B,kBAAkB,UAAU,WAAW,qCAAqC,gDAAgD,wGAAwG,YAAY,8BAA8B,eAAe,0CAA0C,QAAQ,SAAS,WAAW,UAAU,oCAAoC,QAAQ,SAAS,WAAW,WAAW,mCAAmC,yBAAyB,UAAU;AAC11B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,mBAAmB,qEAAc;AACjC,sBAAsB,qEAAc;AACpC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,0DAA0D,WAAW;AACrE;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iFAA0B;AACnC;AACA,uFAAuF,SAAS;AAChG;AACA;AACA;AACA;AACA,kDAAkD,mBAAmB,gBAAgB,uBAAuB,cAAc,iBAAiB,YAAY,eAAe,gBAAgB,qBAAqB,yBAAyB,sBAAsB,qBAAqB,iBAAiB,eAAe,8BAA8B,eAAe,8BAA8B,iBAAiB,8BAA8B,kBAAkB,wCAAwC,iBAAiB,eAAe;AACngB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,8CAA8C,WAAW;AACzD;AACA,mBAAmB,qEAAc;AACjC;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,8CAA8C,EAAE;AACrE;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,iBAAiB,EAAE;AACxC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,uBAAuB,EAAE;AAC9C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,8DAA8D,EAAE;AACrF;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,sHAA+C,EAAE;AAC3E;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,mDAAmD,EAAE;AAC1E;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA;AACA;AACA,SAAS,iFAA0B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,0CAA0C,mBAAmB,gBAAgB,uBAAuB,cAAc,iBAAiB,YAAY,eAAe,gBAAgB,qBAAqB,kBAAkB,eAAe,UAAU,aAAa,mBAAmB,eAAe,sBAAsB,mBAAmB,sBAAsB,eAAe,sBAAsB,iBAAiB,sBAAsB,kBAAkB,gCAAgC,iBAAiB,eAAe,gCAAgC,yBAAyB,sBAAsB,qBAAqB,iBAAiB,eAAe,oDAAoD,kBAAkB,8DAA8D,kBAAkB,mBAAmB,iBAAiB,qBAAqB,YAAY,gBAAgB,uBAAuB,mBAAmB,MAAM,OAAO,QAAQ,SAAS,kBAAkB,oBAAoB,6CAA6C,mBAAmB,YAAY,4BAA4B,iBAAiB,sCAAsC,gBAAgB,eAAe;AACrpC;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,4CAA4C;AAC5C,SAAS,2EAAoB;AAC7B,SAAS,kFAA2B;AACpC,SAAS,gCAAgC,wEAAiB,GAAG,4GAAqD,IAAI;AACtH,SAAS,kCAAkC,wEAAiB,IAAI;AAChE,MAAM;AACN;AACA,mBAAmB,qEAAc;AACjC,sBAAsB,qEAAc;AACpC,+BAA+B,sEAAe;AAC9C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,4BAA4B,EAAE,UAAU,qBAAqB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;;AAEQ;AACR;;;;;;;;;;;;AC9rFA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA,WAAW,EAAE;AACb,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,wCAAwC,EAAE;AAC1C;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;;AAEQ;AACR;;;;;;;;;;;;;AC7EA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAC+B;;AAE/B;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,uEAAuE,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,EAAE;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0EAAmB;AAC5B;AACA;AACA,2CAA2C,WAAW;AACtD;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,uDAAuD,EAAE,sCAAsC;AAC/F,kCAAkC,qCAAqC;AACvE,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;;;;;;ACxLA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAC4F;AAClE;;AAE1B;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,kDAAkD,WAAW;AAC7D;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,mBAAmB,qEAAc;AACjC;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iFAA0B;AACnC;AACA;AACA,wCAAwC,oDAAoD,cAAc,kBAAkB,aAAa,kBAAkB,wCAAwC,iGAAiG,uBAAuB,kBAAkB,OAAO,WAAW,iCAAiC,UAAU,QAAQ,yCAAyC,gBAAgB,SAAS,6CAA6C,UAAU,mBAAmB,eAAe,gBAAgB,uEAAuE,cAAc,mBAAmB,kBAAkB,kBAAkB,mBAAmB,cAAc,4BAA4B,aAAa,yBAAyB,gBAAgB,wBAAwB,0BAA0B,mBAAmB,YAAY,aAAa,YAAY,iBAAiB,cAAc,2BAA2B,mEAAmE,aAAa,iBAAiB,aAAa,mBAAmB,sBAAsB,aAAa,iBAAiB,YAAY,WAAW,kBAAkB,cAAc,yDAAyD,cAAc,sBAAsB,aAAa,8BAA8B,cAAc,mBAAmB,WAAW,YAAY,mBAAmB,YAAY,aAAa,mBAAmB,YAAY,aAAa,yBAAyB,UAAU,kBAAkB,kBAAkB,iBAAiB,kBAAkB,gBAAgB,wBAAwB,kBAAkB,sBAAsB,SAAS,mBAAmB,cAAc,eAAe,iBAAiB,kBAAkB,iBAAiB,kBAAkB,oBAAoB,sDAAsD,aAAa,gGAAgG,gBAAgB,4BAA4B,iBAAiB,uCAAuC,oBAAoB,iBAAiB,2FAA2F,cAAc,eAAe,uEAAuE,gBAAgB,sDAAsD,gBAAgB,yCAAyC,gBAAgB,wCAAwC,mBAAmB;AACt+E;AACA;AACA;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,0CAA0C,WAAW;AACrD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iFAA0B;AACnC;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iFAA0B;AACnC;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,iBAAiB,IAAI;AACrB;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;;AAEQ;AACR;;;;;;;;;;;;;;ACvVA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACyG;AACtF;;AAEnB;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,oCAAoC,EAAE;AACtC;AACA;AACA;AACA,SAAS,0EAAmB;AAC5B;AACA;AACA,iDAAiD;AACjD,SAAS,gCAAgC,wEAAiB,GAAG,6FAAsC,IAAI;AACvG,MAAM;AACN;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,kBAAkB,EAAE;AACzC;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,iBAAiB,EAAE;AACxC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iCAAiC,4CAA4C;AAC7E,2BAA2B,iBAAiB;AAC5C;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,sCAAsC,WAAW;AACjD;AACA,oBAAoB,4FAAqC;AACzD,iBAAiB,qEAAc;AAC/B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,yBAAyB,wGAA+C;AACxE;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,6CAA6C,WAAW;AACxD;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5LA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;;AAEQ;AACR;;;;;;;;;;;;;;;;;;;;;AC9C0C;AACe;AACzD;;;;;GAKG;AAUH;IAKE,mBAAmB,OAAsB,EAAS,SAAoB;QAAnD,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;IAGtE,CAAC;IAED,kCAAc,GAAd;QAEE,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;IAE1C,CAAC;IAED,2BAAO,GAAP;QAEF,IAAI,CAAC,QAAQ,GAAC,EAAE,CAAC;QAGjB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAExB,CAAC;IAvBU,SAAS;QANrB,wEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;WACG;SAC1B,CAAC;kBAQsE;OAL3D,SAAS,CAyBrB;IAAD,CAAC;AAAA;SAzBY,SAAS,e;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBtB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACuB;AACgK;AAC9J;AACL;AACpB;AACgC;AACe;AAC3B;AACA;AACL;AACsC;;AAErD;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,2CAA2C,WAAW;AACtD;AACA,gBAAgB,qEAAc;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wKAA8B,0CAA0C;AACxE;AACA,wFAAmB,6CAA6C;AAChE;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,0CAA0C,WAAW;AACrD;AACA,mBAAmB,qEAAc;AACjC,gBAAgB,qEAAc;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,2CAA2C,WAAW;AACtD;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,iDAAiD,WAAW;AAC5D;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,4CAA4C,WAAW;AACvD;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,4CAA4C,WAAW;AACvD;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,mBAAmB,EAAE;AAC1C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,oBAAoB,EAAE;AAChD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,iCAAiC,EAAE;AACxD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,qCAAqC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,wBAAwB,EAAE;AAC/C;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,yBAAyB,EAAE;AAChD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,0BAA0B,yBAAyB,EAAE;AACrD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,oBAAoB;AACpB;AACA,qBAAqB,yBAAyB,EAAE;AAChD;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+HAA6D,EAAE;AAC/D;AACA;AACA;AACA,SAAS;AACT,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uBAAuB,EAAE;AACzB,wCAAwC,EAAE;AAC1C;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,+BAA+B,EAAE;AACjC,6DAA6D,+BAA+B,EAAE;AAC9F,+BAA+B,EAAE;AACjC,6DAA6D,6BAA6B,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,iBAAiB,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iFAA0B;AACnC;AACA;AACA,ikCAAikC,sBAAsB,gQAAgQ,o1BAAo1B,WAAW;AACtrE;AACA;AACA;AACA,8CAA8C,qBAAqB,kBAAkB,gBAAgB,0BAA0B,iBAAiB,wBAAwB,kBAAkB,qBAAqB,oBAAoB,qBAAqB,WAAW,8CAA8C,mBAAmB,UAAU,kEAAkE,UAAU,gFAAgF,aAAa,wBAAwB,oGAAoG,kBAAkB,sBAAsB,cAAc,kBAAkB,UAAU,YAAY,YAAY,8BAA8B,kBAAkB,OAAO,uBAAuB,WAAW,YAAY,gBAAgB,oBAAoB,sBAAsB,kBAAkB,OAAO,aAAa,oBAAoB,WAAW,mBAAmB,uBAAuB,gBAAgB,6BAA6B,mBAAmB,qBAAqB,8HAA8H,aAAa,gCAAgC,wBAAwB,UAAU,QAAQ,uHAAuH,cAAc,sGAAsG,aAAa,gIAAgI,cAAc,gBAAgB,+MAA+M,aAAa,mQAAmQ,cAAc,iDAAiD,gBAAgB,0BAA0B,kBAAkB,WAAW,WAAW,mDAAmD,sBAAsB,6BAA6B,iDAAiD,kBAAkB,MAAM,OAAO,WAAW,WAAW,qBAAqB,qBAAqB,kBAAkB,UAAU,2DAA2D,2FAA2F,WAAW,uIAAuI,mBAAmB,UAAU,oBAAoB,2IAA2I,kCAAkC,kBAAkB,WAAW,gBAAgB,oFAAoF,UAAU,WAAW,kBAAkB,wBAAwB,6BAA6B,aAAa,4BAA4B,aAAa,WAAW,cAAc,oBAAoB,aAAa,eAAe,mBAAmB,YAAY,UAAU,UAAU,SAAS,WAAW,eAAe,sBAAsB,mBAAmB,mCAAmC,gBAAgB,6DAA6D,aAAa,6OAA6O,YAAY,gBAAgB,UAAU,gCAAgC,sDAAsD,qCAAqC,sDAAsD,8CAA8C,sDAAsD,yCAAyC,sDAAsD,iEAAiE,4BAA4B,gBAAgB,sEAAsE,4BAA4B,gBAAgB,+EAA+E,4BAA4B,gBAAgB,0EAA0E,4BAA4B,gBAAgB,2BAA2B,gBAAgB,cAAc,sBAAsB,YAAY;AAC7zJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+CAA+C;AAC/C,SAAS,2EAAoB;AAC7B,SAAS,kFAA2B;AACpC,SAAS,gCAAgC,wEAAiB,GAAG,yKAAkD,IAAI;AACnH,MAAM;AACN;AACA,0BAA0B,qEAAc;AACxC,gCAAgC,qEAAc;AAC9C,uBAAuB,qEAAc;AACrC,8BAA8B,qEAAc;AAC5C,wBAAwB,qEAAc;AACtC,0BAA0B,gGAAwC;AAClE,qCAAqC,0GAAkD;AACvF,gCAAgC,qGAA6C;AAC7E,oBAAoB,4FAAoC;AACxD,sBAAsB,0GAAmD;AACzE,+BAA+B,qGAA8C;AAC7E,yBAAyB,+FAAwC;AACjE,4BAA4B,kGAA2C;AACvE,2BAA2B,iGAA0C;AACrE,6BAA6B,mGAA4C;AACzE,6BAA6B,mGAA4C;AACzE;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,qDAAqD,WAAW;AAChE;AACA,CAAC;;AAED;AACA;AACA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA,cAAc,WAAW;AACzB;AACA;AACA;AACA;;AAEQ;AACR;;;;;;;;;AC/uBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,UAAU,kBAAkB,iBAAiB;AACxD;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B,WAAW,gBAAgB;AAC3B;AACA,WAAW,UAAU;AACrB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;AC9GA;AACA;AACA;AACA,gC;;;;;;;;ACHA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;AACb;AACA,eAAe,mBAAmB;AAClC;AACA;AACA,eAAe,UAAU;AACzB;AACA,gBAAgB,cAAc;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,0C;;;;;;;;ACzHA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,6BAA6B,SAAS;AACtC,6BAA6B,kBAAkB;AAC/C;AACA;AACA;AACA;AACA,iEAAiE,eAAe;AAChF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,6BAA6B,SAAS;AACtC,6BAA6B,qBAAqB;AAClD;AACA;AACA;AACA;AACA,gEAAgE,aAAa;AAC7E;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8C;;;;;;;;AClKA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,2BAA2B,kCAAkC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,+C;;;;;;;;ACrEA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,YAAY;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA,IAAI;AACJ;AACA,SAAS;AACT;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,qC;;;;;;;;AClHA;AACA;AACA;AACA,mDAAmD,iBAAiB;AACpE;AACA,SAAS,kBAAkB,GAAG,oBAAoB,GAAG,gBAAgB;AACrE;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA,eAAe,yBAAyB;AACxC,eAAe,yBAAyB;AACxC,eAAe,iBAAiB;AAChC,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kCAAkC;AACjD;AACA,eAAe,yBAAyB;AACxC,eAAe,iBAAiB;AAChC,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,wC;;;;;;;;AC9HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;ACtDA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,YAAY,wBAAwB;AACpC;AACA;AACA,WAAW,OAAO;AAClB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,gC;;;;;;;;AC1FA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,mD","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { LoginPage } from './login';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport{FormsModule} from '@angular/forms'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(LoginPage),\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    FormsModule\r\n  ],\r\n\r\n  entryComponents: [\r\n    LoginPage\r\n  ],\r\n})\r\nexport class LoginPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, ElementRef, EventEmitter, Inject, Injectable, InjectionToken, Input, LOCALE_ID, NgModule, NgZone, Optional, Output, ViewEncapsulation, isDevMode } from '@angular/core';\r\nimport { BidiModule } from '@angular/cdk/bidi';\r\nimport { __assign, __extends } from 'tslib';\r\nimport * as tslib_1 from 'tslib';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { HammerGestureConfig } from '@angular/platform-browser';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Platform, PlatformModule, supportsPassiveEventListeners } from '@angular/cdk/platform';\r\nimport { ENTER, SPACE } from '@angular/cdk/keycodes';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * \\@docs-private\r\n */\r\nvar AnimationCurves = /** @class */ (function () {\r\n    function AnimationCurves() {\r\n    }\r\n    AnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\r\n    AnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\r\n    AnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\r\n    AnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\r\n    return AnimationCurves;\r\n}());\r\n/**\r\n * \\@docs-private\r\n */\r\nvar AnimationDurations = /** @class */ (function () {\r\n    function AnimationDurations() {\r\n    }\r\n    AnimationDurations.COMPLEX = '375ms';\r\n    AnimationDurations.ENTERING = '225ms';\r\n    AnimationDurations.EXITING = '195ms';\r\n    return AnimationDurations;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Injection token that configures whether the Material sanity checks are enabled.\r\n */\r\nvar MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks');\r\n/**\r\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\r\n * components. This includes Bidi, etc.\r\n *\r\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\r\n */\r\nvar MatCommonModule = /** @class */ (function () {\r\n    function MatCommonModule(_sanityChecksEnabled) {\r\n        this._sanityChecksEnabled = _sanityChecksEnabled;\r\n        /**\r\n         * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\r\n         */\r\n        this._hasDoneGlobalChecks = false;\r\n        /**\r\n         * Whether we've already checked for HammerJs availability.\r\n         */\r\n        this._hasCheckedHammer = false;\r\n        /**\r\n         * Reference to the global `document` object.\r\n         */\r\n        this._document = typeof document === 'object' && document ? document : null;\r\n        /**\r\n         * Reference to the global 'window' object.\r\n         */\r\n        this._window = typeof window === 'object' && window ? window : null;\r\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\r\n            this._checkDoctypeIsDefined();\r\n            this._checkThemeIsPresent();\r\n            this._hasDoneGlobalChecks = true;\r\n        }\r\n    }\r\n    /**\r\n     * Whether any sanity checks are enabled\r\n     * @return {?}\r\n     */\r\n    MatCommonModule.prototype._areChecksEnabled = /**\r\n     * Whether any sanity checks are enabled\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\r\n    };\r\n    /**\r\n     * Whether the code is running in tests.\r\n     * @return {?}\r\n     */\r\n    MatCommonModule.prototype._isTestEnv = /**\r\n     * Whether the code is running in tests.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MatCommonModule.prototype._checkDoctypeIsDefined = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._document && !this._document.doctype) {\r\n            console.warn('Current document does not have a doctype. This may cause ' +\r\n                'some Angular Material components not to behave as expected.');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MatCommonModule.prototype._checkThemeIsPresent = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._document && typeof getComputedStyle === 'function') {\r\n            var /** @type {?} */ testElement = this._document.createElement('div');\r\n            testElement.classList.add('mat-theme-loaded-marker');\r\n            this._document.body.appendChild(testElement);\r\n            var /** @type {?} */ computedStyle = getComputedStyle(testElement);\r\n            // In some situations, the computed style of the test element can be null. For example in\r\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\r\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\r\n            if (computedStyle && computedStyle.display !== 'none') {\r\n                console.warn('Could not find Angular Material core theme. Most Material ' +\r\n                    'components may not work as expected. For more info refer ' +\r\n                    'to the theming guide: https://material.angular.io/guide/theming');\r\n            }\r\n            this._document.body.removeChild(testElement);\r\n        }\r\n    };\r\n    /** Checks whether HammerJS is available. */\r\n    /**\r\n     * Checks whether HammerJS is available.\r\n     * @return {?}\r\n     */\r\n    MatCommonModule.prototype._checkHammerIsAvailable = /**\r\n     * Checks whether HammerJS is available.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._hasCheckedHammer || !this._window) {\r\n            return;\r\n        }\r\n        if (this._areChecksEnabled() && !this._window['Hammer']) {\r\n            console.warn('Could not find HammerJS. Certain Angular Material components may not work correctly.');\r\n        }\r\n        this._hasCheckedHammer = true;\r\n    };\r\n    MatCommonModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [BidiModule],\r\n                    exports: [BidiModule],\r\n                    providers: [{\r\n                            provide: MATERIAL_SANITY_CHECKS, useValue: true,\r\n                        }],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCommonModule.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS,] },] },\r\n    ]; };\r\n    return MatCommonModule;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * \\@docs-private\r\n * @record\r\n */\r\n\r\n/**\r\n * Mixin to augment a directive with a `disabled` property.\r\n * @template T\r\n * @param {?} base\r\n * @return {?}\r\n */\r\nfunction mixinDisabled(base) {\r\n    return /** @class */ (function (_super) {\r\n        __extends(class_1, _super);\r\n        function class_1() {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var _this = _super.apply(this, args) || this;\r\n            _this._disabled = false;\r\n            return _this;\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"disabled\", {\r\n            get: /**\r\n             * @return {?}\r\n             */\r\n            function () { return this._disabled; },\r\n            set: /**\r\n             * @param {?} value\r\n             * @return {?}\r\n             */\r\n            function (value) { this._disabled = coerceBooleanProperty(value); },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return class_1;\r\n    }(base));\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * \\@docs-private\r\n * @record\r\n */\r\n\r\n/**\r\n * \\@docs-private\r\n * @record\r\n */\r\n\r\n/**\r\n * Mixin to augment a directive with a `color` property.\r\n * @template T\r\n * @param {?} base\r\n * @param {?=} defaultColor\r\n * @return {?}\r\n */\r\nfunction mixinColor(base, defaultColor) {\r\n    return /** @class */ (function (_super) {\r\n        __extends(class_1, _super);\r\n        function class_1() {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var _this = _super.apply(this, args) || this;\r\n            // Set the default color that can be specified from the mixin.\r\n            // Set the default color that can be specified from the mixin.\r\n            _this.color = defaultColor;\r\n            return _this;\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"color\", {\r\n            get: /**\r\n             * @return {?}\r\n             */\r\n            function () { return this._color; },\r\n            set: /**\r\n             * @param {?} value\r\n             * @return {?}\r\n             */\r\n            function (value) {\r\n                var /** @type {?} */ colorPalette = value || defaultColor;\r\n                if (colorPalette !== this._color) {\r\n                    if (this._color) {\r\n                        this._elementRef.nativeElement.classList.remove(\"mat-\" + this._color);\r\n                    }\r\n                    if (colorPalette) {\r\n                        this._elementRef.nativeElement.classList.add(\"mat-\" + colorPalette);\r\n                    }\r\n                    this._color = colorPalette;\r\n                }\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return class_1;\r\n    }(base));\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * \\@docs-private\r\n * @record\r\n */\r\n\r\n/**\r\n * Mixin to augment a directive with a `disableRipple` property.\r\n * @template T\r\n * @param {?} base\r\n * @return {?}\r\n */\r\nfunction mixinDisableRipple(base) {\r\n    return /** @class */ (function (_super) {\r\n        __extends(class_1, _super);\r\n        function class_1() {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var _this = _super.apply(this, args) || this;\r\n            _this._disableRipple = false;\r\n            return _this;\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"disableRipple\", {\r\n            /** Whether the ripple effect is disabled or not. */\r\n            get: /**\r\n             * Whether the ripple effect is disabled or not.\r\n             * @return {?}\r\n             */\r\n            function () { return this._disableRipple; },\r\n            set: /**\r\n             * @param {?} value\r\n             * @return {?}\r\n             */\r\n            function (value) { this._disableRipple = coerceBooleanProperty(value); },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return class_1;\r\n    }(base));\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * \\@docs-private\r\n * @record\r\n */\r\n\r\n/**\r\n * Mixin to augment a directive with a `tabIndex` property.\r\n * @template T\r\n * @param {?} base\r\n * @param {?=} defaultTabIndex\r\n * @return {?}\r\n */\r\nfunction mixinTabIndex(base, defaultTabIndex) {\r\n    if (defaultTabIndex === void 0) { defaultTabIndex = 0; }\r\n    return /** @class */ (function (_super) {\r\n        __extends(class_1, _super);\r\n        function class_1() {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var _this = _super.apply(this, args) || this;\r\n            _this._tabIndex = defaultTabIndex;\r\n            return _this;\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"tabIndex\", {\r\n            get: /**\r\n             * @return {?}\r\n             */\r\n            function () { return this.disabled ? -1 : this._tabIndex; },\r\n            set: /**\r\n             * @param {?} value\r\n             * @return {?}\r\n             */\r\n            function (value) {\r\n                // If the specified tabIndex value is null or undefined, fall back to the default value.\r\n                this._tabIndex = value != null ? value : defaultTabIndex;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        return class_1;\r\n    }(base));\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * \\@docs-private\r\n * @record\r\n */\r\n\r\n/**\r\n * \\@docs-private\r\n * @record\r\n */\r\n\r\n/**\r\n * Mixin to augment a directive with updateErrorState method.\r\n * For component with `errorState` and need to update `errorState`.\r\n * @template T\r\n * @param {?} base\r\n * @return {?}\r\n */\r\nfunction mixinErrorState(base) {\r\n    return /** @class */ (function (_super) {\r\n        __extends(class_1, _super);\r\n        function class_1() {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var _this = _super.apply(this, args) || this;\r\n            /**\r\n             * Whether the component is in an error state.\r\n             */\r\n            _this.errorState = false;\r\n            /**\r\n             * Stream that emits whenever the state of the input changes such that the wrapping\r\n             * `MatFormField` needs to run change detection.\r\n             */\r\n            _this.stateChanges = new Subject();\r\n            return _this;\r\n        }\r\n        /**\r\n         * @return {?}\r\n         */\r\n        class_1.prototype.updateErrorState = /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            var /** @type {?} */ oldState = this.errorState;\r\n            var /** @type {?} */ parent = this._parentFormGroup || this._parentForm;\r\n            var /** @type {?} */ matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\r\n            var /** @type {?} */ control = this.ngControl ? /** @type {?} */ (this.ngControl.control) : null;\r\n            var /** @type {?} */ newState = matcher.isErrorState(control, parent);\r\n            if (newState !== oldState) {\r\n                this.errorState = newState;\r\n                this.stateChanges.next();\r\n            }\r\n        };\r\n        return class_1;\r\n    }(base));\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Mixin that adds an initialized property to a directive which, when subscribed to, will emit a\r\n * value once markInitialized has been called, which should be done during the ngOnInit function.\r\n * If the subscription is made after it has already been marked as initialized, then it will trigger\r\n * an emit immediately.\r\n * \\@docs-private\r\n * @record\r\n */\r\n\r\n/**\r\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\r\n * @template T\r\n * @param {?} base\r\n * @return {?}\r\n */\r\nfunction mixinInitialized(base) {\r\n    return /** @class */ (function (_super) {\r\n        __extends(class_1, _super);\r\n        function class_1() {\r\n            var args = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                args[_i] = arguments[_i];\r\n            }\r\n            var _this = _super.apply(this, args) || this;\r\n            /**\r\n             * Whether this directive has been marked as initialized.\r\n             */\r\n            _this._isInitialized = false;\r\n            /**\r\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\r\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\r\n             * not expect to be populated after.\r\n             */\r\n            _this._pendingSubscribers = [];\r\n            /**\r\n             * Observable stream that emits when the directive initializes. If already initialized, the\r\n             * subscriber is stored to be notified once _markInitialized is called.\r\n             */\r\n            _this.initialized = new Observable(function (subscriber) {\r\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\r\n                // when _markInitialized is called.\r\n                if (_this._isInitialized) {\r\n                    _this._notifySubscriber(subscriber);\r\n                }\r\n                else {\r\n                    /** @type {?} */ ((_this._pendingSubscribers)).push(subscriber);\r\n                }\r\n            });\r\n            return _this;\r\n        }\r\n        /**\r\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\r\n         * of ngOnInit.\r\n         * @docs-private\r\n         */\r\n        /**\r\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\r\n         * of ngOnInit.\r\n         * \\@docs-private\r\n         * @return {?}\r\n         */\r\n        class_1.prototype._markInitialized = /**\r\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\r\n         * of ngOnInit.\r\n         * \\@docs-private\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            if (this._isInitialized) {\r\n                throw Error('This directive has already been marked as initialized and ' +\r\n                    'should not be called twice.');\r\n            }\r\n            this._isInitialized = true; /** @type {?} */\r\n            ((this._pendingSubscribers)).forEach(this._notifySubscriber);\r\n            this._pendingSubscribers = null;\r\n        };\r\n        /** Emits and completes the subscriber stream (should only emit once). */\r\n        /**\r\n         * Emits and completes the subscriber stream (should only emit once).\r\n         * @param {?} subscriber\r\n         * @return {?}\r\n         */\r\n        class_1.prototype._notifySubscriber = /**\r\n         * Emits and completes the subscriber stream (should only emit once).\r\n         * @param {?} subscriber\r\n         * @return {?}\r\n         */\r\n        function (subscriber) {\r\n            subscriber.next();\r\n            subscriber.complete();\r\n        };\r\n        return class_1;\r\n    }(base));\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * InjectionToken for datepicker that can be used to override default locale code.\r\n */\r\nvar MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE');\r\n/**\r\n * Provider for MAT_DATE_LOCALE injection token.\r\n */\r\nvar MAT_DATE_LOCALE_PROVIDER = { provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID };\r\n/**\r\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\r\n * @abstract\r\n */\r\nvar DateAdapter = /** @class */ (function () {\r\n    function DateAdapter() {\r\n        this._localeChanges = new Subject();\r\n    }\r\n    Object.defineProperty(DateAdapter.prototype, \"localeChanges\", {\r\n        /** A stream that emits when the locale changes. */\r\n        get: /**\r\n         * A stream that emits when the locale changes.\r\n         * @return {?}\r\n         */\r\n        function () { return this._localeChanges; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\r\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\r\n     * string). The default implementation does not allow any deserialization, it simply checks that\r\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\r\n     * method on all of it's `@Input()` properties that accept dates. It is therefore possible to\r\n     * support passing values from your backend directly to these properties by overriding this method\r\n     * to also deserialize the format used by your backend.\r\n     * @param value The value to be deserialized into a date object.\r\n     * @returns The deserialized date object, either a valid date, null if the value can be\r\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\r\n     */\r\n    /**\r\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\r\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\r\n     * string). The default implementation does not allow any deserialization, it simply checks that\r\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\r\n     * method on all of it's `\\@Input()` properties that accept dates. It is therefore possible to\r\n     * support passing values from your backend directly to these properties by overriding this method\r\n     * to also deserialize the format used by your backend.\r\n     * @param {?} value The value to be deserialized into a date object.\r\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\r\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\r\n     */\r\n    DateAdapter.prototype.deserialize = /**\r\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\r\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\r\n     * string). The default implementation does not allow any deserialization, it simply checks that\r\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\r\n     * method on all of it's `\\@Input()` properties that accept dates. It is therefore possible to\r\n     * support passing values from your backend directly to these properties by overriding this method\r\n     * to also deserialize the format used by your backend.\r\n     * @param {?} value The value to be deserialized into a date object.\r\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\r\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\r\n     */\r\n    function (value) {\r\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\r\n            return value;\r\n        }\r\n        return this.invalid();\r\n    };\r\n    /**\r\n     * Sets the locale used for all dates.\r\n     * @param locale The new locale.\r\n     */\r\n    /**\r\n     * Sets the locale used for all dates.\r\n     * @param {?} locale The new locale.\r\n     * @return {?}\r\n     */\r\n    DateAdapter.prototype.setLocale = /**\r\n     * Sets the locale used for all dates.\r\n     * @param {?} locale The new locale.\r\n     * @return {?}\r\n     */\r\n    function (locale) {\r\n        this.locale = locale;\r\n        this._localeChanges.next();\r\n    };\r\n    /**\r\n     * Compares two dates.\r\n     * @param first The first date to compare.\r\n     * @param second The second date to compare.\r\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\r\n     *     a number greater than 0 if the first date is later.\r\n     */\r\n    /**\r\n     * Compares two dates.\r\n     * @param {?} first The first date to compare.\r\n     * @param {?} second The second date to compare.\r\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\r\n     *     a number greater than 0 if the first date is later.\r\n     */\r\n    DateAdapter.prototype.compareDate = /**\r\n     * Compares two dates.\r\n     * @param {?} first The first date to compare.\r\n     * @param {?} second The second date to compare.\r\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\r\n     *     a number greater than 0 if the first date is later.\r\n     */\r\n    function (first, second) {\r\n        return this.getYear(first) - this.getYear(second) ||\r\n            this.getMonth(first) - this.getMonth(second) ||\r\n            this.getDate(first) - this.getDate(second);\r\n    };\r\n    /**\r\n     * Checks if two dates are equal.\r\n     * @param first The first date to check.\r\n     * @param second The second date to check.\r\n     * @returns Whether the two dates are equal.\r\n     *     Null dates are considered equal to other null dates.\r\n     */\r\n    /**\r\n     * Checks if two dates are equal.\r\n     * @param {?} first The first date to check.\r\n     * @param {?} second The second date to check.\r\n     * @return {?} Whether the two dates are equal.\r\n     *     Null dates are considered equal to other null dates.\r\n     */\r\n    DateAdapter.prototype.sameDate = /**\r\n     * Checks if two dates are equal.\r\n     * @param {?} first The first date to check.\r\n     * @param {?} second The second date to check.\r\n     * @return {?} Whether the two dates are equal.\r\n     *     Null dates are considered equal to other null dates.\r\n     */\r\n    function (first, second) {\r\n        if (first && second) {\r\n            var /** @type {?} */ firstValid = this.isValid(first);\r\n            var /** @type {?} */ secondValid = this.isValid(second);\r\n            if (firstValid && secondValid) {\r\n                return !this.compareDate(first, second);\r\n            }\r\n            return firstValid == secondValid;\r\n        }\r\n        return first == second;\r\n    };\r\n    /**\r\n     * Clamp the given date between min and max dates.\r\n     * @param date The date to clamp.\r\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\r\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\r\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\r\n     *     otherwise `date`.\r\n     */\r\n    /**\r\n     * Clamp the given date between min and max dates.\r\n     * @param {?} date The date to clamp.\r\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\r\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\r\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\r\n     *     otherwise `date`.\r\n     */\r\n    DateAdapter.prototype.clampDate = /**\r\n     * Clamp the given date between min and max dates.\r\n     * @param {?} date The date to clamp.\r\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\r\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\r\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\r\n     *     otherwise `date`.\r\n     */\r\n    function (date, min, max) {\r\n        if (min && this.compareDate(date, min) < 0) {\r\n            return min;\r\n        }\r\n        if (max && this.compareDate(date, max) > 0) {\r\n            return max;\r\n        }\r\n        return date;\r\n    };\r\n    return DateAdapter;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\nvar MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Whether the browser supports the Intl API.\r\n */\r\nvar SUPPORTS_INTL_API = typeof Intl != 'undefined';\r\n/**\r\n * The default month names to use if Intl API is not available.\r\n */\r\nvar DEFAULT_MONTH_NAMES = {\r\n    'long': [\r\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\r\n        'October', 'November', 'December'\r\n    ],\r\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\r\n};\r\nvar ɵ0$1 = function (i) { return String(i + 1); };\r\n/**\r\n * The default date names to use if Intl API is not available.\r\n */\r\nvar DEFAULT_DATE_NAMES = range(31, ɵ0$1);\r\n/**\r\n * The default day of the week names to use if Intl API is not available.\r\n */\r\nvar DEFAULT_DAY_OF_WEEK_NAMES = {\r\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\r\n};\r\n/**\r\n * Matches strings that have the form of a valid RFC 3339 string\r\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\r\n * because the regex will match strings an with out of bounds month, date, etc.\r\n */\r\nvar ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\r\n/**\r\n * Creates an array and fills it with values.\r\n * @template T\r\n * @param {?} length\r\n * @param {?} valueFunction\r\n * @return {?}\r\n */\r\nfunction range(length, valueFunction) {\r\n    var /** @type {?} */ valuesArray = Array(length);\r\n    for (var /** @type {?} */ i = 0; i < length; i++) {\r\n        valuesArray[i] = valueFunction(i);\r\n    }\r\n    return valuesArray;\r\n}\r\n/**\r\n * Adapts the native JS Date for use with cdk-based components that work with dates.\r\n */\r\nvar NativeDateAdapter = /** @class */ (function (_super) {\r\n    __extends(NativeDateAdapter, _super);\r\n    function NativeDateAdapter(matDateLocale) {\r\n        var _this = _super.call(this) || this;\r\n        _super.prototype.setLocale.call(_this, matDateLocale);\r\n        // IE does its own time zone correction, so we disable this on IE.\r\n        // TODO(mmalerba): replace with checks from PLATFORM, logic currently duplicated to avoid\r\n        // breaking change from injecting the Platform.\r\n        var /** @type {?} */ isBrowser = typeof document === 'object' && !!document;\r\n        var /** @type {?} */ isIE = isBrowser && /(msie|trident)/i.test(navigator.userAgent);\r\n        _this.useUtcForDisplay = !isIE;\r\n        _this._clampDate = isIE || (isBrowser && /(edge)/i.test(navigator.userAgent));\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.getYear = /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    function (date) {\r\n        return date.getFullYear();\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.getMonth = /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    function (date) {\r\n        return date.getMonth();\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.getDate = /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    function (date) {\r\n        return date.getDate();\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.getDayOfWeek = /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    function (date) {\r\n        return date.getDay();\r\n    };\r\n    /**\r\n     * @param {?} style\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.getMonthNames = /**\r\n     * @param {?} style\r\n     * @return {?}\r\n     */\r\n    function (style) {\r\n        var _this = this;\r\n        if (SUPPORTS_INTL_API) {\r\n            var /** @type {?} */ dtf_1 = new Intl.DateTimeFormat(this.locale, { month: style });\r\n            return range(12, function (i) { return _this._stripDirectionalityCharacters(dtf_1.format(new Date(2017, i, 1))); });\r\n        }\r\n        return DEFAULT_MONTH_NAMES[style];\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.getDateNames = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        if (SUPPORTS_INTL_API) {\r\n            var /** @type {?} */ dtf_2 = new Intl.DateTimeFormat(this.locale, { day: 'numeric' });\r\n            return range(31, function (i) {\r\n                return _this._stripDirectionalityCharacters(dtf_2.format(new Date(2017, 0, i + 1)));\r\n            });\r\n        }\r\n        return DEFAULT_DATE_NAMES;\r\n    };\r\n    /**\r\n     * @param {?} style\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.getDayOfWeekNames = /**\r\n     * @param {?} style\r\n     * @return {?}\r\n     */\r\n    function (style) {\r\n        var _this = this;\r\n        if (SUPPORTS_INTL_API) {\r\n            var /** @type {?} */ dtf_3 = new Intl.DateTimeFormat(this.locale, { weekday: style });\r\n            return range(7, function (i) {\r\n                return _this._stripDirectionalityCharacters(dtf_3.format(new Date(2017, 0, i + 1)));\r\n            });\r\n        }\r\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.getYearName = /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    function (date) {\r\n        if (SUPPORTS_INTL_API) {\r\n            var /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric' });\r\n            return this._stripDirectionalityCharacters(dtf.format(date));\r\n        }\r\n        return String(this.getYear(date));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.getFirstDayOfWeek = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\r\n        return 0;\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.getNumDaysInMonth = /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    function (date) {\r\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.clone = /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    function (date) {\r\n        return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date));\r\n    };\r\n    /**\r\n     * @param {?} year\r\n     * @param {?} month\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.createDate = /**\r\n     * @param {?} year\r\n     * @param {?} month\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    function (year, month, date) {\r\n        // Check for invalid month and date (except upper bound on date which we have to check after\r\n        // creating the Date).\r\n        if (month < 0 || month > 11) {\r\n            throw Error(\"Invalid month index \\\"\" + month + \"\\\". Month index has to be between 0 and 11.\");\r\n        }\r\n        if (date < 1) {\r\n            throw Error(\"Invalid date \\\"\" + date + \"\\\". Date has to be greater than 0.\");\r\n        }\r\n        var /** @type {?} */ result = this._createDateWithOverflow(year, month, date);\r\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\r\n        if (result.getMonth() != month) {\r\n            throw Error(\"Invalid date \\\"\" + date + \"\\\" for month with index \\\"\" + month + \"\\\".\");\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.today = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new Date();\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.parse = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\r\n        // parameters.\r\n        if (typeof value == 'number') {\r\n            return new Date(value);\r\n        }\r\n        return value ? new Date(Date.parse(value)) : null;\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @param {?} displayFormat\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.format = /**\r\n     * @param {?} date\r\n     * @param {?} displayFormat\r\n     * @return {?}\r\n     */\r\n    function (date, displayFormat) {\r\n        if (!this.isValid(date)) {\r\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\r\n        }\r\n        if (SUPPORTS_INTL_API) {\r\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\r\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\r\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\r\n                date = this.clone(date);\r\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\r\n            }\r\n            if (this.useUtcForDisplay) {\r\n                date = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\r\n                displayFormat = __assign({}, displayFormat, { timeZone: 'utc' });\r\n            }\r\n            var /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\r\n            return this._stripDirectionalityCharacters(dtf.format(date));\r\n        }\r\n        return this._stripDirectionalityCharacters(date.toDateString());\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @param {?} years\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.addCalendarYears = /**\r\n     * @param {?} date\r\n     * @param {?} years\r\n     * @return {?}\r\n     */\r\n    function (date, years) {\r\n        return this.addCalendarMonths(date, years * 12);\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @param {?} months\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.addCalendarMonths = /**\r\n     * @param {?} date\r\n     * @param {?} months\r\n     * @return {?}\r\n     */\r\n    function (date, months) {\r\n        var /** @type {?} */ newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\r\n        // It's possible to wind up in the wrong month if the original month has more days than the new\r\n        // month. In this case we want to go to the last day of the desired month.\r\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\r\n        // guarantee this.\r\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\r\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\r\n        }\r\n        return newDate;\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @param {?} days\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.addCalendarDays = /**\r\n     * @param {?} date\r\n     * @param {?} days\r\n     * @return {?}\r\n     */\r\n    function (date, days) {\r\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.toIso8601 = /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    function (date) {\r\n        return [\r\n            date.getUTCFullYear(),\r\n            this._2digit(date.getUTCMonth() + 1),\r\n            this._2digit(date.getUTCDate())\r\n        ].join('-');\r\n    };\r\n    /**\r\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\r\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\r\n     * invalid date for all other values.\r\n     */\r\n    /**\r\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\r\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\r\n     * invalid date for all other values.\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.deserialize = /**\r\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\r\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\r\n     * invalid date for all other values.\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        if (typeof value === 'string') {\r\n            if (!value) {\r\n                return null;\r\n            }\r\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\r\n            // string is the right format first.\r\n            if (ISO_8601_REGEX.test(value)) {\r\n                var /** @type {?} */ date = new Date(value);\r\n                if (this.isValid(date)) {\r\n                    return date;\r\n                }\r\n            }\r\n        }\r\n        return _super.prototype.deserialize.call(this, value);\r\n    };\r\n    /**\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.isDateInstance = /**\r\n     * @param {?} obj\r\n     * @return {?}\r\n     */\r\n    function (obj) {\r\n        return obj instanceof Date;\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.isValid = /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    function (date) {\r\n        return !isNaN(date.getTime());\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype.invalid = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return new Date(NaN);\r\n    };\r\n    /**\r\n     * Creates a date but allows the month and date to overflow.\r\n     * @param {?} year\r\n     * @param {?} month\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    NativeDateAdapter.prototype._createDateWithOverflow = /**\r\n     * Creates a date but allows the month and date to overflow.\r\n     * @param {?} year\r\n     * @param {?} month\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    function (year, month, date) {\r\n        var /** @type {?} */ result = new Date(year, month, date);\r\n        // We need to correct for the fact that JS native Date treats years in range [0, 99] as\r\n        // abbreviations for 19xx.\r\n        if (year >= 0 && year < 100) {\r\n            result.setFullYear(this.getYear(result) - 1900);\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Pads a number to make it two digits.\r\n     * @param {?} n The number to pad.\r\n     * @return {?} The padded number.\r\n     */\r\n    NativeDateAdapter.prototype._2digit = /**\r\n     * Pads a number to make it two digits.\r\n     * @param {?} n The number to pad.\r\n     * @return {?} The padded number.\r\n     */\r\n    function (n) {\r\n        return ('00' + n).slice(-2);\r\n    };\r\n    /**\r\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\r\n     * other browsers do not. We remove them to make output consistent and because they interfere with\r\n     * date parsing.\r\n     * @param {?} str The string to strip direction characters from.\r\n     * @return {?} The stripped string.\r\n     */\r\n    NativeDateAdapter.prototype._stripDirectionalityCharacters = /**\r\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\r\n     * other browsers do not. We remove them to make output consistent and because they interfere with\r\n     * date parsing.\r\n     * @param {?} str The string to strip direction characters from.\r\n     * @return {?} The stripped string.\r\n     */\r\n    function (str) {\r\n        return str.replace(/[\\u200e\\u200f]/g, '');\r\n    };\r\n    NativeDateAdapter.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    NativeDateAdapter.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] },] },\r\n    ]; };\r\n    return NativeDateAdapter;\r\n}(DateAdapter));\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\nvar MAT_NATIVE_DATE_FORMATS = {\r\n    parse: {\r\n        dateInput: null,\r\n    },\r\n    display: {\r\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\r\n        monthYearLabel: { year: 'numeric', month: 'short' },\r\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\r\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\r\n    }\r\n};\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\nvar NativeDateModule = /** @class */ (function () {\r\n    function NativeDateModule() {\r\n    }\r\n    NativeDateModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    providers: [\r\n                        { provide: DateAdapter, useClass: NativeDateAdapter },\r\n                        MAT_DATE_LOCALE_PROVIDER\r\n                    ],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    NativeDateModule.ctorParameters = function () { return []; };\r\n    return NativeDateModule;\r\n}());\r\nvar ɵ0$$1 = MAT_NATIVE_DATE_FORMATS;\r\nvar MatNativeDateModule = /** @class */ (function () {\r\n    function MatNativeDateModule() {\r\n    }\r\n    MatNativeDateModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [NativeDateModule],\r\n                    providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$$1 }],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatNativeDateModule.ctorParameters = function () { return []; };\r\n    return MatNativeDateModule;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Error state matcher that matches when a control is invalid and dirty.\r\n */\r\nvar ShowOnDirtyErrorStateMatcher = /** @class */ (function () {\r\n    function ShowOnDirtyErrorStateMatcher() {\r\n    }\r\n    /**\r\n     * @param {?} control\r\n     * @param {?} form\r\n     * @return {?}\r\n     */\r\n    ShowOnDirtyErrorStateMatcher.prototype.isErrorState = /**\r\n     * @param {?} control\r\n     * @param {?} form\r\n     * @return {?}\r\n     */\r\n    function (control, form) {\r\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\r\n    };\r\n    ShowOnDirtyErrorStateMatcher.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    ShowOnDirtyErrorStateMatcher.ctorParameters = function () { return []; };\r\n    return ShowOnDirtyErrorStateMatcher;\r\n}());\r\n/**\r\n * Provider that defines how form controls behave with regards to displaying error messages.\r\n */\r\nvar ErrorStateMatcher = /** @class */ (function () {\r\n    function ErrorStateMatcher() {\r\n    }\r\n    /**\r\n     * @param {?} control\r\n     * @param {?} form\r\n     * @return {?}\r\n     */\r\n    ErrorStateMatcher.prototype.isErrorState = /**\r\n     * @param {?} control\r\n     * @param {?} form\r\n     * @return {?}\r\n     */\r\n    function (control, form) {\r\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\r\n    };\r\n    ErrorStateMatcher.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    ErrorStateMatcher.ctorParameters = function () { return []; };\r\n    return ErrorStateMatcher;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Injection token that can be used to provide options to the Hammerjs instance.\r\n * More info at http://hammerjs.github.io/api/.\r\n */\r\nvar MAT_HAMMER_OPTIONS = new InjectionToken('MAT_HAMMER_OPTIONS');\r\n/**\r\n * Adjusts configuration of our gesture library, Hammer.\r\n */\r\nvar GestureConfig = /** @class */ (function (_super) {\r\n    __extends(GestureConfig, _super);\r\n    function GestureConfig(_hammerOptions, commonModule) {\r\n        var _this = _super.call(this) || this;\r\n        _this._hammerOptions = _hammerOptions;\r\n        _this._hammer = typeof window !== 'undefined' ? (/** @type {?} */ (window)).Hammer : null;\r\n        /**\r\n         * List of new event names to add to the gesture support list\r\n         */\r\n        _this.events = _this._hammer ? [\r\n            'longpress',\r\n            'slide',\r\n            'slidestart',\r\n            'slideend',\r\n            'slideright',\r\n            'slideleft'\r\n        ] : [];\r\n        if (commonModule) {\r\n            commonModule._checkHammerIsAvailable();\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\r\n     *\r\n     * Our gesture names come from the Material Design gestures spec:\r\n     * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\r\n     *\r\n     * More information on default recognizers can be found in Hammer docs:\r\n     * http://hammerjs.github.io/recognizer-pan/\r\n     * http://hammerjs.github.io/recognizer-press/\r\n     *\r\n     * @param element Element to which to assign the new HammerJS gestures.\r\n     * @returns Newly-created HammerJS instance.\r\n     */\r\n    /**\r\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\r\n     *\r\n     * Our gesture names come from the Material Design gestures spec:\r\n     * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\r\n     *\r\n     * More information on default recognizers can be found in Hammer docs:\r\n     * http://hammerjs.github.io/recognizer-pan/\r\n     * http://hammerjs.github.io/recognizer-press/\r\n     *\r\n     * @param {?} element Element to which to assign the new HammerJS gestures.\r\n     * @return {?} Newly-created HammerJS instance.\r\n     */\r\n    GestureConfig.prototype.buildHammer = /**\r\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\r\n     *\r\n     * Our gesture names come from the Material Design gestures spec:\r\n     * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\r\n     *\r\n     * More information on default recognizers can be found in Hammer docs:\r\n     * http://hammerjs.github.io/recognizer-pan/\r\n     * http://hammerjs.github.io/recognizer-press/\r\n     *\r\n     * @param {?} element Element to which to assign the new HammerJS gestures.\r\n     * @return {?} Newly-created HammerJS instance.\r\n     */\r\n    function (element) {\r\n        var /** @type {?} */ mc = new this._hammer(element, this._hammerOptions || undefined);\r\n        // Default Hammer Recognizers.\r\n        var /** @type {?} */ pan = new this._hammer.Pan();\r\n        var /** @type {?} */ swipe = new this._hammer.Swipe();\r\n        var /** @type {?} */ press = new this._hammer.Press();\r\n        // Notice that a HammerJS recognizer can only depend on one other recognizer once.\r\n        // Otherwise the previous `recognizeWith` will be dropped.\r\n        // TODO: Confirm threshold numbers with Material Design UX Team\r\n        var /** @type {?} */ slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);\r\n        var /** @type {?} */ longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });\r\n        // Overwrite the default `pan` event to use the swipe event.\r\n        pan.recognizeWith(swipe);\r\n        // Add customized gestures to Hammer manager\r\n        mc.add([swipe, press, pan, slide, longpress]);\r\n        return /** @type {?} */ (mc);\r\n    };\r\n    /**\r\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\r\n     * @param {?} base\r\n     * @param {?} options\r\n     * @param {...?} inheritances\r\n     * @return {?}\r\n     */\r\n    GestureConfig.prototype._createRecognizer = /**\r\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\r\n     * @param {?} base\r\n     * @param {?} options\r\n     * @param {...?} inheritances\r\n     * @return {?}\r\n     */\r\n    function (base, options) {\r\n        var inheritances = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            inheritances[_i - 2] = arguments[_i];\r\n        }\r\n        var /** @type {?} */ recognizer = new (/** @type {?} */ (base.constructor))(options);\r\n        inheritances.push(base);\r\n        inheritances.forEach(function (item) { return recognizer.recognizeWith(item); });\r\n        return recognizer;\r\n    };\r\n    GestureConfig.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    GestureConfig.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_HAMMER_OPTIONS,] },] },\r\n        { type: MatCommonModule, decorators: [{ type: Optional },] },\r\n    ]; };\r\n    return GestureConfig;\r\n}(HammerGestureConfig));\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Shared directive to count lines inside a text area, such as a list item.\r\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\r\n * counted by checking the query list's length.\r\n */\r\nvar MatLine = /** @class */ (function () {\r\n    function MatLine() {\r\n    }\r\n    MatLine.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[mat-line], [matLine]',\r\n                    host: { 'class': 'mat-line' }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatLine.ctorParameters = function () { return []; };\r\n    return MatLine;\r\n}());\r\n/**\r\n * Helper that takes a query list of lines and sets the correct class on the host.\r\n * \\@docs-private\r\n */\r\nvar MatLineSetter = /** @class */ (function () {\r\n    function MatLineSetter(_lines, _element) {\r\n        var _this = this;\r\n        this._lines = _lines;\r\n        this._element = _element;\r\n        this._setLineClass(this._lines.length);\r\n        this._lines.changes.subscribe(function () {\r\n            _this._setLineClass(_this._lines.length);\r\n        });\r\n    }\r\n    /**\r\n     * @param {?} count\r\n     * @return {?}\r\n     */\r\n    MatLineSetter.prototype._setLineClass = /**\r\n     * @param {?} count\r\n     * @return {?}\r\n     */\r\n    function (count) {\r\n        this._resetClasses();\r\n        if (count === 2 || count === 3) {\r\n            this._setClass(\"mat-\" + count + \"-line\", true);\r\n        }\r\n        else if (count > 3) {\r\n            this._setClass(\"mat-multi-line\", true);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MatLineSetter.prototype._resetClasses = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._setClass('mat-2-line', false);\r\n        this._setClass('mat-3-line', false);\r\n        this._setClass('mat-multi-line', false);\r\n    };\r\n    /**\r\n     * @param {?} className\r\n     * @param {?} isAdd\r\n     * @return {?}\r\n     */\r\n    MatLineSetter.prototype._setClass = /**\r\n     * @param {?} className\r\n     * @param {?} isAdd\r\n     * @return {?}\r\n     */\r\n    function (className, isAdd) {\r\n        if (isAdd) {\r\n            this._element.nativeElement.classList.add(className);\r\n        }\r\n        else {\r\n            this._element.nativeElement.classList.remove(className);\r\n        }\r\n    };\r\n    return MatLineSetter;\r\n}());\r\nvar MatLineModule = /** @class */ (function () {\r\n    function MatLineModule() {\r\n    }\r\n    MatLineModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [MatCommonModule],\r\n                    exports: [MatLine, MatCommonModule],\r\n                    declarations: [MatLine],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatLineModule.ctorParameters = function () { return []; };\r\n    return MatLineModule;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/** @enum {number} */\r\nvar RippleState = {\r\n    FADING_IN: 0,\r\n    VISIBLE: 1,\r\n    FADING_OUT: 2,\r\n    HIDDEN: 3,\r\n};\r\nRippleState[RippleState.FADING_IN] = \"FADING_IN\";\r\nRippleState[RippleState.VISIBLE] = \"VISIBLE\";\r\nRippleState[RippleState.FADING_OUT] = \"FADING_OUT\";\r\nRippleState[RippleState.HIDDEN] = \"HIDDEN\";\r\n/**\r\n * Reference to a previously launched ripple element.\r\n */\r\nvar RippleRef = /** @class */ (function () {\r\n    function RippleRef(_renderer, element, config) {\r\n        this._renderer = _renderer;\r\n        this.element = element;\r\n        this.config = config;\r\n        /**\r\n         * Current state of the ripple reference.\r\n         */\r\n        this.state = RippleState.HIDDEN;\r\n    }\r\n    /** Fades out the ripple element. */\r\n    /**\r\n     * Fades out the ripple element.\r\n     * @return {?}\r\n     */\r\n    RippleRef.prototype.fadeOut = /**\r\n     * Fades out the ripple element.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._renderer.fadeOutRipple(this);\r\n    };\r\n    return RippleRef;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n/**\r\n * Interface that describes the configuration for the animation of a ripple.\r\n * There are two animation phases with different durations for the ripples.\r\n * @record\r\n */\r\n\r\n/**\r\n * Interface that describes the target for launching ripples.\r\n * It defines the ripple configuration and disabled state for interaction ripples.\r\n * \\@docs-private\r\n * @record\r\n */\r\n\r\n/**\r\n * Default ripple animation configuration for ripples without an explicit\r\n * animation config specified.\r\n */\r\nvar defaultRippleAnimationConfig = {\r\n    enterDuration: 450,\r\n    exitDuration: 400\r\n};\r\n/**\r\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\r\n * events to avoid synthetic mouse events.\r\n */\r\nvar ignoreMouseEventsTimeout = 800;\r\n/**\r\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\r\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\r\n * event handlers to be installed on the element that triggers ripple animations.\r\n * This will eventually become a custom renderer once Angular support exists.\r\n * \\@docs-private\r\n */\r\nvar RippleRenderer = /** @class */ (function () {\r\n    function RippleRenderer(_target, _ngZone, elementRef, platform) {\r\n        var _this = this;\r\n        this._target = _target;\r\n        this._ngZone = _ngZone;\r\n        /**\r\n         * Whether the pointer is currently down or not.\r\n         */\r\n        this._isPointerDown = false;\r\n        /**\r\n         * Events to be registered on the trigger element.\r\n         */\r\n        this._triggerEvents = new Map();\r\n        /**\r\n         * Set of currently active ripple references.\r\n         */\r\n        this._activeRipples = new Set();\r\n        /**\r\n         * Options that apply to all the event listeners that are bound by the renderer.\r\n         */\r\n        this._eventOptions = supportsPassiveEventListeners() ? (/** @type {?} */ ({ passive: true })) : false;\r\n        /**\r\n         * Function being called whenever the trigger is being pressed using mouse.\r\n         */\r\n        this.onMousedown = function (event) {\r\n            var /** @type {?} */ isSyntheticEvent = _this._lastTouchStartEvent &&\r\n                Date.now() < _this._lastTouchStartEvent + ignoreMouseEventsTimeout;\r\n            if (!_this._target.rippleDisabled && !isSyntheticEvent) {\r\n                _this._isPointerDown = true;\r\n                _this.fadeInRipple(event.clientX, event.clientY, _this._target.rippleConfig);\r\n            }\r\n        };\r\n        /**\r\n         * Function being called whenever the trigger is being pressed using touch.\r\n         */\r\n        this.onTouchStart = function (event) {\r\n            if (!_this._target.rippleDisabled) {\r\n                // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\r\n                // events will launch a second ripple if we don't ignore mouse events for a specific\r\n                // time after a touchstart event.\r\n                // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\r\n                // events will launch a second ripple if we don't ignore mouse events for a specific\r\n                // time after a touchstart event.\r\n                _this._lastTouchStartEvent = Date.now();\r\n                _this._isPointerDown = true;\r\n                _this.fadeInRipple(event.touches[0].clientX, event.touches[0].clientY, _this._target.rippleConfig);\r\n            }\r\n        };\r\n        /**\r\n         * Function being called whenever the trigger is being released.\r\n         */\r\n        this.onPointerUp = function () {\r\n            if (!_this._isPointerDown) {\r\n                return;\r\n            }\r\n            _this._isPointerDown = false;\r\n            // Fade-out all ripples that are visible and not persistent.\r\n            // Fade-out all ripples that are visible and not persistent.\r\n            _this._activeRipples.forEach(function (ripple) {\r\n                // By default, only ripples that are completely visible will fade out on pointer release.\r\n                // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\r\n                var /** @type {?} */ isVisible = ripple.state === RippleState.VISIBLE ||\r\n                    ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\r\n                if (!ripple.config.persistent && isVisible) {\r\n                    ripple.fadeOut();\r\n                }\r\n            });\r\n        };\r\n        // Only do anything if we're on the browser.\r\n        if (platform.isBrowser) {\r\n            this._containerElement = elementRef.nativeElement;\r\n            // Specify events which need to be registered on the trigger.\r\n            this._triggerEvents.set('mousedown', this.onMousedown);\r\n            this._triggerEvents.set('mouseup', this.onPointerUp);\r\n            this._triggerEvents.set('mouseleave', this.onPointerUp);\r\n            this._triggerEvents.set('touchstart', this.onTouchStart);\r\n            this._triggerEvents.set('touchend', this.onPointerUp);\r\n        }\r\n    }\r\n    /**\r\n     * Fades in a ripple at the given coordinates.\r\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\r\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\r\n     * @param config Extra ripple options.\r\n     */\r\n    /**\r\n     * Fades in a ripple at the given coordinates.\r\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\r\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\r\n     * @param {?=} config Extra ripple options.\r\n     * @return {?}\r\n     */\r\n    RippleRenderer.prototype.fadeInRipple = /**\r\n     * Fades in a ripple at the given coordinates.\r\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\r\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\r\n     * @param {?=} config Extra ripple options.\r\n     * @return {?}\r\n     */\r\n    function (x, y, config) {\r\n        var _this = this;\r\n        if (config === void 0) { config = {}; }\r\n        var /** @type {?} */ containerRect = this._containerElement.getBoundingClientRect();\r\n        var /** @type {?} */ animationConfig = __assign({}, defaultRippleAnimationConfig, config.animation);\r\n        if (config.centered) {\r\n            x = containerRect.left + containerRect.width / 2;\r\n            y = containerRect.top + containerRect.height / 2;\r\n        }\r\n        var /** @type {?} */ radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\r\n        var /** @type {?} */ offsetX = x - containerRect.left;\r\n        var /** @type {?} */ offsetY = y - containerRect.top;\r\n        var /** @type {?} */ duration = animationConfig.enterDuration / (config.speedFactor || 1);\r\n        var /** @type {?} */ ripple = document.createElement('div');\r\n        ripple.classList.add('mat-ripple-element');\r\n        ripple.style.left = offsetX - radius + \"px\";\r\n        ripple.style.top = offsetY - radius + \"px\";\r\n        ripple.style.height = radius * 2 + \"px\";\r\n        ripple.style.width = radius * 2 + \"px\";\r\n        // If the color is not set, the default CSS color will be used.\r\n        ripple.style.backgroundColor = config.color || null;\r\n        ripple.style.transitionDuration = duration + \"ms\";\r\n        this._containerElement.appendChild(ripple);\r\n        // By default the browser does not recalculate the styles of dynamically created\r\n        // ripple elements. This is critical because then the `scale` would not animate properly.\r\n        enforceStyleRecalculation(ripple);\r\n        ripple.style.transform = 'scale(1)';\r\n        // Exposed reference to the ripple that will be returned.\r\n        var /** @type {?} */ rippleRef = new RippleRef(this, ripple, config);\r\n        rippleRef.state = RippleState.FADING_IN;\r\n        // Add the ripple reference to the list of all active ripples.\r\n        this._activeRipples.add(rippleRef);\r\n        // Wait for the ripple element to be completely faded in.\r\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\r\n        this.runTimeoutOutsideZone(function () {\r\n            rippleRef.state = RippleState.VISIBLE;\r\n            if (!config.persistent && !_this._isPointerDown) {\r\n                rippleRef.fadeOut();\r\n            }\r\n        }, duration);\r\n        return rippleRef;\r\n    };\r\n    /** Fades out a ripple reference. */\r\n    /**\r\n     * Fades out a ripple reference.\r\n     * @param {?} rippleRef\r\n     * @return {?}\r\n     */\r\n    RippleRenderer.prototype.fadeOutRipple = /**\r\n     * Fades out a ripple reference.\r\n     * @param {?} rippleRef\r\n     * @return {?}\r\n     */\r\n    function (rippleRef) {\r\n        // For ripples that are not active anymore, don't re-un the fade-out animation.\r\n        if (!this._activeRipples.delete(rippleRef)) {\r\n            return;\r\n        }\r\n        var /** @type {?} */ rippleEl = rippleRef.element;\r\n        var /** @type {?} */ animationConfig = __assign({}, defaultRippleAnimationConfig, rippleRef.config.animation);\r\n        rippleEl.style.transitionDuration = animationConfig.exitDuration + \"ms\";\r\n        rippleEl.style.opacity = '0';\r\n        rippleRef.state = RippleState.FADING_OUT;\r\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\r\n        this.runTimeoutOutsideZone(function () {\r\n            rippleRef.state = RippleState.HIDDEN; /** @type {?} */\r\n            ((rippleEl.parentNode)).removeChild(rippleEl);\r\n        }, animationConfig.exitDuration);\r\n    };\r\n    /** Fades out all currently active ripples. */\r\n    /**\r\n     * Fades out all currently active ripples.\r\n     * @return {?}\r\n     */\r\n    RippleRenderer.prototype.fadeOutAll = /**\r\n     * Fades out all currently active ripples.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._activeRipples.forEach(function (ripple) { return ripple.fadeOut(); });\r\n    };\r\n    /** Sets up the trigger event listeners */\r\n    /**\r\n     * Sets up the trigger event listeners\r\n     * @param {?} element\r\n     * @return {?}\r\n     */\r\n    RippleRenderer.prototype.setupTriggerEvents = /**\r\n     * Sets up the trigger event listeners\r\n     * @param {?} element\r\n     * @return {?}\r\n     */\r\n    function (element) {\r\n        var _this = this;\r\n        if (!element || element === this._triggerElement) {\r\n            return;\r\n        }\r\n        // Remove all previously registered event listeners from the trigger element.\r\n        this._removeTriggerEvents();\r\n        this._ngZone.runOutsideAngular(function () {\r\n            _this._triggerEvents.forEach(function (fn, type) {\r\n                return element.addEventListener(type, fn, _this._eventOptions);\r\n            });\r\n        });\r\n        this._triggerElement = element;\r\n    };\r\n    /**\r\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\r\n     * @param {?} fn\r\n     * @param {?=} delay\r\n     * @return {?}\r\n     */\r\n    RippleRenderer.prototype.runTimeoutOutsideZone = /**\r\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\r\n     * @param {?} fn\r\n     * @param {?=} delay\r\n     * @return {?}\r\n     */\r\n    function (fn, delay) {\r\n        if (delay === void 0) { delay = 0; }\r\n        this._ngZone.runOutsideAngular(function () { return setTimeout(fn, delay); });\r\n    };\r\n    /** Removes previously registered event listeners from the trigger element. */\r\n    /**\r\n     * Removes previously registered event listeners from the trigger element.\r\n     * @return {?}\r\n     */\r\n    RippleRenderer.prototype._removeTriggerEvents = /**\r\n     * Removes previously registered event listeners from the trigger element.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        if (this._triggerElement) {\r\n            this._triggerEvents.forEach(function (fn, type) {\r\n                /** @type {?} */ ((_this._triggerElement)).removeEventListener(type, fn, _this._eventOptions);\r\n            });\r\n        }\r\n    };\r\n    return RippleRenderer;\r\n}());\r\n/**\r\n * Enforces a style recalculation of a DOM element by computing its styles.\r\n * @param {?} element\r\n * @return {?}\r\n */\r\nfunction enforceStyleRecalculation(element) {\r\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\r\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\r\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\r\n    window.getComputedStyle(element).getPropertyValue('opacity');\r\n}\r\n/**\r\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\r\n * @param {?} x\r\n * @param {?} y\r\n * @param {?} rect\r\n * @return {?}\r\n */\r\nfunction distanceToFurthestCorner(x, y, rect) {\r\n    var /** @type {?} */ distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\r\n    var /** @type {?} */ distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\r\n    return Math.sqrt(distX * distX + distY * distY);\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Configurable options for `matRipple`.\r\n * @record\r\n */\r\n\r\n/**\r\n * Injection token that can be used to specify the global ripple options.\r\n */\r\nvar MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\r\nvar MatRipple = /** @class */ (function () {\r\n    function MatRipple(_elementRef, ngZone, platform, globalOptions) {\r\n        this._elementRef = _elementRef;\r\n        /**\r\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\r\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\r\n         * bounding rectangle.\r\n         */\r\n        this.radius = 0;\r\n        /**\r\n         * If set, the normal duration of ripple animations is divided by this value. For example,\r\n         * setting it to 0.5 will cause the animations to take twice as long.\r\n         * A changed speedFactor will not modify the fade-out duration of the ripples.\r\n         * @deprecated Use the [matRippleAnimation] binding instead.\r\n         * \\@deletion-target 7.0.0\r\n         */\r\n        this.speedFactor = 1;\r\n        this._disabled = false;\r\n        /**\r\n         * Whether ripple directive is initialized and the input bindings are set.\r\n         */\r\n        this._isInitialized = false;\r\n        this._globalOptions = globalOptions || {};\r\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\r\n    }\r\n    Object.defineProperty(MatRipple.prototype, \"disabled\", {\r\n        get: /**\r\n         * Whether click events will not trigger the ripple. Ripples can be still launched manually\r\n         * by using the `launch()` method.\r\n         * @return {?}\r\n         */\r\n        function () { return this._disabled; },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this._disabled = value;\r\n            this._setupTriggerEventsIfEnabled();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MatRipple.prototype, \"trigger\", {\r\n        get: /**\r\n         * The element that triggers the ripple when click events are received.\r\n         * Defaults to the directive's host element.\r\n         * @return {?}\r\n         */\r\n        function () { return this._trigger || this._elementRef.nativeElement; },\r\n        set: /**\r\n         * @param {?} trigger\r\n         * @return {?}\r\n         */\r\n        function (trigger) {\r\n            this._trigger = trigger;\r\n            this._setupTriggerEventsIfEnabled();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MatRipple.prototype.ngOnInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._isInitialized = true;\r\n        this._setupTriggerEventsIfEnabled();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MatRipple.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._rippleRenderer._removeTriggerEvents();\r\n    };\r\n    /** Launches a manual ripple at the specified position. */\r\n    /**\r\n     * Launches a manual ripple at the specified position.\r\n     * @param {?} x\r\n     * @param {?} y\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    MatRipple.prototype.launch = /**\r\n     * Launches a manual ripple at the specified position.\r\n     * @param {?} x\r\n     * @param {?} y\r\n     * @param {?=} config\r\n     * @return {?}\r\n     */\r\n    function (x, y, config) {\r\n        return this._rippleRenderer.fadeInRipple(x, y, __assign({}, this.rippleConfig, config));\r\n    };\r\n    /** Fades out all currently showing ripple elements. */\r\n    /**\r\n     * Fades out all currently showing ripple elements.\r\n     * @return {?}\r\n     */\r\n    MatRipple.prototype.fadeOutAll = /**\r\n     * Fades out all currently showing ripple elements.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._rippleRenderer.fadeOutAll();\r\n    };\r\n    Object.defineProperty(MatRipple.prototype, \"rippleConfig\", {\r\n        /** Ripple configuration from the directive's input values. */\r\n        get: /**\r\n         * Ripple configuration from the directive's input values.\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return {\r\n                centered: this.centered,\r\n                radius: this.radius,\r\n                color: this.color,\r\n                animation: __assign({}, this._globalOptions.animation, this.animation),\r\n                terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\r\n                speedFactor: this.speedFactor * (this._globalOptions.baseSpeedFactor || 1),\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MatRipple.prototype, \"rippleDisabled\", {\r\n        /** Whether ripples on pointer-down are disabled or not. */\r\n        get: /**\r\n         * Whether ripples on pointer-down are disabled or not.\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.disabled || !!this._globalOptions.disabled;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets up the the trigger event listeners if ripples are enabled.\r\n     * @return {?}\r\n     */\r\n    MatRipple.prototype._setupTriggerEventsIfEnabled = /**\r\n     * Sets up the the trigger event listeners if ripples are enabled.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.disabled && this._isInitialized) {\r\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\r\n        }\r\n    };\r\n    MatRipple.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[mat-ripple], [matRipple]',\r\n                    exportAs: 'matRipple',\r\n                    host: {\r\n                        'class': 'mat-ripple',\r\n                        '[class.mat-ripple-unbounded]': 'unbounded'\r\n                    }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatRipple.ctorParameters = function () { return [\r\n        { type: ElementRef, },\r\n        { type: NgZone, },\r\n        { type: Platform, },\r\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] },] },\r\n    ]; };\r\n    MatRipple.propDecorators = {\r\n        \"color\": [{ type: Input, args: ['matRippleColor',] },],\r\n        \"unbounded\": [{ type: Input, args: ['matRippleUnbounded',] },],\r\n        \"centered\": [{ type: Input, args: ['matRippleCentered',] },],\r\n        \"radius\": [{ type: Input, args: ['matRippleRadius',] },],\r\n        \"speedFactor\": [{ type: Input, args: ['matRippleSpeedFactor',] },],\r\n        \"animation\": [{ type: Input, args: ['matRippleAnimation',] },],\r\n        \"disabled\": [{ type: Input, args: ['matRippleDisabled',] },],\r\n        \"trigger\": [{ type: Input, args: ['matRippleTrigger',] },],\r\n    };\r\n    return MatRipple;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\nvar MatRippleModule = /** @class */ (function () {\r\n    function MatRippleModule() {\r\n    }\r\n    MatRippleModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [MatCommonModule, PlatformModule],\r\n                    exports: [MatRipple, MatCommonModule],\r\n                    declarations: [MatRipple],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatRippleModule.ctorParameters = function () { return []; };\r\n    return MatRippleModule;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\r\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\r\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\r\n * Note that theming is meant to be handled by the parent element, e.g.\r\n * `mat-primary .mat-pseudo-checkbox`.\r\n *\r\n * Note that this component will be completely invisible to screen-reader users. This is *not*\r\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\r\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\r\n * of more complex components that appropriately handle selected / checked state.\r\n * \\@docs-private\r\n */\r\nvar MatPseudoCheckbox = /** @class */ (function () {\r\n    function MatPseudoCheckbox() {\r\n        /**\r\n         * Display state of the checkbox.\r\n         */\r\n        this.state = 'unchecked';\r\n        /**\r\n         * Whether the checkbox is disabled.\r\n         */\r\n        this.disabled = false;\r\n    }\r\n    MatPseudoCheckbox.decorators = [\r\n        { type: Component, args: [{encapsulation: ViewEncapsulation.None,\r\n                    preserveWhitespaces: false,\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    selector: 'mat-pseudo-checkbox',\r\n                    styles: [\".mat-pseudo-checkbox{width:20px;height:20px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0,0,.2,.1),background-color 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:'';border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0,0,.2,.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:9px;left:2px;width:16px;opacity:1}.mat-pseudo-checkbox-checked::after{top:5px;left:3px;width:12px;height:5px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1}\"],\r\n                    template: '',\r\n                    host: {\r\n                        'class': 'mat-pseudo-checkbox',\r\n                        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\r\n                        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\r\n                        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\r\n                    },\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatPseudoCheckbox.ctorParameters = function () { return []; };\r\n    MatPseudoCheckbox.propDecorators = {\r\n        \"state\": [{ type: Input },],\r\n        \"disabled\": [{ type: Input },],\r\n    };\r\n    return MatPseudoCheckbox;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\nvar MatPseudoCheckboxModule = /** @class */ (function () {\r\n    function MatPseudoCheckboxModule() {\r\n    }\r\n    MatPseudoCheckboxModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    exports: [MatPseudoCheckbox],\r\n                    declarations: [MatPseudoCheckbox]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatPseudoCheckboxModule.ctorParameters = function () { return []; };\r\n    return MatPseudoCheckboxModule;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * \\@docs-private\r\n */\r\nvar MatOptgroupBase = /** @class */ (function () {\r\n    function MatOptgroupBase() {\r\n    }\r\n    return MatOptgroupBase;\r\n}());\r\nvar _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\r\n// Counter for unique group ids.\r\nvar _uniqueOptgroupIdCounter = 0;\r\n/**\r\n * Component that is used to group instances of `mat-option`.\r\n */\r\nvar MatOptgroup = /** @class */ (function (_super) {\r\n    __extends(MatOptgroup, _super);\r\n    function MatOptgroup() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Unique id for the underlying label.\r\n         */\r\n        _this._labelId = \"mat-optgroup-label-\" + _uniqueOptgroupIdCounter++;\r\n        return _this;\r\n    }\r\n    MatOptgroup.decorators = [\r\n        { type: Component, args: [{selector: 'mat-optgroup',\r\n                    exportAs: 'matOptgroup',\r\n                    template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }}</label><ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\",\r\n                    encapsulation: ViewEncapsulation.None,\r\n                    preserveWhitespaces: false,\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    inputs: ['disabled'],\r\n                    styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"],\r\n                    host: {\r\n                        'class': 'mat-optgroup',\r\n                        'role': 'group',\r\n                        '[class.mat-optgroup-disabled]': 'disabled',\r\n                        '[attr.aria-disabled]': 'disabled.toString()',\r\n                        '[attr.aria-labelledby]': '_labelId',\r\n                    }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatOptgroup.ctorParameters = function () { return []; };\r\n    MatOptgroup.propDecorators = {\r\n        \"label\": [{ type: Input },],\r\n    };\r\n    return MatOptgroup;\r\n}(_MatOptgroupMixinBase));\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Option IDs need to be unique across components, so this counter exists outside of\r\n * the component definition.\r\n */\r\nvar _uniqueIdCounter = 0;\r\n/**\r\n * Event object emitted by MatOption when selected or deselected.\r\n */\r\nvar MatOptionSelectionChange = /** @class */ (function () {\r\n    function MatOptionSelectionChange(source, isUserInput) {\r\n        if (isUserInput === void 0) { isUserInput = false; }\r\n        this.source = source;\r\n        this.isUserInput = isUserInput;\r\n    }\r\n    return MatOptionSelectionChange;\r\n}());\r\n/**\r\n * Describes a parent component that manages a list of options.\r\n * Contains properties that the options can inherit.\r\n * \\@docs-private\r\n * @record\r\n */\r\n\r\n/**\r\n * Injection token used to provide the parent component to options.\r\n */\r\nvar MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\r\n/**\r\n * Single option inside of a `<mat-select>` element.\r\n */\r\nvar MatOption = /** @class */ (function () {\r\n    function MatOption(_element, _changeDetectorRef, _parent, group) {\r\n        this._element = _element;\r\n        this._changeDetectorRef = _changeDetectorRef;\r\n        this._parent = _parent;\r\n        this.group = group;\r\n        this._selected = false;\r\n        this._active = false;\r\n        this._disabled = false;\r\n        this._id = \"mat-option-\" + _uniqueIdCounter++;\r\n        this._mostRecentViewValue = '';\r\n        /**\r\n         * Event emitted when the option is selected or deselected.\r\n         */\r\n        this.onSelectionChange = new EventEmitter();\r\n        /**\r\n         * Emits when the state of the option changes and any parents have to be notified.\r\n         */\r\n        this._stateChanges = new Subject();\r\n    }\r\n    Object.defineProperty(MatOption.prototype, \"multiple\", {\r\n        /** Whether the wrapping component is in multiple selection mode. */\r\n        get: /**\r\n         * Whether the wrapping component is in multiple selection mode.\r\n         * @return {?}\r\n         */\r\n        function () { return this._parent && this._parent.multiple; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MatOption.prototype, \"id\", {\r\n        /** The unique ID of the option. */\r\n        get: /**\r\n         * The unique ID of the option.\r\n         * @return {?}\r\n         */\r\n        function () { return this._id; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MatOption.prototype, \"selected\", {\r\n        /** Whether or not the option is currently selected. */\r\n        get: /**\r\n         * Whether or not the option is currently selected.\r\n         * @return {?}\r\n         */\r\n        function () { return this._selected; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MatOption.prototype, \"disabled\", {\r\n        get: /**\r\n         * Whether the option is disabled.\r\n         * @return {?}\r\n         */\r\n        function () { return (this.group && this.group.disabled) || this._disabled; },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) { this._disabled = coerceBooleanProperty(value); },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MatOption.prototype, \"disableRipple\", {\r\n        /** Whether ripples for the option are disabled. */\r\n        get: /**\r\n         * Whether ripples for the option are disabled.\r\n         * @return {?}\r\n         */\r\n        function () { return this._parent && this._parent.disableRipple; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MatOption.prototype, \"active\", {\r\n        /**\r\n         * Whether or not the option is currently active and ready to be selected.\r\n         * An active option displays styles as if it is focused, but the\r\n         * focus is actually retained somewhere else. This comes in handy\r\n         * for components like autocomplete where focus must remain on the input.\r\n         */\r\n        get: /**\r\n         * Whether or not the option is currently active and ready to be selected.\r\n         * An active option displays styles as if it is focused, but the\r\n         * focus is actually retained somewhere else. This comes in handy\r\n         * for components like autocomplete where focus must remain on the input.\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._active;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MatOption.prototype, \"viewValue\", {\r\n        /**\r\n         * The displayed value of the option. It is necessary to show the selected option in the\r\n         * select's trigger.\r\n         */\r\n        get: /**\r\n         * The displayed value of the option. It is necessary to show the selected option in the\r\n         * select's trigger.\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            // TODO(kara): Add input property alternative for node envs.\r\n            return (this._getHostElement().textContent || '').trim();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** Selects the option. */\r\n    /**\r\n     * Selects the option.\r\n     * @return {?}\r\n     */\r\n    MatOption.prototype.select = /**\r\n     * Selects the option.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._selected = true;\r\n        this._changeDetectorRef.markForCheck();\r\n        this._emitSelectionChangeEvent();\r\n    };\r\n    /** Deselects the option. */\r\n    /**\r\n     * Deselects the option.\r\n     * @return {?}\r\n     */\r\n    MatOption.prototype.deselect = /**\r\n     * Deselects the option.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._selected = false;\r\n        this._changeDetectorRef.markForCheck();\r\n        this._emitSelectionChangeEvent();\r\n    };\r\n    /** Sets focus onto this option. */\r\n    /**\r\n     * Sets focus onto this option.\r\n     * @return {?}\r\n     */\r\n    MatOption.prototype.focus = /**\r\n     * Sets focus onto this option.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var /** @type {?} */ element = this._getHostElement();\r\n        if (typeof element.focus === 'function') {\r\n            element.focus();\r\n        }\r\n    };\r\n    /**\r\n     * This method sets display styles on the option to make it appear\r\n     * active. This is used by the ActiveDescendantKeyManager so key\r\n     * events will display the proper options as active on arrow key events.\r\n     */\r\n    /**\r\n     * This method sets display styles on the option to make it appear\r\n     * active. This is used by the ActiveDescendantKeyManager so key\r\n     * events will display the proper options as active on arrow key events.\r\n     * @return {?}\r\n     */\r\n    MatOption.prototype.setActiveStyles = /**\r\n     * This method sets display styles on the option to make it appear\r\n     * active. This is used by the ActiveDescendantKeyManager so key\r\n     * events will display the proper options as active on arrow key events.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this._active) {\r\n            this._active = true;\r\n            this._changeDetectorRef.markForCheck();\r\n        }\r\n    };\r\n    /**\r\n     * This method removes display styles on the option that made it appear\r\n     * active. This is used by the ActiveDescendantKeyManager so key\r\n     * events will display the proper options as active on arrow key events.\r\n     */\r\n    /**\r\n     * This method removes display styles on the option that made it appear\r\n     * active. This is used by the ActiveDescendantKeyManager so key\r\n     * events will display the proper options as active on arrow key events.\r\n     * @return {?}\r\n     */\r\n    MatOption.prototype.setInactiveStyles = /**\r\n     * This method removes display styles on the option that made it appear\r\n     * active. This is used by the ActiveDescendantKeyManager so key\r\n     * events will display the proper options as active on arrow key events.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._active) {\r\n            this._active = false;\r\n            this._changeDetectorRef.markForCheck();\r\n        }\r\n    };\r\n    /** Gets the label to be used when determining whether the option should be focused. */\r\n    /**\r\n     * Gets the label to be used when determining whether the option should be focused.\r\n     * @return {?}\r\n     */\r\n    MatOption.prototype.getLabel = /**\r\n     * Gets the label to be used when determining whether the option should be focused.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.viewValue;\r\n    };\r\n    /** Ensures the option is selected when activated from the keyboard. */\r\n    /**\r\n     * Ensures the option is selected when activated from the keyboard.\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    MatOption.prototype._handleKeydown = /**\r\n     * Ensures the option is selected when activated from the keyboard.\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    function (event) {\r\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\r\n            this._selectViaInteraction();\r\n            // Prevent the page from scrolling down and form submits.\r\n            event.preventDefault();\r\n        }\r\n    };\r\n    /**\r\n     * `Selects the option while indicating the selection came from the user. Used to\r\n     * determine if the select's view -> model callback should be invoked.`\r\n     */\r\n    /**\r\n     * `Selects the option while indicating the selection came from the user. Used to\r\n     * determine if the select's view -> model callback should be invoked.`\r\n     * @return {?}\r\n     */\r\n    MatOption.prototype._selectViaInteraction = /**\r\n     * `Selects the option while indicating the selection came from the user. Used to\r\n     * determine if the select's view -> model callback should be invoked.`\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this.disabled) {\r\n            this._selected = this.multiple ? !this._selected : true;\r\n            this._changeDetectorRef.markForCheck();\r\n            this._emitSelectionChangeEvent(true);\r\n        }\r\n    };\r\n    /** Returns the correct tabindex for the option depending on disabled state. */\r\n    /**\r\n     * Returns the correct tabindex for the option depending on disabled state.\r\n     * @return {?}\r\n     */\r\n    MatOption.prototype._getTabIndex = /**\r\n     * Returns the correct tabindex for the option depending on disabled state.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this.disabled ? '-1' : '0';\r\n    };\r\n    /** Gets the host DOM element. */\r\n    /**\r\n     * Gets the host DOM element.\r\n     * @return {?}\r\n     */\r\n    MatOption.prototype._getHostElement = /**\r\n     * Gets the host DOM element.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._element.nativeElement;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MatOption.prototype.ngAfterViewChecked = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // Since parent components could be using the option's label to display the selected values\r\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\r\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\r\n        // relatively cheap, however we still limit them only to selected options in order to avoid\r\n        // hitting the DOM too often.\r\n        if (this._selected) {\r\n            var /** @type {?} */ viewValue = this.viewValue;\r\n            if (viewValue !== this._mostRecentViewValue) {\r\n                this._mostRecentViewValue = viewValue;\r\n                this._stateChanges.next();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Emits the selection change event.\r\n     * @param {?=} isUserInput\r\n     * @return {?}\r\n     */\r\n    MatOption.prototype._emitSelectionChangeEvent = /**\r\n     * Emits the selection change event.\r\n     * @param {?=} isUserInput\r\n     * @return {?}\r\n     */\r\n    function (isUserInput) {\r\n        if (isUserInput === void 0) { isUserInput = false; }\r\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\r\n    };\r\n    MatOption.decorators = [\r\n        { type: Component, args: [{selector: 'mat-option',\r\n                    exportAs: 'matOption',\r\n                    host: {\r\n                        'role': 'option',\r\n                        '[attr.tabindex]': '_getTabIndex()',\r\n                        '[class.mat-selected]': 'selected',\r\n                        '[class.mat-option-multiple]': 'multiple',\r\n                        '[class.mat-active]': 'active',\r\n                        '[id]': 'id',\r\n                        '[attr.aria-selected]': 'selected.toString()',\r\n                        '[attr.aria-disabled]': 'disabled.toString()',\r\n                        '[class.mat-option-disabled]': 'disabled',\r\n                        '(click)': '_selectViaInteraction()',\r\n                        '(keydown)': '_handleKeydown($event)',\r\n                        'class': 'mat-option',\r\n                    },\r\n                    styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;position:relative;cursor:pointer;outline:0;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}@media screen and (-ms-high-contrast:active){.mat-option-ripple{opacity:.5}}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"],\r\n                    template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\" [state]=\\\"selected ? 'checked' : ''\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox><span class=\\\"mat-option-text\\\"><ng-content></ng-content></span><div class=\\\"mat-option-ripple\\\" mat-ripple [matRippleTrigger]=\\\"_getHostElement()\\\" [matRippleDisabled]=\\\"disabled || disableRipple\\\"></div>\",\r\n                    encapsulation: ViewEncapsulation.None,\r\n                    preserveWhitespaces: false,\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatOption.ctorParameters = function () { return [\r\n        { type: ElementRef, },\r\n        { type: ChangeDetectorRef, },\r\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] },] },\r\n        { type: MatOptgroup, decorators: [{ type: Optional },] },\r\n    ]; };\r\n    MatOption.propDecorators = {\r\n        \"value\": [{ type: Input },],\r\n        \"disabled\": [{ type: Input },],\r\n        \"onSelectionChange\": [{ type: Output },],\r\n    };\r\n    return MatOption;\r\n}());\r\n/**\r\n * Counts the amount of option group labels that precede the specified option.\r\n * \\@docs-private\r\n * @param {?} optionIndex Index of the option at which to start counting.\r\n * @param {?} options Flat list of all of the options.\r\n * @param {?} optionGroups Flat list of all of the option groups.\r\n * @return {?}\r\n */\r\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\r\n    if (optionGroups.length) {\r\n        var /** @type {?} */ optionsArray = options.toArray();\r\n        var /** @type {?} */ groups = optionGroups.toArray();\r\n        var /** @type {?} */ groupCounter = 0;\r\n        for (var /** @type {?} */ i = 0; i < optionIndex + 1; i++) {\r\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\r\n                groupCounter++;\r\n            }\r\n        }\r\n        return groupCounter;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * Determines the position to which to scroll a panel in order for an option to be into view.\r\n * \\@docs-private\r\n * @param {?} optionIndex Index of the option to be scrolled into the view.\r\n * @param {?} optionHeight Height of the options.\r\n * @param {?} currentScrollPosition Current scroll position of the panel.\r\n * @param {?} panelHeight Height of the panel.\r\n * @return {?}\r\n */\r\nfunction _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\r\n    var /** @type {?} */ optionOffset = optionIndex * optionHeight;\r\n    if (optionOffset < currentScrollPosition) {\r\n        return optionOffset;\r\n    }\r\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\r\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\r\n    }\r\n    return currentScrollPosition;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\nvar MatOptionModule = /** @class */ (function () {\r\n    function MatOptionModule() {\r\n    }\r\n    MatOptionModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\r\n                    exports: [MatOption, MatOptgroup],\r\n                    declarations: [MatOption, MatOptgroup]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatOptionModule.ctorParameters = function () { return []; };\r\n    return MatOptionModule;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * InjectionToken that can be used to specify the global label options.\r\n */\r\nvar MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\r\n/**\r\n * Configurable options for floating labels.\r\n * @record\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\r\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\r\n */\r\nvar JAN = 0;\r\nvar FEB = 1;\r\nvar MAR = 2;\r\nvar APR = 3;\r\nvar MAY = 4;\r\nvar JUN = 5;\r\nvar JUL = 6;\r\nvar AUG = 7;\r\nvar SEP = 8;\r\nvar OCT = 9;\r\nvar NOV = 10;\r\nvar DEC = 11;\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { MAT_LABEL_GLOBAL_OPTIONS as MAT_PLACEHOLDER_GLOBAL_OPTIONS, AnimationCurves, AnimationDurations, MatCommonModule, MATERIAL_SANITY_CHECKS, mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, mixinErrorState, mixinInitialized, NativeDateModule, MatNativeDateModule, MAT_DATE_LOCALE, MAT_DATE_LOCALE_PROVIDER, DateAdapter, MAT_DATE_FORMATS, NativeDateAdapter, MAT_NATIVE_DATE_FORMATS, ShowOnDirtyErrorStateMatcher, ErrorStateMatcher, MAT_HAMMER_OPTIONS, GestureConfig, MatLine, MatLineSetter, MatLineModule, MatOptionModule, MatOptionSelectionChange, MAT_OPTION_PARENT_COMPONENT, MatOption, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptgroupBase, _MatOptgroupMixinBase, MatOptgroup, MAT_LABEL_GLOBAL_OPTIONS, MatRippleModule, MAT_RIPPLE_GLOBAL_OPTIONS, MatRipple, RippleState, RippleRef, defaultRippleAnimationConfig, RippleRenderer, MatPseudoCheckboxModule, MatPseudoCheckbox, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };\r\n//# sourceMappingURL=core.es5.js.map\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/material/esm5/core.es5.js\n// module id = 284\n// module chunks = 0 1","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Coerces a data-bound value (typically a string) to a boolean.\r\n * @param {?} value\r\n * @return {?}\r\n */\r\nfunction coerceBooleanProperty(value) {\r\n    return value != null && \"\" + value !== 'false';\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * @param {?} value\r\n * @param {?=} fallbackValue\r\n * @return {?}\r\n */\r\nfunction coerceNumberProperty(value, fallbackValue) {\r\n    if (fallbackValue === void 0) { fallbackValue = 0; }\r\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\r\n}\r\n/**\r\n * Whether the provided value is considered a number.\r\n * \\@docs-private\r\n * @param {?} value\r\n * @return {?}\r\n */\r\nfunction _isNumberValue(value) {\r\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\r\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\r\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\r\n    return !isNaN(parseFloat(/** @type {?} */ (value))) && !isNaN(Number(value));\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Wraps the provided value in an array, unless the provided value is an array.\r\n * @template T\r\n * @param {?} value\r\n * @return {?}\r\n */\r\nfunction coerceArray(value) {\r\n    return Array.isArray(value) ? value : [value];\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { coerceBooleanProperty, coerceNumberProperty, _isNumberValue, coerceArray };\r\n//# sourceMappingURL=coercion.es5.js.map\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/cdk/esm5/coercion.es5.js\n// module id = 285\n// module chunks = 0 1","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { Injectable, NgModule } from '@angular/core';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n// Whether the current platform supports the V8 Break Iterator. The V8 check\r\n// is necessary to detect all Blink based browsers.\r\nvar hasV8BreakIterator = (typeof (Intl) !== 'undefined' && (/** @type {?} */ (Intl)).v8BreakIterator);\r\n/**\r\n * Service to detect the current platform by comparing the userAgent strings and\r\n * checking browser-specific global properties.\r\n */\r\nvar Platform = /** @class */ (function () {\r\n    function Platform() {\r\n        /**\r\n         * Whether the Angular application is being rendered in the browser.\r\n         */\r\n        this.isBrowser = typeof document === 'object' && !!document;\r\n        /**\r\n         * Whether the current browser is Microsoft Edge.\r\n         */\r\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\r\n        /**\r\n         * Whether the current rendering engine is Microsoft Trident.\r\n         */\r\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\r\n        /**\r\n         * Whether the current rendering engine is Blink.\r\n         */\r\n        this.BLINK = this.isBrowser &&\r\n            (!!((/** @type {?} */ (window)).chrome || hasV8BreakIterator) && !!CSS && !this.EDGE && !this.TRIDENT);\r\n        /**\r\n         * Whether the current rendering engine is WebKit.\r\n         */\r\n        this.WEBKIT = this.isBrowser &&\r\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\r\n        /**\r\n         * Whether the current platform is Apple iOS.\r\n         */\r\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\r\n            !(/** @type {?} */ (window)).MSStream;\r\n        /**\r\n         * Whether the current browser is Firefox.\r\n         */\r\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\r\n        /**\r\n         * Whether the current platform is Android.\r\n         */\r\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\r\n        /**\r\n         * Whether the current browser is Safari.\r\n         */\r\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\r\n    }\r\n    Platform.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    Platform.ctorParameters = function () { return []; };\r\n    return Platform;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Cached result of whether the user's browser supports passive event listeners.\r\n */\r\nvar supportsPassiveEvents;\r\n/**\r\n * Checks whether the user's browser supports passive event listeners.\r\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\r\n * @return {?}\r\n */\r\nfunction supportsPassiveEventListeners() {\r\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\r\n        try {\r\n            window.addEventListener('test', /** @type {?} */ ((null)), Object.defineProperty({}, 'passive', {\r\n                get: function () { return supportsPassiveEvents = true; }\r\n            }));\r\n        }\r\n        finally {\r\n            supportsPassiveEvents = supportsPassiveEvents || false;\r\n        }\r\n    }\r\n    return supportsPassiveEvents;\r\n}\r\n/**\r\n * Cached result Set of input types support by the current browser.\r\n */\r\nvar supportedInputTypes;\r\n/**\r\n * Types of `<input>` that *might* be supported.\r\n */\r\nvar candidateInputTypes = [\r\n    'color',\r\n    'button',\r\n    'checkbox',\r\n    'date',\r\n    'datetime-local',\r\n    'email',\r\n    'file',\r\n    'hidden',\r\n    'image',\r\n    'month',\r\n    'number',\r\n    'password',\r\n    'radio',\r\n    'range',\r\n    'reset',\r\n    'search',\r\n    'submit',\r\n    'tel',\r\n    'text',\r\n    'time',\r\n    'url',\r\n    'week',\r\n];\r\n/**\r\n * @return {?} The input types supported by this browser.\r\n */\r\nfunction getSupportedInputTypes() {\r\n    // Result is cached.\r\n    if (supportedInputTypes) {\r\n        return supportedInputTypes;\r\n    }\r\n    // We can't check if an input type is not supported until we're on the browser, so say that\r\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\r\n    // just a helper function and can't inject it.\r\n    if (typeof document !== 'object' || !document) {\r\n        supportedInputTypes = new Set(candidateInputTypes);\r\n        return supportedInputTypes;\r\n    }\r\n    var /** @type {?} */ featureTestInput = document.createElement('input');\r\n    supportedInputTypes = new Set(candidateInputTypes.filter(function (value) {\r\n        featureTestInput.setAttribute('type', value);\r\n        return featureTestInput.type === value;\r\n    }));\r\n    return supportedInputTypes;\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\nvar PlatformModule = /** @class */ (function () {\r\n    function PlatformModule() {\r\n    }\r\n    PlatformModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    providers: [Platform]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    PlatformModule.ctorParameters = function () { return []; };\r\n    return PlatformModule;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { Platform, supportsPassiveEventListeners, getSupportedInputTypes, PlatformModule };\r\n//# sourceMappingURL=platform.es5.js.map\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/cdk/esm5/platform.es5.js\n// module id = 286\n// module chunks = 0 1","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { ChangeDetectionStrategy, Component, Directive, Input, NgModule, ViewEncapsulation } from '@angular/core';\r\nimport { MatCommonModule } from '@angular/material/core';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Content of a card, needed as it's used as a selector in the API.\r\n * \\@docs-private\r\n */\r\nvar MatCardContent = /** @class */ (function () {\r\n    function MatCardContent() {\r\n    }\r\n    MatCardContent.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: 'mat-card-content',\r\n                    host: { 'class': 'mat-card-content' }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardContent.ctorParameters = function () { return []; };\r\n    return MatCardContent;\r\n}());\r\n/**\r\n * Title of a card, needed as it's used as a selector in the API.\r\n * \\@docs-private\r\n */\r\nvar MatCardTitle = /** @class */ (function () {\r\n    function MatCardTitle() {\r\n    }\r\n    MatCardTitle.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: \"mat-card-title, [mat-card-title], [matCardTitle]\",\r\n                    host: {\r\n                        'class': 'mat-card-title'\r\n                    }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardTitle.ctorParameters = function () { return []; };\r\n    return MatCardTitle;\r\n}());\r\n/**\r\n * Sub-title of a card, needed as it's used as a selector in the API.\r\n * \\@docs-private\r\n */\r\nvar MatCardSubtitle = /** @class */ (function () {\r\n    function MatCardSubtitle() {\r\n    }\r\n    MatCardSubtitle.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: \"mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]\",\r\n                    host: {\r\n                        'class': 'mat-card-subtitle'\r\n                    }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardSubtitle.ctorParameters = function () { return []; };\r\n    return MatCardSubtitle;\r\n}());\r\n/**\r\n * Action section of a card, needed as it's used as a selector in the API.\r\n * \\@docs-private\r\n */\r\nvar MatCardActions = /** @class */ (function () {\r\n    function MatCardActions() {\r\n        /**\r\n         * Position of the actions inside the card.\r\n         */\r\n        this.align = 'start';\r\n    }\r\n    MatCardActions.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: 'mat-card-actions',\r\n                    exportAs: 'matCardActions',\r\n                    host: {\r\n                        'class': 'mat-card-actions',\r\n                        '[class.mat-card-actions-align-end]': 'align === \"end\"',\r\n                    }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardActions.ctorParameters = function () { return []; };\r\n    MatCardActions.propDecorators = {\r\n        \"align\": [{ type: Input },],\r\n    };\r\n    return MatCardActions;\r\n}());\r\n/**\r\n * Footer of a card, needed as it's used as a selector in the API.\r\n * \\@docs-private\r\n */\r\nvar MatCardFooter = /** @class */ (function () {\r\n    function MatCardFooter() {\r\n    }\r\n    MatCardFooter.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: 'mat-card-footer',\r\n                    host: { 'class': 'mat-card-footer' }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardFooter.ctorParameters = function () { return []; };\r\n    return MatCardFooter;\r\n}());\r\n/**\r\n * Image used in a card, needed to add the mat- CSS styling.\r\n * \\@docs-private\r\n */\r\nvar MatCardImage = /** @class */ (function () {\r\n    function MatCardImage() {\r\n    }\r\n    MatCardImage.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[mat-card-image], [matCardImage]',\r\n                    host: { 'class': 'mat-card-image' }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardImage.ctorParameters = function () { return []; };\r\n    return MatCardImage;\r\n}());\r\n/**\r\n * Image used in a card, needed to add the mat- CSS styling.\r\n * \\@docs-private\r\n */\r\nvar MatCardSmImage = /** @class */ (function () {\r\n    function MatCardSmImage() {\r\n    }\r\n    MatCardSmImage.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[mat-card-sm-image], [matCardImageSmall]',\r\n                    host: { 'class': 'mat-card-sm-image' }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardSmImage.ctorParameters = function () { return []; };\r\n    return MatCardSmImage;\r\n}());\r\n/**\r\n * Image used in a card, needed to add the mat- CSS styling.\r\n * \\@docs-private\r\n */\r\nvar MatCardMdImage = /** @class */ (function () {\r\n    function MatCardMdImage() {\r\n    }\r\n    MatCardMdImage.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[mat-card-md-image], [matCardImageMedium]',\r\n                    host: { 'class': 'mat-card-md-image' }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardMdImage.ctorParameters = function () { return []; };\r\n    return MatCardMdImage;\r\n}());\r\n/**\r\n * Image used in a card, needed to add the mat- CSS styling.\r\n * \\@docs-private\r\n */\r\nvar MatCardLgImage = /** @class */ (function () {\r\n    function MatCardLgImage() {\r\n    }\r\n    MatCardLgImage.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[mat-card-lg-image], [matCardImageLarge]',\r\n                    host: { 'class': 'mat-card-lg-image' }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardLgImage.ctorParameters = function () { return []; };\r\n    return MatCardLgImage;\r\n}());\r\n/**\r\n * Large image used in a card, needed to add the mat- CSS styling.\r\n * \\@docs-private\r\n */\r\nvar MatCardXlImage = /** @class */ (function () {\r\n    function MatCardXlImage() {\r\n    }\r\n    MatCardXlImage.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[mat-card-xl-image], [matCardImageXLarge]',\r\n                    host: { 'class': 'mat-card-xl-image' }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardXlImage.ctorParameters = function () { return []; };\r\n    return MatCardXlImage;\r\n}());\r\n/**\r\n * Avatar image used in a card, needed to add the mat- CSS styling.\r\n * \\@docs-private\r\n */\r\nvar MatCardAvatar = /** @class */ (function () {\r\n    function MatCardAvatar() {\r\n    }\r\n    MatCardAvatar.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[mat-card-avatar], [matCardAvatar]',\r\n                    host: { 'class': 'mat-card-avatar' }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardAvatar.ctorParameters = function () { return []; };\r\n    return MatCardAvatar;\r\n}());\r\n/**\r\n * A basic content container component that adds the styles of a Material design card.\r\n *\r\n * While this component can be used alone, it also provides a number\r\n * of preset styles for common card sections, including:\r\n * - mat-card-title\r\n * - mat-card-subtitle\r\n * - mat-card-content\r\n * - mat-card-actions\r\n * - mat-card-footer\r\n */\r\nvar MatCard = /** @class */ (function () {\r\n    function MatCard() {\r\n    }\r\n    MatCard.decorators = [\r\n        { type: Component, args: [{selector: 'mat-card',\r\n                    exportAs: 'matCard',\r\n                    template: \"<ng-content></ng-content><ng-content select=\\\"mat-card-footer\\\"></ng-content>\",\r\n                    styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(.4,0,.2,1);display:block;position:relative;padding:24px;border-radius:2px}.mat-card:not([class*=mat-elevation-z]){box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.mat-card .mat-divider{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider{left:auto;right:0}.mat-card .mat-divider.mat-divider-inset{position:static;margin:0}@media screen and (-ms-high-contrast:active){.mat-card{outline:solid 1px}}.mat-card-flat{box-shadow:none}.mat-card-actions,.mat-card-content,.mat-card-subtitle,.mat-card-title{display:block;margin-bottom:16px}.mat-card-actions{margin-left:-16px;margin-right:-16px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 48px);margin:0 -24px 16px -24px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-footer{display:block;margin:0 -24px -24px -24px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button{margin:0 4px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header-text{margin:0 8px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0}.mat-card-lg-image,.mat-card-md-image,.mat-card-sm-image{margin:-8px 0}.mat-card-title-group{display:flex;justify-content:space-between;margin:0 -8px}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}@media (max-width:599px){.mat-card{padding:24px 16px}.mat-card-actions{margin-left:-8px;margin-right:-8px}.mat-card-image{width:calc(100% + 32px);margin:16px -16px}.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}.mat-card-header{margin:-8px 0 0 0}.mat-card-footer{margin-left:-16px;margin-right:-16px}}.mat-card-content>:first-child,.mat-card>:first-child{margin-top:0}.mat-card-content>:last-child:not(.mat-card-footer),.mat-card>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-24px}.mat-card>.mat-card-actions:last-child{margin-bottom:-16px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child{margin-left:0;margin-right:0}.mat-card-subtitle:not(:first-child),.mat-card-title:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\"],\r\n                    encapsulation: ViewEncapsulation.None,\r\n                    preserveWhitespaces: false,\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    host: { 'class': 'mat-card' }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCard.ctorParameters = function () { return []; };\r\n    return MatCard;\r\n}());\r\n/**\r\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\r\n * preset header section (i.e. a title, subtitle, and avatar layout).\r\n * \\@docs-private\r\n */\r\nvar MatCardHeader = /** @class */ (function () {\r\n    function MatCardHeader() {\r\n    }\r\n    MatCardHeader.decorators = [\r\n        { type: Component, args: [{selector: 'mat-card-header',\r\n                    template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content><div class=\\\"mat-card-header-text\\\"><ng-content select=\\\"mat-card-title, mat-card-subtitle, [mat-card-title], [mat-card-subtitle], [matCardTitle], [matCardSubtitle]\\\"></ng-content></div><ng-content></ng-content>\",\r\n                    encapsulation: ViewEncapsulation.None,\r\n                    preserveWhitespaces: false,\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    host: { 'class': 'mat-card-header' }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardHeader.ctorParameters = function () { return []; };\r\n    return MatCardHeader;\r\n}());\r\n/**\r\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\r\n * layout that groups an image with a title section.\r\n * \\@docs-private\r\n */\r\nvar MatCardTitleGroup = /** @class */ (function () {\r\n    function MatCardTitleGroup() {\r\n    }\r\n    MatCardTitleGroup.decorators = [\r\n        { type: Component, args: [{selector: 'mat-card-title-group',\r\n                    template: \"<div><ng-content select=\\\"mat-card-title, mat-card-subtitle, [mat-card-title], [mat-card-subtitle], [matCardTitle], [matCardSubtitle]\\\"></ng-content></div><ng-content select=\\\"img\\\"></ng-content><ng-content></ng-content>\",\r\n                    encapsulation: ViewEncapsulation.None,\r\n                    preserveWhitespaces: false,\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    host: { 'class': 'mat-card-title-group' }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardTitleGroup.ctorParameters = function () { return []; };\r\n    return MatCardTitleGroup;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\nvar MatCardModule = /** @class */ (function () {\r\n    function MatCardModule() {\r\n    }\r\n    MatCardModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [MatCommonModule],\r\n                    exports: [\r\n                        MatCard,\r\n                        MatCardHeader,\r\n                        MatCardTitleGroup,\r\n                        MatCardContent,\r\n                        MatCardTitle,\r\n                        MatCardSubtitle,\r\n                        MatCardActions,\r\n                        MatCardFooter,\r\n                        MatCardSmImage,\r\n                        MatCardMdImage,\r\n                        MatCardLgImage,\r\n                        MatCardImage,\r\n                        MatCardXlImage,\r\n                        MatCardAvatar,\r\n                        MatCommonModule,\r\n                    ],\r\n                    declarations: [\r\n                        MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\r\n                        MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\r\n                        MatCardXlImage, MatCardAvatar,\r\n                    ],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatCardModule.ctorParameters = function () { return []; };\r\n    return MatCardModule;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardImage, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardXlImage, MatCardAvatar, MatCard, MatCardHeader, MatCardTitleGroup, MatCardModule };\r\n//# sourceMappingURL=card.es5.js.map\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/material/esm5/card.es5.js\n// module id = 287\n// module chunks = 0 1","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { Directive, EventEmitter, Inject, Injectable, InjectionToken, Input, NgModule, Optional, Output } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Injection token used to inject the document into Directionality.\r\n * This is used so that the value can be faked in tests.\r\n *\r\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\r\n * tests in Safari to fail.\r\n *\r\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\r\n * themselves use things like `querySelector` in test code.\r\n */\r\nvar DIR_DOCUMENT = new InjectionToken('cdk-dir-doc');\r\n/**\r\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\r\n * Exposes the current direction and a stream of direction changes.\r\n */\r\nvar Directionality = /** @class */ (function () {\r\n    function Directionality(_document) {\r\n        /**\r\n         * The current 'ltr' or 'rtl' value.\r\n         */\r\n        this.value = 'ltr';\r\n        /**\r\n         * Stream that emits whenever the 'ltr' / 'rtl' state changes.\r\n         */\r\n        this.change = new EventEmitter();\r\n        if (_document) {\r\n            // TODO: handle 'auto' value -\r\n            // We still need to account for dir=\"auto\".\r\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\r\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\r\n            var /** @type {?} */ bodyDir = _document.body ? _document.body.dir : null;\r\n            var /** @type {?} */ htmlDir = _document.documentElement ? _document.documentElement.dir : null;\r\n            this.value = /** @type {?} */ ((bodyDir || htmlDir || 'ltr'));\r\n        }\r\n    }\r\n    Directionality.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    Directionality.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] },] },\r\n    ]; };\r\n    return Directionality;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Directive to listen for changes of direction of part of the DOM.\r\n *\r\n * Provides itself as Directionality such that descendant directives only need to ever inject\r\n * Directionality to get the closest direction.\r\n */\r\nvar Dir = /** @class */ (function () {\r\n    function Dir() {\r\n        this._dir = 'ltr';\r\n        /**\r\n         * Whether the `value` has been set to its initial value.\r\n         */\r\n        this._isInitialized = false;\r\n        /**\r\n         * Event emitted when the direction changes.\r\n         */\r\n        this.change = new EventEmitter();\r\n    }\r\n    Object.defineProperty(Dir.prototype, \"dir\", {\r\n        get: /**\r\n         * \\@docs-private\r\n         * @return {?}\r\n         */\r\n        function () { return this._dir; },\r\n        set: /**\r\n         * @param {?} v\r\n         * @return {?}\r\n         */\r\n        function (v) {\r\n            var /** @type {?} */ old = this._dir;\r\n            this._dir = v;\r\n            if (old !== this._dir && this._isInitialized) {\r\n                this.change.emit(this._dir);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Dir.prototype, \"value\", {\r\n        /** Current layout direction of the element. */\r\n        get: /**\r\n         * Current layout direction of the element.\r\n         * @return {?}\r\n         */\r\n        function () { return this.dir; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** Initialize once default value has been set. */\r\n    /**\r\n     * Initialize once default value has been set.\r\n     * @return {?}\r\n     */\r\n    Dir.prototype.ngAfterContentInit = /**\r\n     * Initialize once default value has been set.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._isInitialized = true;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    Dir.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.change.complete();\r\n    };\r\n    Dir.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[dir]',\r\n                    providers: [{ provide: Directionality, useExisting: Dir }],\r\n                    host: { '[dir]': 'dir' },\r\n                    exportAs: 'dir',\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    Dir.ctorParameters = function () { return []; };\r\n    Dir.propDecorators = {\r\n        \"change\": [{ type: Output, args: ['dirChange',] },],\r\n        \"dir\": [{ type: Input },],\r\n    };\r\n    return Dir;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\nvar BidiModule = /** @class */ (function () {\r\n    function BidiModule() {\r\n    }\r\n    BidiModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    exports: [Dir],\r\n                    declarations: [Dir],\r\n                    providers: [\r\n                        { provide: DIR_DOCUMENT, useExisting: DOCUMENT },\r\n                        Directionality,\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    BidiModule.ctorParameters = function () { return []; };\r\n    return BidiModule;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { Directionality, DIR_DOCUMENT, Dir, BidiModule };\r\n//# sourceMappingURL=bidi.es5.js.map\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/cdk/esm5/bidi.es5.js\n// module id = 288\n// module chunks = 0 1","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\nvar UP_ARROW = 38;\r\nvar DOWN_ARROW = 40;\r\nvar RIGHT_ARROW = 39;\r\nvar LEFT_ARROW = 37;\r\nvar PAGE_UP = 33;\r\nvar PAGE_DOWN = 34;\r\nvar HOME = 36;\r\nvar END = 35;\r\nvar ENTER = 13;\r\nvar SPACE = 32;\r\nvar TAB = 9;\r\nvar ESCAPE = 27;\r\nvar BACKSPACE = 8;\r\nvar DELETE = 46;\r\nvar A = 65;\r\nvar Z = 90;\r\nvar ZERO = 48;\r\nvar NINE = 57;\r\nvar COMMA = 188;\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, PAGE_UP, PAGE_DOWN, HOME, END, ENTER, SPACE, TAB, ESCAPE, BACKSPACE, DELETE, A, Z, ZERO, NINE, COMMA };\r\n//# sourceMappingURL=keycodes.es5.js.map\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/cdk/esm5/keycodes.es5.js\n// module id = 289\n// module chunks = 0 1","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\n/**\r\n * Generated class for the LoginPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage({\r\n  name:'login'\r\n})\r\n\r\n@Component({\r\n  selector: 'page-login',\r\n  templateUrl: 'login.html'\r\n})\r\n\r\n\r\nexport class LoginPage {\r\n\r\n  username:string;\r\n  password:string;\r\n\r\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\r\n\r\n\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n\r\n    console.log('ionViewDidLoad LoginPage');\r\n\r\n  }\r\n\r\n  NavHome(){\r\n\r\nthis.password=\"\";\r\n\r\n\r\nthis.navCtrl.push('home');\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport { CommonModule } from '@angular/common';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, ContentChildren, Directive, ElementRef, Inject, Input, NgModule, Optional, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { PlatformModule } from '@angular/cdk/platform';\r\nimport { __extends } from 'tslib';\r\nimport * as tslib_1 from 'tslib';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { MAT_LABEL_GLOBAL_OPTIONS, mixinColor } from '@angular/material/core';\r\nimport { fromEvent } from 'rxjs/observable/fromEvent';\r\nimport { startWith } from 'rxjs/operators/startWith';\r\nimport { take } from 'rxjs/operators/take';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\nvar nextUniqueId = 0;\r\n/**\r\n * Single error message to be shown underneath the form field.\r\n */\r\nvar MatError = /** @class */ (function () {\r\n    function MatError() {\r\n        this.id = \"mat-error-\" + nextUniqueId++;\r\n    }\r\n    MatError.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: 'mat-error',\r\n                    host: {\r\n                        'class': 'mat-error',\r\n                        'role': 'alert',\r\n                        '[attr.id]': 'id',\r\n                    }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatError.ctorParameters = function () { return []; };\r\n    MatError.propDecorators = {\r\n        \"id\": [{ type: Input },],\r\n    };\r\n    return MatError;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n/**\r\n * Animations used by the MatFormField.\r\n */\r\nvar matFormFieldAnimations = {\r\n    /** Animation that transitions the form field's error and hint messages. */\r\n    transitionMessages: trigger('transitionMessages', [\r\n        // TODO(mmalerba): Use angular animations for label animation as well.\r\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\r\n        transition('void => enter', [\r\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\r\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\r\n        ]),\r\n    ])\r\n};\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * An interface which allows a control to work inside of a `MatFormField`.\r\n * @abstract\r\n */\r\nvar MatFormFieldControl = /** @class */ (function () {\r\n    function MatFormFieldControl() {\r\n    }\r\n    return MatFormFieldControl;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * \\@docs-private\r\n * @return {?}\r\n */\r\nfunction getMatFormFieldPlaceholderConflictError() {\r\n    return Error('Placeholder attribute and child element were both specified.');\r\n}\r\n/**\r\n * \\@docs-private\r\n * @param {?} align\r\n * @return {?}\r\n */\r\nfunction getMatFormFieldDuplicatedHintError(align) {\r\n    return Error(\"A hint was already declared for 'align=\\\"\" + align + \"\\\"'.\");\r\n}\r\n/**\r\n * \\@docs-private\r\n * @return {?}\r\n */\r\nfunction getMatFormFieldMissingControlError() {\r\n    return Error('mat-form-field must contain a MatFormFieldControl.');\r\n}\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\nvar nextUniqueId$2 = 0;\r\n/**\r\n * Hint text to be shown underneath the form field control.\r\n */\r\nvar MatHint = /** @class */ (function () {\r\n    function MatHint() {\r\n        /**\r\n         * Whether to align the hint label at the start or end of the line.\r\n         */\r\n        this.align = 'start';\r\n        /**\r\n         * Unique ID for the hint. Used for the aria-describedby on the form field control.\r\n         */\r\n        this.id = \"mat-hint-\" + nextUniqueId$2++;\r\n    }\r\n    MatHint.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: 'mat-hint',\r\n                    host: {\r\n                        'class': 'mat-hint',\r\n                        '[class.mat-right]': 'align == \"end\"',\r\n                        '[attr.id]': 'id',\r\n                        // Remove align attribute to prevent it from interfering with layout.\r\n                        '[attr.align]': 'null',\r\n                    }\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatHint.ctorParameters = function () { return []; };\r\n    MatHint.propDecorators = {\r\n        \"align\": [{ type: Input },],\r\n        \"id\": [{ type: Input },],\r\n    };\r\n    return MatHint;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * The floating label for a `mat-form-field`.\r\n */\r\nvar MatLabel = /** @class */ (function () {\r\n    function MatLabel() {\r\n    }\r\n    MatLabel.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: 'mat-label'\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatLabel.ctorParameters = function () { return []; };\r\n    return MatLabel;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * The placeholder text for an `MatFormField`.\r\n */\r\nvar MatPlaceholder = /** @class */ (function () {\r\n    function MatPlaceholder() {\r\n    }\r\n    MatPlaceholder.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: 'mat-placeholder'\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatPlaceholder.ctorParameters = function () { return []; };\r\n    return MatPlaceholder;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Prefix to be placed the the front of the form field.\r\n */\r\nvar MatPrefix = /** @class */ (function () {\r\n    function MatPrefix() {\r\n    }\r\n    MatPrefix.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[matPrefix]',\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatPrefix.ctorParameters = function () { return []; };\r\n    return MatPrefix;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * Suffix to be placed at the end of the form field.\r\n */\r\nvar MatSuffix = /** @class */ (function () {\r\n    function MatSuffix() {\r\n    }\r\n    MatSuffix.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[matSuffix]',\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatSuffix.ctorParameters = function () { return []; };\r\n    return MatSuffix;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * \\@docs-private\r\n */\r\nvar MatFormFieldBase = /** @class */ (function () {\r\n    function MatFormFieldBase(_elementRef) {\r\n        this._elementRef = _elementRef;\r\n    }\r\n    return MatFormFieldBase;\r\n}());\r\nvar _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\r\nvar nextUniqueId$1 = 0;\r\n/**\r\n * Container for form controls that applies Material Design styling and behavior.\r\n */\r\nvar MatFormField = /** @class */ (function (_super) {\r\n    __extends(MatFormField, _super);\r\n    function MatFormField(_elementRef, _changeDetectorRef, labelOptions) {\r\n        var _this = _super.call(this, _elementRef) || this;\r\n        _this._elementRef = _elementRef;\r\n        _this._changeDetectorRef = _changeDetectorRef;\r\n        /**\r\n         * Override for the logic that disables the label animation in certain cases.\r\n         */\r\n        _this._showAlwaysAnimate = false;\r\n        /**\r\n         * State of the mat-hint and mat-error animations.\r\n         */\r\n        _this._subscriptAnimationState = '';\r\n        _this._hintLabel = '';\r\n        // Unique id for the hint label.\r\n        _this._hintLabelId = \"mat-hint-\" + nextUniqueId$1++;\r\n        _this._labelOptions = labelOptions ? labelOptions : {};\r\n        _this.floatLabel = _this._labelOptions.float || 'auto';\r\n        return _this;\r\n    }\r\n    Object.defineProperty(MatFormField.prototype, \"dividerColor\", {\r\n        get: /**\r\n         * @deprecated Use `color` instead.\r\n         * \\@deletion-target 6.0.0\r\n         * @return {?}\r\n         */\r\n        function () { return this.color; },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) { this.color = value; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MatFormField.prototype, \"hideRequiredMarker\", {\r\n        get: /**\r\n         * Whether the required marker should be hidden.\r\n         * @return {?}\r\n         */\r\n        function () { return this._hideRequiredMarker; },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this._hideRequiredMarker = coerceBooleanProperty(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MatFormField.prototype, \"_shouldAlwaysFloat\", {\r\n        /** Whether the floating label should always float or not. */\r\n        get: /**\r\n         * Whether the floating label should always float or not.\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this._floatLabel === 'always' && !this._showAlwaysAnimate;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MatFormField.prototype, \"_canLabelFloat\", {\r\n        /** Whether the label can float or not. */\r\n        get: /**\r\n         * Whether the label can float or not.\r\n         * @return {?}\r\n         */\r\n        function () { return this._floatLabel !== 'never'; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MatFormField.prototype, \"hintLabel\", {\r\n        get: /**\r\n         * Text for the form field hint.\r\n         * @return {?}\r\n         */\r\n        function () { return this._hintLabel; },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            this._hintLabel = value;\r\n            this._processHints();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MatFormField.prototype, \"floatPlaceholder\", {\r\n        get: /**\r\n         * Whether the placeholder should always float, never float or float as the user types.\r\n         * @deprecated Use floatLabel instead.\r\n         * \\@deletion-target 6.0.0\r\n         * @return {?}\r\n         */\r\n        function () { return this._floatLabel; },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) { this.floatLabel = value; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(MatFormField.prototype, \"floatLabel\", {\r\n        get: /**\r\n         * Whether the label should always float, never float or float as the user types.\r\n         * @return {?}\r\n         */\r\n        function () { return this._floatLabel; },\r\n        set: /**\r\n         * @param {?} value\r\n         * @return {?}\r\n         */\r\n        function (value) {\r\n            if (value !== this._floatLabel) {\r\n                this._floatLabel = value || this._labelOptions.float || 'auto';\r\n                this._changeDetectorRef.markForCheck();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MatFormField.prototype.ngAfterContentInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        this._validateControlChild();\r\n        if (this._control.controlType) {\r\n            this._elementRef.nativeElement.classList\r\n                .add(\"mat-form-field-type-\" + this._control.controlType);\r\n        }\r\n        // Subscribe to changes in the child control state in order to update the form field UI.\r\n        this._control.stateChanges.pipe(startWith(/** @type {?} */ ((null)))).subscribe(function () {\r\n            _this._validatePlaceholders();\r\n            _this._syncDescribedByIds();\r\n            _this._changeDetectorRef.markForCheck();\r\n        });\r\n        var /** @type {?} */ ngControl = this._control.ngControl;\r\n        if (ngControl && ngControl.valueChanges) {\r\n            ngControl.valueChanges.subscribe(function () {\r\n                _this._changeDetectorRef.markForCheck();\r\n            });\r\n        }\r\n        // Re-validate when the number of hints changes.\r\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(function () {\r\n            _this._processHints();\r\n            _this._changeDetectorRef.markForCheck();\r\n        });\r\n        // Update the aria-described by when the number of errors changes.\r\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(function () {\r\n            _this._syncDescribedByIds();\r\n            _this._changeDetectorRef.markForCheck();\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MatFormField.prototype.ngAfterContentChecked = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._validateControlChild();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MatFormField.prototype.ngAfterViewInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        // Avoid animations on load.\r\n        this._subscriptAnimationState = 'enter';\r\n        this._changeDetectorRef.detectChanges();\r\n    };\r\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\r\n    /**\r\n     * Determines whether a class from the NgControl should be forwarded to the host element.\r\n     * @param {?} prop\r\n     * @return {?}\r\n     */\r\n    MatFormField.prototype._shouldForward = /**\r\n     * Determines whether a class from the NgControl should be forwarded to the host element.\r\n     * @param {?} prop\r\n     * @return {?}\r\n     */\r\n    function (prop) {\r\n        var /** @type {?} */ ngControl = this._control ? this._control.ngControl : null;\r\n        return ngControl && (/** @type {?} */ (ngControl))[prop];\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MatFormField.prototype._hasPlaceholder = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return !!(this._control.placeholder || this._placeholderChild);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MatFormField.prototype._hasLabel = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return !!this._labelChild;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MatFormField.prototype._shouldLabelFloat = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._canLabelFloat && (this._control.shouldLabelFloat ||\r\n            this._control.shouldPlaceholderFloat || this._shouldAlwaysFloat);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MatFormField.prototype._hideControlPlaceholder = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return !this._hasLabel() || !this._shouldLabelFloat();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    MatFormField.prototype._hasFloatingLabel = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return this._hasLabel() || this._hasPlaceholder();\r\n    };\r\n    /** Determines whether to display hints or errors. */\r\n    /**\r\n     * Determines whether to display hints or errors.\r\n     * @return {?}\r\n     */\r\n    MatFormField.prototype._getDisplayedMessages = /**\r\n     * Determines whether to display hints or errors.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return (this._errorChildren && this._errorChildren.length > 0 &&\r\n            this._control.errorState) ? 'error' : 'hint';\r\n    };\r\n    /** Animates the placeholder up and locks it in position. */\r\n    /**\r\n     * Animates the placeholder up and locks it in position.\r\n     * @return {?}\r\n     */\r\n    MatFormField.prototype._animateAndLockLabel = /**\r\n     * Animates the placeholder up and locks it in position.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        if (this._hasFloatingLabel() && this._canLabelFloat) {\r\n            this._showAlwaysAnimate = true;\r\n            this._floatLabel = 'always';\r\n            fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(function () {\r\n                _this._showAlwaysAnimate = false;\r\n            });\r\n            this._changeDetectorRef.markForCheck();\r\n        }\r\n    };\r\n    /**\r\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\r\n     * or child element with the `mat-placeholder` directive).\r\n     * @return {?}\r\n     */\r\n    MatFormField.prototype._validatePlaceholders = /**\r\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\r\n     * or child element with the `mat-placeholder` directive).\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._control.placeholder && this._placeholderChild) {\r\n            throw getMatFormFieldPlaceholderConflictError();\r\n        }\r\n    };\r\n    /**\r\n     * Does any extra processing that is required when handling the hints.\r\n     * @return {?}\r\n     */\r\n    MatFormField.prototype._processHints = /**\r\n     * Does any extra processing that is required when handling the hints.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this._validateHints();\r\n        this._syncDescribedByIds();\r\n    };\r\n    /**\r\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\r\n     * attribute being considered as `align=\"start\"`.\r\n     * @return {?}\r\n     */\r\n    MatFormField.prototype._validateHints = /**\r\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\r\n     * attribute being considered as `align=\"start\"`.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        if (this._hintChildren) {\r\n            var /** @type {?} */ startHint_1;\r\n            var /** @type {?} */ endHint_1;\r\n            this._hintChildren.forEach(function (hint) {\r\n                if (hint.align === 'start') {\r\n                    if (startHint_1 || _this.hintLabel) {\r\n                        throw getMatFormFieldDuplicatedHintError('start');\r\n                    }\r\n                    startHint_1 = hint;\r\n                }\r\n                else if (hint.align === 'end') {\r\n                    if (endHint_1) {\r\n                        throw getMatFormFieldDuplicatedHintError('end');\r\n                    }\r\n                    endHint_1 = hint;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Sets the list of element IDs that describe the child control. This allows the control to update\r\n     * its `aria-describedby` attribute accordingly.\r\n     * @return {?}\r\n     */\r\n    MatFormField.prototype._syncDescribedByIds = /**\r\n     * Sets the list of element IDs that describe the child control. This allows the control to update\r\n     * its `aria-describedby` attribute accordingly.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this._control) {\r\n            var /** @type {?} */ ids = [];\r\n            if (this._getDisplayedMessages() === 'hint') {\r\n                var /** @type {?} */ startHint = this._hintChildren ?\r\n                    this._hintChildren.find(function (hint) { return hint.align === 'start'; }) : null;\r\n                var /** @type {?} */ endHint = this._hintChildren ?\r\n                    this._hintChildren.find(function (hint) { return hint.align === 'end'; }) : null;\r\n                if (startHint) {\r\n                    ids.push(startHint.id);\r\n                }\r\n                else if (this._hintLabel) {\r\n                    ids.push(this._hintLabelId);\r\n                }\r\n                if (endHint) {\r\n                    ids.push(endHint.id);\r\n                }\r\n            }\r\n            else if (this._errorChildren) {\r\n                ids = this._errorChildren.map(function (error) { return error.id; });\r\n            }\r\n            this._control.setDescribedByIds(ids);\r\n        }\r\n    };\r\n    /** Throws an error if the form field's control is missing. */\r\n    /**\r\n     * Throws an error if the form field's control is missing.\r\n     * @return {?}\r\n     */\r\n    MatFormField.prototype._validateControlChild = /**\r\n     * Throws an error if the form field's control is missing.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (!this._control) {\r\n            throw getMatFormFieldMissingControlError();\r\n        }\r\n    };\r\n    MatFormField.decorators = [\r\n        { type: Component, args: [{// TODO(mmalerba): the input-container selectors and classes are deprecated and will be removed.\r\n                    selector: 'mat-input-container, mat-form-field',\r\n                    exportAs: 'matFormField',\r\n                    template: \"<div class=\\\"mat-input-wrapper mat-form-field-wrapper\\\"><div class=\\\"mat-input-flex mat-form-field-flex\\\" #connectionContainer (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\"><div class=\\\"mat-input-prefix mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\"><ng-content select=\\\"[matPrefix]\\\"></ng-content></div><div class=\\\"mat-input-infix mat-form-field-infix\\\" #inputContainer><ng-content></ng-content><span class=\\\"mat-form-field-label-wrapper mat-input-placeholder-wrapper mat-form-field-placeholder-wrapper\\\"><label class=\\\"mat-form-field-label mat-input-placeholder mat-form-field-placeholder\\\" [attr.for]=\\\"_control.id\\\" [attr.aria-owns]=\\\"_control.id\\\" [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\" [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\" [class.mat-accent]=\\\"color == 'accent'\\\" [class.mat-warn]=\\\"color == 'warn'\\\" #label *ngIf=\\\"_hasFloatingLabel()\\\" [ngSwitch]=\\\"_hasLabel()\\\"><ng-container *ngSwitchCase=\\\"false\\\"><ng-content select=\\\"mat-placeholder\\\"></ng-content>{{_control.placeholder}}</ng-container><ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content><span class=\\\"mat-placeholder-required mat-form-field-required-marker\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&nbsp;*</span></label></span></div><div class=\\\"mat-input-suffix mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\"><ng-content select=\\\"[matSuffix]\\\"></ng-content></div></div><div class=\\\"mat-input-underline mat-form-field-underline\\\" #underline><span class=\\\"mat-input-ripple mat-form-field-ripple\\\" [class.mat-accent]=\\\"color == 'accent'\\\" [class.mat-warn]=\\\"color == 'warn'\\\"></span></div><div class=\\\"mat-input-subscript-wrapper mat-form-field-subscript-wrapper\\\" [ngSwitch]=\\\"_getDisplayedMessages()\\\"><div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\"><ng-content select=\\\"mat-error\\\"></ng-content></div><div class=\\\"mat-input-hint-wrapper mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\"><div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div><ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content><div class=\\\"mat-input-hint-spacer mat-form-field-hint-spacer\\\"></div><ng-content select=\\\"mat-hint[align='end']\\\"></ng-content></div></div></div>\",\r\n                    // MatInput is a directive and can't have styles, so we need to include its styles here.\r\n                    // The MatInput styles are fairly minimal so it shouldn't be a big deal for people who\r\n                    // aren't using MatInput.\r\n                    styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none}.mat-form-field-prefix .mat-icon,.mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-prefix .mat-icon-button,.mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform:perspective(100px);-ms-transform:none;transform-origin:0 0;transition:transform .4s cubic-bezier(.25,.8,.25,1),color .4s cubic-bezier(.25,.8,.25,1),width .4s cubic-bezier(.25,.8,.25,1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-empty.mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-placeholder-wrapper .mat-form-field-placeholder,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-placeholder-wrapper .mat-form-field-placeholder{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-placeholder-wrapper .mat-form-field-placeholder,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-placeholder-wrapper .mat-form-field-placeholder{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;height:1px;width:100%}.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.mat-form-field-underline .mat-form-field-ripple{position:absolute;top:0;left:0;width:100%;height:2px;transform-origin:50%;transform:scaleX(.5);visibility:hidden;opacity:0;transition:background-color .3s cubic-bezier(.55,0,.55,.2)}.mat-form-field-invalid:not(.mat-focused) .mat-form-field-underline .mat-form-field-ripple{height:1px}.mat-focused .mat-form-field-underline .mat-form-field-ripple,.mat-form-field-invalid .mat-form-field-underline .mat-form-field-ripple{visibility:visible;opacity:1;transform:scaleX(1);transition:transform .3s cubic-bezier(.25,.8,.25,1),opacity .1s cubic-bezier(.25,.8,.25,1),background-color .3s cubic-bezier(.25,.8,.25,1)}.mat-form-field-subscript-wrapper{position:absolute;width:100%;overflow:hidden}.mat-form-field-label-wrapper .mat-icon,.mat-form-field-subscript-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block} .mat-input-element{font:inherit;background:0 0;color:currentColor;border:none;outline:0;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element[type=date]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=month]::after,.mat-input-element[type=time]::after,.mat-input-element[type=week]::after{content:' ';white-space:pre;width:1px}.mat-input-element::placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-moz-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element::-webkit-input-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-input-element:-ms-input-placeholder{transition:color .4s .133s cubic-bezier(.25,.8,.25,1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent!important;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent!important;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent!important;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent!important;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-autosize{resize:none}\"],\r\n                    animations: [matFormFieldAnimations.transitionMessages],\r\n                    host: {\r\n                        'class': 'mat-input-container mat-form-field',\r\n                        '[class.mat-input-invalid]': '_control.errorState',\r\n                        '[class.mat-form-field-invalid]': '_control.errorState',\r\n                        '[class.mat-form-field-can-float]': '_canLabelFloat',\r\n                        '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\r\n                        '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\r\n                        '[class.mat-form-field-disabled]': '_control.disabled',\r\n                        '[class.mat-focused]': '_control.focused',\r\n                        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\r\n                        '[class.ng-touched]': '_shouldForward(\"touched\")',\r\n                        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\r\n                        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\r\n                        '[class.ng-valid]': '_shouldForward(\"valid\")',\r\n                        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\r\n                        '[class.ng-pending]': '_shouldForward(\"pending\")',\r\n                    },\r\n                    inputs: ['color'],\r\n                    encapsulation: ViewEncapsulation.None,\r\n                    preserveWhitespaces: false,\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatFormField.ctorParameters = function () { return [\r\n        { type: ElementRef, },\r\n        { type: ChangeDetectorRef, },\r\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] },] },\r\n    ]; };\r\n    MatFormField.propDecorators = {\r\n        \"dividerColor\": [{ type: Input },],\r\n        \"hideRequiredMarker\": [{ type: Input },],\r\n        \"hintLabel\": [{ type: Input },],\r\n        \"floatPlaceholder\": [{ type: Input },],\r\n        \"floatLabel\": [{ type: Input },],\r\n        \"underlineRef\": [{ type: ViewChild, args: ['underline',] },],\r\n        \"_connectionContainerRef\": [{ type: ViewChild, args: ['connectionContainer',] },],\r\n        \"_inputContainerRef\": [{ type: ViewChild, args: ['inputContainer',] },],\r\n        \"_label\": [{ type: ViewChild, args: ['label',] },],\r\n        \"_control\": [{ type: ContentChild, args: [MatFormFieldControl,] },],\r\n        \"_placeholderChild\": [{ type: ContentChild, args: [MatPlaceholder,] },],\r\n        \"_labelChild\": [{ type: ContentChild, args: [MatLabel,] },],\r\n        \"_errorChildren\": [{ type: ContentChildren, args: [MatError,] },],\r\n        \"_hintChildren\": [{ type: ContentChildren, args: [MatHint,] },],\r\n        \"_prefixChildren\": [{ type: ContentChildren, args: [MatPrefix,] },],\r\n        \"_suffixChildren\": [{ type: ContentChildren, args: [MatSuffix,] },],\r\n    };\r\n    return MatFormField;\r\n}(_MatFormFieldMixinBase));\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\nvar MatFormFieldModule = /** @class */ (function () {\r\n    function MatFormFieldModule() {\r\n    }\r\n    MatFormFieldModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    declarations: [\r\n                        MatError,\r\n                        MatHint,\r\n                        MatFormField,\r\n                        MatPlaceholder,\r\n                        MatPrefix,\r\n                        MatSuffix,\r\n                        MatLabel,\r\n                    ],\r\n                    imports: [\r\n                        CommonModule,\r\n                        PlatformModule,\r\n                    ],\r\n                    exports: [\r\n                        MatError,\r\n                        MatHint,\r\n                        MatFormField,\r\n                        MatPlaceholder,\r\n                        MatPrefix,\r\n                        MatSuffix,\r\n                        MatLabel,\r\n                    ],\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MatFormFieldModule.ctorParameters = function () { return []; };\r\n    return MatFormFieldModule;\r\n}());\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { MatFormFieldModule, MatError, MatFormFieldBase, _MatFormFieldMixinBase, MatFormField, MatFormFieldControl, getMatFormFieldPlaceholderConflictError, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, MatHint, MatPlaceholder, MatPrefix, MatSuffix, MatLabel, matFormFieldAnimations };\r\n//# sourceMappingURL=form-field.es5.js.map\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/material/esm5/form-field.es5.js\n// module id = 294\n// module chunks = 0","\"use strict\";\r\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\r\nvar ScalarObservable_1 = require('../observable/ScalarObservable');\r\nvar EmptyObservable_1 = require('../observable/EmptyObservable');\r\nvar concat_1 = require('../observable/concat');\r\nvar isScheduler_1 = require('../util/isScheduler');\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\r\n * items emitted by the source Observable.\r\n *\r\n * <img src=\"./img/startWith.png\" width=\"100%\">\r\n *\r\n * @param {...T} values - Items you want the modified Observable to emit first.\r\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\r\n * the emissions of the `next` notifications.\r\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\r\n * emitted by the source Observable.\r\n * @method startWith\r\n * @owner Observable\r\n */\r\nfunction startWith() {\r\n    var array = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        array[_i - 0] = arguments[_i];\r\n    }\r\n    return function (source) {\r\n        var scheduler = array[array.length - 1];\r\n        if (isScheduler_1.isScheduler(scheduler)) {\r\n            array.pop();\r\n        }\r\n        else {\r\n            scheduler = null;\r\n        }\r\n        var len = array.length;\r\n        if (len === 1) {\r\n            return concat_1.concat(new ScalarObservable_1.ScalarObservable(array[0], scheduler), source);\r\n        }\r\n        else if (len > 1) {\r\n            return concat_1.concat(new ArrayObservable_1.ArrayObservable(array, scheduler), source);\r\n        }\r\n        else {\r\n            return concat_1.concat(new EmptyObservable_1.EmptyObservable(scheduler), source);\r\n        }\r\n    };\r\n}\r\nexports.startWith = startWith;\r\n//# sourceMappingURL=startWith.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/operators/startWith.js\n// module id = 295\n// module chunks = 0","\"use strict\";\r\nvar isScheduler_1 = require('../util/isScheduler');\r\nvar of_1 = require('./of');\r\nvar from_1 = require('./from');\r\nvar concatAll_1 = require('../operators/concatAll');\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Creates an output Observable which sequentially emits all values from given\r\n * Observable and then moves on to the next.\r\n *\r\n * <span class=\"informal\">Concatenates multiple Observables together by\r\n * sequentially emitting their values, one Observable after the other.</span>\r\n *\r\n * <img src=\"./img/concat.png\" width=\"100%\">\r\n *\r\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\r\n * merging their results into the output Observable. You can pass either an array of\r\n * Observables, or put them directly as arguments. Passing an empty array will result\r\n * in Observable that completes immediately.\r\n *\r\n * `concat` will subscribe to first input Observable and emit all its values, without\r\n * changing or affecting them in any way. When that Observable completes, it will\r\n * subscribe to then next Observable passed and, again, emit its values. This will be\r\n * repeated, until the operator runs out of Observables. When last input Observable completes,\r\n * `concat` will complete as well. At any given moment only one Observable passed to operator\r\n * emits values. If you would like to emit values from passed Observables concurrently, check out\r\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\r\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\r\n *\r\n * Note that if some input Observable never completes, `concat` will also never complete\r\n * and Observables following the one that did not complete will never be subscribed. On the other\r\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\r\n * invisible for `concat`, which will just move on to the next Observable.\r\n *\r\n * If any Observable in chain errors, instead of passing control to the next Observable,\r\n * `concat` will error immediately as well. Observables that would be subscribed after\r\n * the one that emitted error, never will.\r\n *\r\n * If you pass to `concat` the same Observable many times, its stream of values\r\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\r\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\r\n * you can always use {@link repeat}.\r\n *\r\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\r\n * var timer = Rx.Observable.interval(1000).take(4);\r\n * var sequence = Rx.Observable.range(1, 10);\r\n * var result = Rx.Observable.concat(timer, sequence);\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // results in:\r\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\r\n *\r\n *\r\n * @example <caption>Concatenate an array of 3 Observables</caption>\r\n * var timer1 = Rx.Observable.interval(1000).take(10);\r\n * var timer2 = Rx.Observable.interval(2000).take(6);\r\n * var timer3 = Rx.Observable.interval(500).take(10);\r\n * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed\r\n * result.subscribe(x => console.log(x));\r\n *\r\n * // results in the following:\r\n * // (Prints to console sequentially)\r\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\r\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\r\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\r\n *\r\n *\r\n * @example <caption>Concatenate the same Observable to repeat it</caption>\r\n * const timer = Rx.Observable.interval(1000).take(2);\r\n *\r\n * Rx.Observable.concat(timer, timer) // concating the same Observable!\r\n * .subscribe(\r\n *   value => console.log(value),\r\n *   err => {},\r\n *   () => console.log('...and it is done!')\r\n * );\r\n *\r\n * // Logs:\r\n * // 0 after 1s\r\n * // 1 after 2s\r\n * // 0 after 3s\r\n * // 1 after 4s\r\n * // \"...and it is done!\" also after 4s\r\n *\r\n * @see {@link concatAll}\r\n * @see {@link concatMap}\r\n * @see {@link concatMapTo}\r\n *\r\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\r\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\r\n * More than one input Observables may be given as argument.\r\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\r\n * Observable subscription on.\r\n * @return {Observable} All values of each passed Observable merged into a\r\n * single Observable, in order, in serial fashion.\r\n * @static true\r\n * @name concat\r\n * @owner Observable\r\n */\r\nfunction concat() {\r\n    var observables = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        observables[_i - 0] = arguments[_i];\r\n    }\r\n    if (observables.length === 1 || (observables.length === 2 && isScheduler_1.isScheduler(observables[1]))) {\r\n        return from_1.from(observables[0]);\r\n    }\r\n    return concatAll_1.concatAll()(of_1.of.apply(void 0, observables));\r\n}\r\nexports.concat = concat;\r\n//# sourceMappingURL=concat.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/concat.js\n// module id = 296\n// module chunks = 0","\"use strict\";\r\nvar FromObservable_1 = require('./FromObservable');\r\nexports.from = FromObservable_1.FromObservable.create;\r\n//# sourceMappingURL=from.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/from.js\n// module id = 297\n// module chunks = 0","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar isArray_1 = require('../util/isArray');\r\nvar isArrayLike_1 = require('../util/isArrayLike');\r\nvar isPromise_1 = require('../util/isPromise');\r\nvar PromiseObservable_1 = require('./PromiseObservable');\r\nvar IteratorObservable_1 = require('./IteratorObservable');\r\nvar ArrayObservable_1 = require('./ArrayObservable');\r\nvar ArrayLikeObservable_1 = require('./ArrayLikeObservable');\r\nvar iterator_1 = require('../symbol/iterator');\r\nvar Observable_1 = require('../Observable');\r\nvar observeOn_1 = require('../operators/observeOn');\r\nvar observable_1 = require('../symbol/observable');\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n */\r\nvar FromObservable = (function (_super) {\r\n    __extends(FromObservable, _super);\r\n    function FromObservable(ish, scheduler) {\r\n        _super.call(this, null);\r\n        this.ish = ish;\r\n        this.scheduler = scheduler;\r\n    }\r\n    /**\r\n     * Creates an Observable from an Array, an array-like object, a Promise, an\r\n     * iterable object, or an Observable-like object.\r\n     *\r\n     * <span class=\"informal\">Converts almost anything to an Observable.</span>\r\n     *\r\n     * <img src=\"./img/from.png\" width=\"100%\">\r\n     *\r\n     * Convert various other objects and data types into Observables. `from`\r\n     * converts a Promise or an array-like or an\r\n     * [iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable)\r\n     * object into an Observable that emits the items in that promise or array or\r\n     * iterable. A String, in this context, is treated as an array of characters.\r\n     * Observable-like objects (contains a function named with the ES2015 Symbol\r\n     * for Observable) can also be converted through this operator.\r\n     *\r\n     * @example <caption>Converts an array to an Observable</caption>\r\n     * var array = [10, 20, 30];\r\n     * var result = Rx.Observable.from(array);\r\n     * result.subscribe(x => console.log(x));\r\n     *\r\n     * // Results in the following:\r\n     * // 10 20 30\r\n     *\r\n     * @example <caption>Convert an infinite iterable (from a generator) to an Observable</caption>\r\n     * function* generateDoubles(seed) {\r\n     *   var i = seed;\r\n     *   while (true) {\r\n     *     yield i;\r\n     *     i = 2 * i; // double it\r\n     *   }\r\n     * }\r\n     *\r\n     * var iterator = generateDoubles(3);\r\n     * var result = Rx.Observable.from(iterator).take(10);\r\n     * result.subscribe(x => console.log(x));\r\n     *\r\n     * // Results in the following:\r\n     * // 3 6 12 24 48 96 192 384 768 1536\r\n     *\r\n     * @see {@link create}\r\n     * @see {@link fromEvent}\r\n     * @see {@link fromEventPattern}\r\n     * @see {@link fromPromise}\r\n     *\r\n     * @param {ObservableInput<T>} ish A subscribable object, a Promise, an\r\n     * Observable-like, an Array, an iterable or an array-like object to be\r\n     * converted.\r\n     * @param {Scheduler} [scheduler] The scheduler on which to schedule the\r\n     * emissions of values.\r\n     * @return {Observable<T>} The Observable whose values are originally from the\r\n     * input object that was converted.\r\n     * @static true\r\n     * @name from\r\n     * @owner Observable\r\n     */\r\n    FromObservable.create = function (ish, scheduler) {\r\n        if (ish != null) {\r\n            if (typeof ish[observable_1.observable] === 'function') {\r\n                if (ish instanceof Observable_1.Observable && !scheduler) {\r\n                    return ish;\r\n                }\r\n                return new FromObservable(ish, scheduler);\r\n            }\r\n            else if (isArray_1.isArray(ish)) {\r\n                return new ArrayObservable_1.ArrayObservable(ish, scheduler);\r\n            }\r\n            else if (isPromise_1.isPromise(ish)) {\r\n                return new PromiseObservable_1.PromiseObservable(ish, scheduler);\r\n            }\r\n            else if (typeof ish[iterator_1.iterator] === 'function' || typeof ish === 'string') {\r\n                return new IteratorObservable_1.IteratorObservable(ish, scheduler);\r\n            }\r\n            else if (isArrayLike_1.isArrayLike(ish)) {\r\n                return new ArrayLikeObservable_1.ArrayLikeObservable(ish, scheduler);\r\n            }\r\n        }\r\n        throw new TypeError((ish !== null && typeof ish || ish) + ' is not observable');\r\n    };\r\n    FromObservable.prototype._subscribe = function (subscriber) {\r\n        var ish = this.ish;\r\n        var scheduler = this.scheduler;\r\n        if (scheduler == null) {\r\n            return ish[observable_1.observable]().subscribe(subscriber);\r\n        }\r\n        else {\r\n            return ish[observable_1.observable]().subscribe(new observeOn_1.ObserveOnSubscriber(subscriber, scheduler, 0));\r\n        }\r\n    };\r\n    return FromObservable;\r\n}(Observable_1.Observable));\r\nexports.FromObservable = FromObservable;\r\n//# sourceMappingURL=FromObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/FromObservable.js\n// module id = 298\n// module chunks = 0","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar root_1 = require('../util/root');\r\nvar Observable_1 = require('../Observable');\r\nvar iterator_1 = require('../symbol/iterator');\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n */\r\nvar IteratorObservable = (function (_super) {\r\n    __extends(IteratorObservable, _super);\r\n    function IteratorObservable(iterator, scheduler) {\r\n        _super.call(this);\r\n        this.scheduler = scheduler;\r\n        if (iterator == null) {\r\n            throw new Error('iterator cannot be null.');\r\n        }\r\n        this.iterator = getIterator(iterator);\r\n    }\r\n    IteratorObservable.create = function (iterator, scheduler) {\r\n        return new IteratorObservable(iterator, scheduler);\r\n    };\r\n    IteratorObservable.dispatch = function (state) {\r\n        var index = state.index, hasError = state.hasError, iterator = state.iterator, subscriber = state.subscriber;\r\n        if (hasError) {\r\n            subscriber.error(state.error);\r\n            return;\r\n        }\r\n        var result = iterator.next();\r\n        if (result.done) {\r\n            subscriber.complete();\r\n            return;\r\n        }\r\n        subscriber.next(result.value);\r\n        state.index = index + 1;\r\n        if (subscriber.closed) {\r\n            if (typeof iterator.return === 'function') {\r\n                iterator.return();\r\n            }\r\n            return;\r\n        }\r\n        this.schedule(state);\r\n    };\r\n    IteratorObservable.prototype._subscribe = function (subscriber) {\r\n        var index = 0;\r\n        var _a = this, iterator = _a.iterator, scheduler = _a.scheduler;\r\n        if (scheduler) {\r\n            return scheduler.schedule(IteratorObservable.dispatch, 0, {\r\n                index: index, iterator: iterator, subscriber: subscriber\r\n            });\r\n        }\r\n        else {\r\n            do {\r\n                var result = iterator.next();\r\n                if (result.done) {\r\n                    subscriber.complete();\r\n                    break;\r\n                }\r\n                else {\r\n                    subscriber.next(result.value);\r\n                }\r\n                if (subscriber.closed) {\r\n                    if (typeof iterator.return === 'function') {\r\n                        iterator.return();\r\n                    }\r\n                    break;\r\n                }\r\n            } while (true);\r\n        }\r\n    };\r\n    return IteratorObservable;\r\n}(Observable_1.Observable));\r\nexports.IteratorObservable = IteratorObservable;\r\nvar StringIterator = (function () {\r\n    function StringIterator(str, idx, len) {\r\n        if (idx === void 0) { idx = 0; }\r\n        if (len === void 0) { len = str.length; }\r\n        this.str = str;\r\n        this.idx = idx;\r\n        this.len = len;\r\n    }\r\n    StringIterator.prototype[iterator_1.iterator] = function () { return (this); };\r\n    StringIterator.prototype.next = function () {\r\n        return this.idx < this.len ? {\r\n            done: false,\r\n            value: this.str.charAt(this.idx++)\r\n        } : {\r\n            done: true,\r\n            value: undefined\r\n        };\r\n    };\r\n    return StringIterator;\r\n}());\r\nvar ArrayIterator = (function () {\r\n    function ArrayIterator(arr, idx, len) {\r\n        if (idx === void 0) { idx = 0; }\r\n        if (len === void 0) { len = toLength(arr); }\r\n        this.arr = arr;\r\n        this.idx = idx;\r\n        this.len = len;\r\n    }\r\n    ArrayIterator.prototype[iterator_1.iterator] = function () { return this; };\r\n    ArrayIterator.prototype.next = function () {\r\n        return this.idx < this.len ? {\r\n            done: false,\r\n            value: this.arr[this.idx++]\r\n        } : {\r\n            done: true,\r\n            value: undefined\r\n        };\r\n    };\r\n    return ArrayIterator;\r\n}());\r\nfunction getIterator(obj) {\r\n    var i = obj[iterator_1.iterator];\r\n    if (!i && typeof obj === 'string') {\r\n        return new StringIterator(obj);\r\n    }\r\n    if (!i && obj.length !== undefined) {\r\n        return new ArrayIterator(obj);\r\n    }\r\n    if (!i) {\r\n        throw new TypeError('object is not iterable');\r\n    }\r\n    return obj[iterator_1.iterator]();\r\n}\r\nvar maxSafeInteger = Math.pow(2, 53) - 1;\r\nfunction toLength(o) {\r\n    var len = +o.length;\r\n    if (isNaN(len)) {\r\n        return 0;\r\n    }\r\n    if (len === 0 || !numberIsFinite(len)) {\r\n        return len;\r\n    }\r\n    len = sign(len) * Math.floor(Math.abs(len));\r\n    if (len <= 0) {\r\n        return 0;\r\n    }\r\n    if (len > maxSafeInteger) {\r\n        return maxSafeInteger;\r\n    }\r\n    return len;\r\n}\r\nfunction numberIsFinite(value) {\r\n    return typeof value === 'number' && root_1.root.isFinite(value);\r\n}\r\nfunction sign(value) {\r\n    var valueAsNumber = +value;\r\n    if (valueAsNumber === 0) {\r\n        return valueAsNumber;\r\n    }\r\n    if (isNaN(valueAsNumber)) {\r\n        return valueAsNumber;\r\n    }\r\n    return valueAsNumber < 0 ? -1 : 1;\r\n}\r\n//# sourceMappingURL=IteratorObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/IteratorObservable.js\n// module id = 299\n// module chunks = 0","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Observable_1 = require('../Observable');\r\nvar ScalarObservable_1 = require('./ScalarObservable');\r\nvar EmptyObservable_1 = require('./EmptyObservable');\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @extends {Ignored}\r\n * @hide true\r\n */\r\nvar ArrayLikeObservable = (function (_super) {\r\n    __extends(ArrayLikeObservable, _super);\r\n    function ArrayLikeObservable(arrayLike, scheduler) {\r\n        _super.call(this);\r\n        this.arrayLike = arrayLike;\r\n        this.scheduler = scheduler;\r\n        if (!scheduler && arrayLike.length === 1) {\r\n            this._isScalar = true;\r\n            this.value = arrayLike[0];\r\n        }\r\n    }\r\n    ArrayLikeObservable.create = function (arrayLike, scheduler) {\r\n        var length = arrayLike.length;\r\n        if (length === 0) {\r\n            return new EmptyObservable_1.EmptyObservable();\r\n        }\r\n        else if (length === 1) {\r\n            return new ScalarObservable_1.ScalarObservable(arrayLike[0], scheduler);\r\n        }\r\n        else {\r\n            return new ArrayLikeObservable(arrayLike, scheduler);\r\n        }\r\n    };\r\n    ArrayLikeObservable.dispatch = function (state) {\r\n        var arrayLike = state.arrayLike, index = state.index, length = state.length, subscriber = state.subscriber;\r\n        if (subscriber.closed) {\r\n            return;\r\n        }\r\n        if (index >= length) {\r\n            subscriber.complete();\r\n            return;\r\n        }\r\n        subscriber.next(arrayLike[index]);\r\n        state.index = index + 1;\r\n        this.schedule(state);\r\n    };\r\n    ArrayLikeObservable.prototype._subscribe = function (subscriber) {\r\n        var index = 0;\r\n        var _a = this, arrayLike = _a.arrayLike, scheduler = _a.scheduler;\r\n        var length = arrayLike.length;\r\n        if (scheduler) {\r\n            return scheduler.schedule(ArrayLikeObservable.dispatch, 0, {\r\n                arrayLike: arrayLike, index: index, length: length, subscriber: subscriber\r\n            });\r\n        }\r\n        else {\r\n            for (var i = 0; i < length && !subscriber.closed; i++) {\r\n                subscriber.next(arrayLike[i]);\r\n            }\r\n            subscriber.complete();\r\n        }\r\n    };\r\n    return ArrayLikeObservable;\r\n}(Observable_1.Observable));\r\nexports.ArrayLikeObservable = ArrayLikeObservable;\r\n//# sourceMappingURL=ArrayLikeObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/ArrayLikeObservable.js\n// module id = 300\n// module chunks = 0","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar Notification_1 = require('../Notification');\r\n/**\r\n *\r\n * Re-emits all notifications from source Observable with specified scheduler.\r\n *\r\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\r\n *\r\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\r\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\r\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\r\n *\r\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\r\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\r\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\r\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\r\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\r\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\r\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\r\n * little bit more, to ensure that they are emitted at expected moments.\r\n *\r\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\r\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\r\n * will delay all notifications - including error notifications - while `delay` will pass through error\r\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\r\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\r\n * for notification emissions in general.\r\n *\r\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\r\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\r\n *                                               // with async scheduler by default...\r\n *\r\n * intervals\r\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\r\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\r\n *   someDiv.style.height = val + 'px';\r\n * });\r\n *\r\n * @see {@link delay}\r\n *\r\n * @param {IScheduler} scheduler Scheduler that will be used to reschedule notifications from source Observable.\r\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\r\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\r\n * but with provided scheduler.\r\n *\r\n * @method observeOn\r\n * @owner Observable\r\n */\r\nfunction observeOn(scheduler, delay) {\r\n    if (delay === void 0) { delay = 0; }\r\n    return function observeOnOperatorFunction(source) {\r\n        return source.lift(new ObserveOnOperator(scheduler, delay));\r\n    };\r\n}\r\nexports.observeOn = observeOn;\r\nvar ObserveOnOperator = (function () {\r\n    function ObserveOnOperator(scheduler, delay) {\r\n        if (delay === void 0) { delay = 0; }\r\n        this.scheduler = scheduler;\r\n        this.delay = delay;\r\n    }\r\n    ObserveOnOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\r\n    };\r\n    return ObserveOnOperator;\r\n}());\r\nexports.ObserveOnOperator = ObserveOnOperator;\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar ObserveOnSubscriber = (function (_super) {\r\n    __extends(ObserveOnSubscriber, _super);\r\n    function ObserveOnSubscriber(destination, scheduler, delay) {\r\n        if (delay === void 0) { delay = 0; }\r\n        _super.call(this, destination);\r\n        this.scheduler = scheduler;\r\n        this.delay = delay;\r\n    }\r\n    ObserveOnSubscriber.dispatch = function (arg) {\r\n        var notification = arg.notification, destination = arg.destination;\r\n        notification.observe(destination);\r\n        this.unsubscribe();\r\n    };\r\n    ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {\r\n        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\r\n    };\r\n    ObserveOnSubscriber.prototype._next = function (value) {\r\n        this.scheduleMessage(Notification_1.Notification.createNext(value));\r\n    };\r\n    ObserveOnSubscriber.prototype._error = function (err) {\r\n        this.scheduleMessage(Notification_1.Notification.createError(err));\r\n    };\r\n    ObserveOnSubscriber.prototype._complete = function () {\r\n        this.scheduleMessage(Notification_1.Notification.createComplete());\r\n    };\r\n    return ObserveOnSubscriber;\r\n}(Subscriber_1.Subscriber));\r\nexports.ObserveOnSubscriber = ObserveOnSubscriber;\r\nvar ObserveOnMessage = (function () {\r\n    function ObserveOnMessage(notification, destination) {\r\n        this.notification = notification;\r\n        this.destination = destination;\r\n    }\r\n    return ObserveOnMessage;\r\n}());\r\nexports.ObserveOnMessage = ObserveOnMessage;\r\n//# sourceMappingURL=observeOn.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/operators/observeOn.js\n// module id = 301\n// module chunks = 0","\"use strict\";\r\nvar Observable_1 = require('./Observable');\r\n/**\r\n * Represents a push-based event or value that an {@link Observable} can emit.\r\n * This class is particularly useful for operators that manage notifications,\r\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\r\n * others. Besides wrapping the actual delivered value, it also annotates it\r\n * with metadata of, for instance, what type of push message it is (`next`,\r\n * `error`, or `complete`).\r\n *\r\n * @see {@link materialize}\r\n * @see {@link dematerialize}\r\n * @see {@link observeOn}\r\n *\r\n * @class Notification<T>\r\n */\r\nvar Notification = (function () {\r\n    function Notification(kind, value, error) {\r\n        this.kind = kind;\r\n        this.value = value;\r\n        this.error = error;\r\n        this.hasValue = kind === 'N';\r\n    }\r\n    /**\r\n     * Delivers to the given `observer` the value wrapped by this Notification.\r\n     * @param {Observer} observer\r\n     * @return\r\n     */\r\n    Notification.prototype.observe = function (observer) {\r\n        switch (this.kind) {\r\n            case 'N':\r\n                return observer.next && observer.next(this.value);\r\n            case 'E':\r\n                return observer.error && observer.error(this.error);\r\n            case 'C':\r\n                return observer.complete && observer.complete();\r\n        }\r\n    };\r\n    /**\r\n     * Given some {@link Observer} callbacks, deliver the value represented by the\r\n     * current Notification to the correctly corresponding callback.\r\n     * @param {function(value: T): void} next An Observer `next` callback.\r\n     * @param {function(err: any): void} [error] An Observer `error` callback.\r\n     * @param {function(): void} [complete] An Observer `complete` callback.\r\n     * @return {any}\r\n     */\r\n    Notification.prototype.do = function (next, error, complete) {\r\n        var kind = this.kind;\r\n        switch (kind) {\r\n            case 'N':\r\n                return next && next(this.value);\r\n            case 'E':\r\n                return error && error(this.error);\r\n            case 'C':\r\n                return complete && complete();\r\n        }\r\n    };\r\n    /**\r\n     * Takes an Observer or its individual callback functions, and calls `observe`\r\n     * or `do` methods accordingly.\r\n     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\r\n     * the `next` callback.\r\n     * @param {function(err: any): void} [error] An Observer `error` callback.\r\n     * @param {function(): void} [complete] An Observer `complete` callback.\r\n     * @return {any}\r\n     */\r\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\r\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\r\n            return this.observe(nextOrObserver);\r\n        }\r\n        else {\r\n            return this.do(nextOrObserver, error, complete);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a simple Observable that just delivers the notification represented\r\n     * by this Notification instance.\r\n     * @return {any}\r\n     */\r\n    Notification.prototype.toObservable = function () {\r\n        var kind = this.kind;\r\n        switch (kind) {\r\n            case 'N':\r\n                return Observable_1.Observable.of(this.value);\r\n            case 'E':\r\n                return Observable_1.Observable.throw(this.error);\r\n            case 'C':\r\n                return Observable_1.Observable.empty();\r\n        }\r\n        throw new Error('unexpected notification kind value');\r\n    };\r\n    /**\r\n     * A shortcut to create a Notification instance of the type `next` from a\r\n     * given value.\r\n     * @param {T} value The `next` value.\r\n     * @return {Notification<T>} The \"next\" Notification representing the\r\n     * argument.\r\n     */\r\n    Notification.createNext = function (value) {\r\n        if (typeof value !== 'undefined') {\r\n            return new Notification('N', value);\r\n        }\r\n        return Notification.undefinedValueNotification;\r\n    };\r\n    /**\r\n     * A shortcut to create a Notification instance of the type `error` from a\r\n     * given error.\r\n     * @param {any} [err] The `error` error.\r\n     * @return {Notification<T>} The \"error\" Notification representing the\r\n     * argument.\r\n     */\r\n    Notification.createError = function (err) {\r\n        return new Notification('E', undefined, err);\r\n    };\r\n    /**\r\n     * A shortcut to create a Notification instance of the type `complete`.\r\n     * @return {Notification<any>} The valueless \"complete\" Notification.\r\n     */\r\n    Notification.createComplete = function () {\r\n        return Notification.completeNotification;\r\n    };\r\n    Notification.completeNotification = new Notification('C');\r\n    Notification.undefinedValueNotification = new Notification('N', undefined);\r\n    return Notification;\r\n}());\r\nexports.Notification = Notification;\r\n//# sourceMappingURL=Notification.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/Notification.js\n// module id = 302\n// module chunks = 0","\"use strict\";\r\nvar mergeAll_1 = require('./mergeAll');\r\n/**\r\n * Converts a higher-order Observable into a first-order Observable by\r\n * concatenating the inner Observables in order.\r\n *\r\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\r\n * inner Observable after the other.</span>\r\n *\r\n * <img src=\"./img/concatAll.png\" width=\"100%\">\r\n *\r\n * Joins every Observable emitted by the source (a higher-order Observable), in\r\n * a serial fashion. It subscribes to each inner Observable only after the\r\n * previous inner Observable has completed, and merges all of their values into\r\n * the returned observable.\r\n *\r\n * __Warning:__ If the source Observable emits Observables quickly and\r\n * endlessly, and the inner Observables it emits generally complete slower than\r\n * the source emits, you can run into memory issues as the incoming Observables\r\n * collect in an unbounded buffer.\r\n *\r\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\r\n * to `1`.\r\n *\r\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\r\n * var clicks = Rx.Observable.fromEvent(document, 'click');\r\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\r\n * var firstOrder = higherOrder.concatAll();\r\n * firstOrder.subscribe(x => console.log(x));\r\n *\r\n * // Results in the following:\r\n * // (results are not concurrent)\r\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\r\n * // on a 1000ms interval\r\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\r\n *\r\n * @see {@link combineAll}\r\n * @see {@link concat}\r\n * @see {@link concatMap}\r\n * @see {@link concatMapTo}\r\n * @see {@link exhaust}\r\n * @see {@link mergeAll}\r\n * @see {@link switch}\r\n * @see {@link zipAll}\r\n *\r\n * @return {Observable} An Observable emitting values from all the inner\r\n * Observables concatenated.\r\n * @method concatAll\r\n * @owner Observable\r\n */\r\nfunction concatAll() {\r\n    return mergeAll_1.mergeAll(1);\r\n}\r\nexports.concatAll = concatAll;\r\n//# sourceMappingURL=concatAll.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/operators/concatAll.js\n// module id = 303\n// module chunks = 0","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar Subscriber_1 = require('../Subscriber');\r\nvar ArgumentOutOfRangeError_1 = require('../util/ArgumentOutOfRangeError');\r\nvar EmptyObservable_1 = require('../observable/EmptyObservable');\r\n/**\r\n * Emits only the first `count` values emitted by the source Observable.\r\n *\r\n * <span class=\"informal\">Takes the first `count` values from the source, then\r\n * completes.</span>\r\n *\r\n * <img src=\"./img/take.png\" width=\"100%\">\r\n *\r\n * `take` returns an Observable that emits only the first `count` values emitted\r\n * by the source Observable. If the source emits fewer than `count` values then\r\n * all of its values are emitted. After that, it completes, regardless if the\r\n * source completes.\r\n *\r\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\r\n * var interval = Rx.Observable.interval(1000);\r\n * var five = interval.take(5);\r\n * five.subscribe(x => console.log(x));\r\n *\r\n * @see {@link takeLast}\r\n * @see {@link takeUntil}\r\n * @see {@link takeWhile}\r\n * @see {@link skip}\r\n *\r\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\r\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\r\n *\r\n * @param {number} count The maximum number of `next` values to emit.\r\n * @return {Observable<T>} An Observable that emits only the first `count`\r\n * values emitted by the source Observable, or all of the values from the source\r\n * if the source emits fewer than `count` values.\r\n * @method take\r\n * @owner Observable\r\n */\r\nfunction take(count) {\r\n    return function (source) {\r\n        if (count === 0) {\r\n            return new EmptyObservable_1.EmptyObservable();\r\n        }\r\n        else {\r\n            return source.lift(new TakeOperator(count));\r\n        }\r\n    };\r\n}\r\nexports.take = take;\r\nvar TakeOperator = (function () {\r\n    function TakeOperator(total) {\r\n        this.total = total;\r\n        if (this.total < 0) {\r\n            throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;\r\n        }\r\n    }\r\n    TakeOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\r\n    };\r\n    return TakeOperator;\r\n}());\r\n/**\r\n * We need this JSDoc comment for affecting ESDoc.\r\n * @ignore\r\n * @extends {Ignored}\r\n */\r\nvar TakeSubscriber = (function (_super) {\r\n    __extends(TakeSubscriber, _super);\r\n    function TakeSubscriber(destination, total) {\r\n        _super.call(this, destination);\r\n        this.total = total;\r\n        this.count = 0;\r\n    }\r\n    TakeSubscriber.prototype._next = function (value) {\r\n        var total = this.total;\r\n        var count = ++this.count;\r\n        if (count <= total) {\r\n            this.destination.next(value);\r\n            if (count === total) {\r\n                this.destination.complete();\r\n                this.unsubscribe();\r\n            }\r\n        }\r\n    };\r\n    return TakeSubscriber;\r\n}(Subscriber_1.Subscriber));\r\n//# sourceMappingURL=take.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/operators/take.js\n// module id = 304\n// module chunks = 0","\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\n/**\r\n * An error thrown when an element was queried at a certain index of an\r\n * Observable, but no such index or position exists in that sequence.\r\n *\r\n * @see {@link elementAt}\r\n * @see {@link take}\r\n * @see {@link takeLast}\r\n *\r\n * @class ArgumentOutOfRangeError\r\n */\r\nvar ArgumentOutOfRangeError = (function (_super) {\r\n    __extends(ArgumentOutOfRangeError, _super);\r\n    function ArgumentOutOfRangeError() {\r\n        var err = _super.call(this, 'argument out of range');\r\n        this.name = err.name = 'ArgumentOutOfRangeError';\r\n        this.stack = err.stack;\r\n        this.message = err.message;\r\n    }\r\n    return ArgumentOutOfRangeError;\r\n}(Error));\r\nexports.ArgumentOutOfRangeError = ArgumentOutOfRangeError;\r\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/util/ArgumentOutOfRangeError.js\n// module id = 305\n// module chunks = 0"],"sourceRoot":""}